<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emc.InputAccel.Workflow.Client</name>
    </assembly>
    <members>
        <member name="T:Emc.InputAccel.Workflow.Client.ICopyPasteSettings">
            <summary>
             Provides functionality for objects to copy and paste settings.
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICopyPasteSettings.CopySettings">
            <summary>
            Copies the values to the clipboard.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICopyPasteSettings.CopySettings(System.IO.Stream)">
            <summary>
            Copies values from an object to a stream.
            </summary>
            <remarks>
            The most common use is to copy values to a file.
            </remarks>
            <param name="stream">The stream to be populated with the copied values.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICopyPasteSettings.PasteSettings">
            <summary>
            Pastes the values from the clipboard.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICopyPasteSettings.PasteSettings(System.IO.Stream)">
            <summary>
            Paste values from a stream into an object.
            </summary>
            <param name="stream">The stream containing the values to be pasted.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IAValueType">
            <summary>
            MDF IA Value types.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.Integer">
            <summary>
            16 bit integer
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.Long">
            <summary>
            32 bit integer
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.File">
            <summary>
            File
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.Single">
            <summary>
            Single precision float
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.Double">
            <summary>
            Double precision float
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.Currency">
            <summary>
            VB currency type
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.Date">
            <summary>
            VB date type
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.Object">
            <summary>
            Object
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.IAVariant">
            <summary>
            IAVariant
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.DateTime">
            <summary>
            IADateTime
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IAValueType.Boolean">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskCountType">
            <summary>
            Types of tasks to count.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.All">
            <summary>
            Count of all active and queued tasks.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.Active">
            <summary>
            Count of all active tasks.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.Done">
            <summary>
            Count of all tasks in the Done state.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.Error">
            <summary>
            Count of all tasks in the Error state.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.NotReady">
            <summary>
            Count of tasks in the Not Ready state.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.Offline">
            <summary>
            Count of all offline tasks.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.Queued">
            <summary>
            Count of all queued tasks.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.Sent">
            <summary>
            Count of all tasks that have been sent for processing.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskCountType.Working">
            <summary>
            Count of all working tasks.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.FileCreateOption">
            <summary>
            File access attributes.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileCreateOption.Normal">
            <summary>
            Overwrites the destination file if it already exists.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileCreateOption.Exclusive">
            <summary>
            File creation fails if the destination file already exists.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileCreateOption.SyncWrite">
            <summary>
            File writing is syncrhonous (waits for the InputAccel Server to respond).
            This enables the write operation (in <see cref="M:System.IO.Stream.Close"/> 
            or <see cref="M:System.IO.Stream.Dispose"/>) to report an error.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.FileOpenAttributes">
            <summary>
            File open attributes.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileOpenAttributes.Read">
            <summary>
            The file has read-only access.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileOpenAttributes.Write">
            <summary>
            The file has write-only access.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileOpenAttributes.Both">
            <summary>
            The file has read/write access.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileOpenAttributes.DenyAll">
            <summary>
            Deny read/write access to other Windows processes.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileOpenAttributes.DenyWrite">
            <summary>
            Deny write access to other Windows processes.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileOpenAttributes.DenyRead">
            <summary>
            Deny read access to other Windows processes.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FileOpenAttributes.DenyNone">
            <summary>
            Do not deny any access to other Windows processes.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.CacheType">
            <summary>
            Type of IA Values in the cache.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.CacheType.Read">
            <summary>
            IA Values read into the cache fron the InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.CacheType.Write">
            <summary>
            IA Values written to the cache and waiting to be sent to the InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.CacheType.File">
            <summary>
            Files read into the cache from the InputAccel Server. 
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.CacheType.All">
            <summary>
            All cache types.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.AccessPermission">
            <summary>
            Permission constants.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.AccessPermission.None">
            <summary>
             No permission.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.AccessPermission.Read">
            <summary>
            Read permission.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.AccessPermission.Write">
            <summary>
            Write permission.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.AccessPermission.Execute">
            <summary>
            Execute permission.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.AccessPermission.Delete">
            <summary>
            Delete permission.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.AccessPermission.ChangePermission">
            <summary>
            Permission to change permissions.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.Department">
            <summary>
            Indicates whether a process or batch is for the current department or any department.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.Department.Current">
            <summary>
            The processes/batches are for the current department(s).
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.Department.Any">
            <summary>
            The processes/batches are for any departments.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskedModule">
            <summary>
            Used by <see cref="T:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters" /> 
            to indicate whether to return only the batches 
            of the specified module step that have pending tasks, or to return all batches of 
            the module step, regardless of whether the batches contain tasks.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskedModule.TaskedAndNonTasked">
            <summary>
            Returns batches containing a client module with and without pending tasks.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskedModule.Tasked">
            <summary>
            Returns batches containing a client module with pending tasks.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchStatus">
            <summary>
            Batch status values.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.BatchStatus.NotReady">
            <summary>
            The batch is not ready to be processed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.BatchStatus.Ready">
            <summary>
            The batch is ready to be processed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.BatchStatus.Working">
            <summary>
            The batch contains one or more tasks being worked on.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.BatchStatus.Done">
            <summary>
            The batch contains all tasks that have been completed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.BatchStatus.Sent">
            <summary>
            The batch contains one or more tasks that are sent to a client module but have not yet started processing.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.BatchStatus.BatchHold">
            <summary>
            The batch is on hold.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.BatchStatus.BatchError">
            <summary>
            Error at the batch level. Prevents all tasks in a batch from being processed.
            </summary>
            
            <remarks>
            Setting a batch on error is equivalent to the deprecated method of setting batch priority to zero.
            </remarks>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.BatchStatus.TaskError">
            <summary>
            One or more errors at the task level. Does not prevent other tasks from being processed.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskStatus">
            <summary>
            Task status values.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.NotApplicable">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.NotReady">
            <summary>
            Task is not ready to be processed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.Ready">
            <summary>
            Task is ready to be processed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.Working">
            <summary>
            Task is being processed. 
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.Done">
            <summary>
            Task has finished processing.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.Sent">
            <summary>
            Task has been sent to a client module but has not yet started processing.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.Hold">
            <summary>
            Task is on hold.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.OfflineWaiting">
            <summary>
            Task is offline. 
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.OfflineProcessing">
            <summary>
            Task is offline and is currently being processed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TaskStatus.Error">
            <summary>
            There is an error at the task level. (This does not prevent other tasks from being processed.)
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.Component">
            <summary>
            Constants for InputAccel client and server components.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.Component.Client">
            <summary>
            InputAccel .NET client file version.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.Component.BaseLibrary">
            <summary>
            iaclnt32.dll file version.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LockType">
            <summary>
            Node lock types.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LockType.Modify">
            <summary>
            An InputAccel "C" or change lock.
            <para>
            Prevents:
            </para>
            <list type="bullet">
            <item>
            Delete locks on the nodes immediate children.
            </item>
            <item>
            Modify lock, Delete lock, and task processing on the node.
            </item>
            <item>
            Delete locks and task processing on the node's ancestors.
            </item>
            </list>
            <para>
            Allows:
            </para>
            <list type="bullet">
            <item>
            Moving or adding child nodes.
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LockType.Delete">
            <summary>
            An InputAccel "D" or delete lock.
            <para>
            Prevents:
            </para>
            <list type="bullet">
            <item>
            Modify locks, Delete locks, and task processing on the node and its children.
            </item>
            <item>
            Delete locks and task processing on the node's ancestors including its immediate parent.
            </item>
            <item>
            Prevents a Modify lock on the node's immediate parent.
            </item>
            </list>
            <para>
            Allows:
            </para>
            <list type="bullet">
            <item>
            Deletion of the node and/or its children.
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ExceptionCode">
            <summary>
            Error codes used to identify exceptions.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CLIENT">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ClientException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CLNT32">
            <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.ACTIVATION">
            <summary>
            An exception class to wrap IACLNT32 errors.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCH">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHCAST">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchCastException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHCREATE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchCreateException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHCOPY">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchCopyException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHDELETE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchDeleteException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHEXPORTFILEFORMAT">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchExportFileFormatException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHPROCESSCOPYSETTINGS">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchProcessCopySettingsException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHPROCESSDEFAULTVALUES">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchProcessDefaultValuesException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHPROCESSGETGUID">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchProcessGetGuidException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHPROCESSLISTVALUES">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchProcessListValuesException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHPROCESSPASTESETTINGS">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchProcessPasteSettingsException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHPROPERTIES">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchPropertiesException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHRETRIEVAL">
            <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CACHE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.CacheException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CACHEGETBINARY">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.CacheGetBinaryException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CLIENTNOTINITIALIZED">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ClientNotInitializedException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CLIENTSETPROPERTY">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ClientSetPropertyException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.COPYPASTESETTINGS">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.CopyPasteSettingsException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.FILE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.FileException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.FILEEXTERNALSTORAGECOPY">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.FileExternalStorageException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.FILESERVERCOPY">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.FileServerCopyException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.GETTINGTAG">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.GettingTagException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.GETFILEFROMSERVER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.GetFileFromServerException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.GETSERVER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.GetServerException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.STEPRETRIGGER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.StepRetriggerException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.STEPCAST">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.StepCastException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.STEPTASKCOUNTTYPE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.StepTaskCountTypeException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.STEPTRIGGERLEVEL">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.StepTriggerLevelException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.INVALIDSERVERRESOURCE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.InvalidServerResourceException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.INVALIDVALUEPROVIDER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.InvalidValueProviderException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.LICENSE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.LicenseException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.LICENSEDATE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.LicenseDateException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.LICENSEHEADER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.LicenseHeaderException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.LIST">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ListException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.LISTMOVENEXT">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ListMoveNextException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.LOCK">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.LockException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.LOCKCREATE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.LockCreateException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.LOGON">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.LogOnException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NOAVAILABLESERVER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NoAvailableServerException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODEADD">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeAddException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODEADDLEVEL0CHILDREN">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeAddLevel0ChildrenException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODEADDOUTOFRANGE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeAddOutOfRangeException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODECOMMIT">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeCommitException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODEDELETE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeDeleteException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODEFIRSTTASKEDCHILD">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeFirstTaskedChildException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODELEVEL">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeLevelException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODEMOVE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeMoveException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NODETRIGGERLEVELTOOHIGH">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.NodeTriggerLevelTooHighException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.NULLINSTANCE">
            <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.OFFLINETASK">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.OfflineTaskException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.PROCESSDELETE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ProcessDeleteException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.PROCESSDIRECTORYDELETE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryDeleteException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.PROCESSDIRECTORYINVALID">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryInvalidException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.PROCESSDIRECTORYLIST">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryListException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.PROCESSDIRECTORYRENAME">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryRenameException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.PROCESSINSTALL">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ProcessInstallException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SECURITYCOMMIT">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.SecurityCommitException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SECURITYINIT">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.SecurityInitException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SECURITYINVALIDPERMISSION">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.SecurityInvalidPermissionException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SECURITYPERMISSIONSLIST">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.SecurityPermissionsListException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SECURITYSETACCESS">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.SecuritySetAccessException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SECURITYSETITEM">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.SecuritySetItemException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERAVAILABLE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerAvailableException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERINVALID">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerInvalidException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERNOTINITIALIZED">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerNotInitializedException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SECURITY">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.SecurityException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTING">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGCAST">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingCastException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGINVALIDPARAMETER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingInvalidParameterException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGINVALIDSCOPE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingInvalidScopeException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGINVALIDTYPE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingInvalidTypeException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGMAXVALUE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingMaxValueException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGMINVALUE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingMinValueException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGNULLVALUE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingNullValueException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGSETPERSISTENTVALUE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingSetPersistentValueException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGSETREADONLYVALUE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingSetReadOnlyValueException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGSETVALUE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingSetValueException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGSTRINGTOOLONG">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingStringTooLongException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SETTINGTAG">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.SettingTagException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.STREAM">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.StreamException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.STREAMPROPERTY">
            <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TASK">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.TaskException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TASKALREADYFINISHED">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.TaskAlreadyFinishedException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TASKFINISH">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.TaskFinishException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TASKNOTINITIALIZED">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.TaskNotInitializedException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TASKPREPARE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.TaskPrepareException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TREE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.TreeException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TREELOCK">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.TreeLockException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TREENOTINITIALIZED">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.TreeNotInitializedException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VALUEGET">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ValueGetException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VALUEGETARRAY">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ValueGetArrayException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VALUEPROVIDER">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ValueProviderException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VALUEPROVIDERCONSTRUCTOR">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ValueProviderConstructorException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VALUEPROVIDERDELETE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ValueProviderDeleteException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VALUEPROVIDERINVALIDTYPE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ValueProviderInvalidTypeException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VALUESET">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ValueSetException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VALUESETSTREAM">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ValueSetStreamException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.VARIABLENAMETOOLONG">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.VariableNameTooLongException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CONNECTION">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ConnectionException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERSETTINGNEGATIVEVALUE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingNegativeValueException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.TASKCANCELOFFLINE">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.CancelOfflineTaskException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHPROCESSDELETED">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchProcessDeletedException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.GLOBALDEPARTMENTS">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.GlobalDepartmentsException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHCREATEALREADYEXISTS">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchCreateAlreadyExistsException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.BATCHCREATEPROCESSNOTFOUND">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.BatchCreateProcessNotFoundException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CONNECTIONPROPERTIES">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ConnectionPropertiesException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.CONNECTIONDISCONNECT">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ConnectionDisconnectException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.ACTIVATIONLOAD">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ActivationLoadException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.PROCESSDIRECTORY">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryException"/>.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ExceptionCode.SERVERDISCONNECTED">
            <summary>
            See <see cref="T:Emc.InputAccel.Workflow.Client.ServerDisconnectedException"/>.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingAccess">
            <summary>
             InputAccel Server setting access attributes.
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerSettingAccess.Read">
            <summary>
             The InputAccel Server setting has read-only access.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerSettingAccess.Write">
            <summary>
             The InputAccel Server setting has write-only access.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerSettingAccess.ReadWrite">
            <summary>
             The InputAccel Server setting has read-write access.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerSettingAccess.Hidden">
            <summary>
             This is a hidden setting, not displayed in the User interface. 
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingScope">
            <summary>
             Scope of an InputAccel Server setting. 
             Specified as a parameter when writing out server settings.
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerSettingScope.Current">
            <summary>
             In-memory InputAccel Server setting.
            </summary>
             <remarks>
             Setting applied to the current running instance of the InputAccel Server.
             </remarks>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerSettingScope.Persistent">
            <summary>
             Persistent setting that is applied when the InputAccel Server starts.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerSettingScope.CurrentPersistent">
            <summary>
             Setting applied to the current running instance of the InputAccel Server. This setting is also saved as a persistent setting.
            </summary>
             <remarks>
             This is valid only when applying a value to an InputAccel Server setting. Invalid for getting a setting value.
             </remarks>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerSettingScope.Default">
            <summary>
             The default value for the setting of the InputAccel Server.
            </summary>
             <remarks>
             Only valid when getting the default value for a setting. Invalid for applying a setting value.
             </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.WaitState">
            <summary>
            The state in which the client is waiting for a response from the InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.WaitState.Start">
            <summary>
            The client has started waiting for the InputAccel Server to respond.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.WaitState.Tick">
            <summary>
            Half a second has elapsed since the last <see cref="E:Emc.InputAccel.QuickModule.IQuickModuleEvents.OnServerWait" /> event.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.WaitState.End">
            <summary>
            The client has stopped waiting for the InputAccel Server to respond.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.PermissionType">
            <summary>
             Permission types used with Server.SetPermissions and Server.GetPermissions.
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.PermissionType.BatchDefault">
            <summary>
             Default permissions inherited by new batches when they are created.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.PermissionType.ProcessDefault">
            <summary>
             /// Default permissions inherited by new processes as they are installed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.PermissionType.ModuleDefault">
            <summary>
             Default permissions inherited by new modules the first time they connect to an InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.PermissionType.DepartmentDefault">
            <summary>
             Default permissions inherited by new departments added to an InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.PermissionType.BatchDirectory">
            <summary>
             Permission specifying whether users can create batches and view the list of existing batches.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.PermissionType.ProcessDirectory">
            <summary>
             Permission specifying whether users can install processes, create process subdirectories, 
             and view the list of existing processes.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.FeatureCode">
            <summary>
             Module features licensed by the InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.None">
            <summary>
            No feature code
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.A">
            <summary>
            Feature code A
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.B">
            <summary>
            Feature code B
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.C">
            <summary>
            Feature code C
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.D">
            <summary>
            Feature code D
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.E">
            <summary>
            Feature code E
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.F">
            <summary>
            Feature code F
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.G">
            <summary>
            Feature code G
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.H">
            <summary>
            Feature code H
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.I">
            <summary>
            Feature code I
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.J">
            <summary>
            Feature code J
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.K">
            <summary>
            Feature code K
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.L">
            <summary>
            Feature code L
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.M">
            <summary>
            Feature code M
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.N">
            <summary>
            Feature code N
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.O">
            <summary>
            Feature code O
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.P">
            <summary>
            Feature code P
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.Q">
            <summary>
            Feature code Q
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.R">
            <summary>
            Feature code R
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.S">
            <summary>
            Feature code S
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.T">
            <summary>
            Feature code T
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.U">
            <summary>
            Feature code U
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.V">
            <summary>
            Feature code V
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.W">
            <summary>
            Feature code W
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.X">
            <summary>
            Feature code X
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.Y">
            <summary>
            Feature code Y
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.Z">
            <summary>
            Feature code Z
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.FeatureCode.All">
            <summary>
            All feature codes
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SetupMode">
            <summary>
            Type of setup mode.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.SetupMode.None">
            <summary>
            Normal production mode for task processing.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.SetupMode.Restricted">
            <summary>
            Restricted setup which does not consume an InputAccel license but limits access to within
            the batch or process.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.SetupMode.Unrestricted">
            <summary>
            Unrestricted setup which consumes an InputAccel license and does not place any restrictions on what
            the module can access.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TreeEventReason">
            <summary>
            Reason for the <see cref="E:Emc.InputAccel.Workflow.Client.ITree.OnRemoveSavedLock"/>, 
            <see cref="E:Emc.InputAccel.Workflow.Client.ITree.OnOldLocalTree"/>, 
            or <see cref="E:Emc.InputAccel.Workflow.Client.ITree.OnLockWait"/> event being fired.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TreeEventReason.None">
            <summary>
            Unknown or <see cref="E:Emc.InputAccel.Workflow.Client.ITree.OnOldLocalTree"/> warning is called.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TreeEventReason.BatchDelete">
            <summary>
            Batch is being deleted.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TreeEventReason.NodeAdd">
            <summary>
            Node is being added.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TreeEventReason.NodeInsert">
            <summary>
            Node is being inserted.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TreeEventReason.NodeMove">
            <summary>
            Node is being moved.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TreeEventReason.NodeRemove">
            <summary>
            Node is being removed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.TreeEventReason.NodeRestoreLock">
            <summary>
            Lock is being restored on a node.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LogOnErrorCode">
            <summary>
            Log on error codes
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.None">
            <summary>
            No error.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.Other">
            <summary>
            Other log on error.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.InvalidAccessRights">
            <summary>
            Invalid access rights.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.PortNotFound">
            <summary>
            Unable to find port address. Check services file or NIS setup.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.HostNotFound">
            <summary>
            Unable to resolve address from hostname.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.ConnectionRefused">
            <summary>
            Connection refused by remote host. Make sure server is operational.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.UnableToConnect">
            <summary>
            Unable to connect to server. Check if server is operational.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.NetworkUnreachable">
            <summary>
            Unable to reach network.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.InvalidLogOnParameters">
            <summary>
            Could not log in; check user name, password, and domain.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.NoValidLicense">
            <summary>
            There are no valid licenses for this module.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.ModuleConnectionsExceeded">
            <summary>
            Maximum licensed module connections has been exceeded.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.ModulePagesExceeded">
            <summary>
            Maximum licensed module pages has been exceeded.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.ServerConnectionsExceeded">
            <summary>
            Maximum licensed server connections has been exceeded.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.ServerPagesExceeded">
            <summary>
            Maximum licensed server pages has been exceeded.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.UnlicensedFeatureCode">
            <summary>
            The use of this features has not been licensed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.ModuleNotProperlyLicensed">
            <summary>
            This module has not been properly licensed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.OldServerVersion">
            <summary>
            Could not connect to the server - server version is too old for the client.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.OldClientVersion">
            <summary>
            Could not connect to the server - client version is too old for the server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.DifferentScaleServerBase">
            <summary>
            Servers in a ScaleServer group cannot have different bases.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.DuplicateScaleServerNumber">
            <summary>
            Servers in a ScaleServer group cannot have the same ScaleServer group number.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.InconsistentScaleServerParameters">
            <summary>
            Inconsistent ScaleServer group parameters.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.InvalidScaleServerMember">
            <summary>
            One of the servers is not part of the ScaleServer group.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.SingleServerOnly">
            <summary>
            This login requires a single server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.TrustedRelationshipFailure">
            <summary>
            The trust relationship between this workstation and the primary domain failed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.LicenseOtherMachine">
            <summary>
            Module should be running on the same machine as the InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.LicenseNoScaleServer">
            <summary>
            This module is not licensed for use in a ScaleServer environment.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.LogOnErrorCode.RegionalSettings">
            <summary>
            Regional settings between client and server do not match.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerMessageFlags">
            <summary>
            Types of messages to receive from the InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.None">
            <summary>
            No messages.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.LicenseWarning">
            <summary>
            License warning message.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.LicenseLimit">
            <summary>
            License limit messages.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.LicenseExpiration">
            <summary>
            License expiration messages.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.LicenseAdministration">
            <summary>
            License administration messages.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.System">
            <summary>
            System messages.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.FileDongle">
            <summary>
            File dongle (hardware security key) messages only.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.AllNonAdministration">
            <summary>
            All non-administration messages.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlags.All">
            <summary>
            All InputAccel Server messages.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask">
             <summary>
             Types of InputAccel Server messages to enable. 
             </summary>
             <remarks>
             This enumeration is used as a parameter to <see cref="M:Emc.InputAccel.Workflow.Client.IClient.SetServerMessageFlags(Emc.InputAccel.Workflow.Client.ServerMessageFlags,Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask)"/> method.
             <para>
             The <c>ServerMessageFlagsSetMask</c> parameter tells the InputAccel Server which flag(s) to change. This parameter
             enables you to selectively set/clear specific flag(s) without changing the values of the other flags. 
             </para>
             </remarks>
            <example>
            <para>To turn on the license warning message:</para>
                <code>client.SetServerMessageFlags(ServerMessageFlags.LicenseWarning, ServerMessageFlagsSetMask.SetLicenseWarning);</code>
            <para>Turn off the license warning message.</para>
                <code>client.SetServerMessageFlags(ServerMessageFlags.None, ServerMessageFlagsSetMask.SetLicenseWarning);</code>
            </example> 
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask.SetLicenseWarning">
            <summary>
            Sets the license warning message flag.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask.SetLicenseLimit">
            <summary>
            Sets the license limit message flag.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask.SetLicenseExpiration">
            <summary>
            Sets the license expiration message flag.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask.SetLicenseAdministration">
            <summary>
            Sets the license administration message flag.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask.SetSystem">
            <summary>
            Sets the system message flag.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask.SetFileDongle">
            <summary>
            Sets the file dongle message flag.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask.SetAllNonAdministration">
            <summary>
            Sets the non-administration message flags.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask.SetAll">
            <summary>
            Sets all message flags.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IADateTimeKind">
            <summary>
            The type of value represented by <see cref="T:Emc.InputAccel.Workflow.Client.IDateTime"/>. 
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IADateTimeKind.Unspecified">
            <summary>
            No time type defined.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IADateTimeKind.Offset">
            <summary>
            Minutes based offset.
            </summary>
            <remarks>-08:00, +01:00, -01:00, +01:30, -01:30, +00:30, -00:30</remarks>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IADateTimeKind.Utc">
            <summary>
            UTC time.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IADateTimeKind.Local">
            <summary>
            Abstract local time.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ActivationStatus">
            <summary>
            The activation status of the InputAccel Server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.NotActivated">
            <summary>
            The InputAccel Server is not activated.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.Activated">
            <summary>
             The InputAccel Server is activated.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.InitialGrace">
            <summary>
            The InputAccel Server is in an initial grace period. This is the 
            period after the CAF file is initially installed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.NormalChangeGrace">
            <summary>
            Normal change grace period. This is the period after the CAF file has changed. 
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.HardwareChangeGrace">
            <summary>
            The grace period when the hardware of the InputAccel Server is changed.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.InitialGraceExpired">
            <summary>
            The initial grace period of the InputAccel Server has expired.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.NormalGraceExpired">
            <summary>
            The normal grace period of the InputAccel Server has expired.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.HardwareChangeGraceExpired">
            <summary>
            The hardware change grace period of the InputAccel Server has expired.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.MSCSHardwareChangeGrace">
            <summary>
            The hardware change grace period of the Microsoft Cluster Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationStatus.MSCSHardwareChangeGraceExpired">
            <summary>
            The hardware change grace period of the Microsoft Cluster Server has expired.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ActivationFileStatus">
            <summary>
            The status of the Captiva Activation File (CAF) on the InputAccel Server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationFileStatus.Missing">
            <summary>
            The CAF file is missing on the InputAccel Server.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationFileStatus.Invalid">
            <summary>
            The CAF file on the InputAccel Server is invalid.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ActivationFileStatus.Valid">
            <summary>
            The CAF file on the InputAccel Server is valid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.CacheOperations">
            <summary>
            Values to control which types of operation are cached.
            </summary>
            <remarks>These values control whether caching operation affect all GetProperty operations, all SetProperty
            operations, or perform with their default behaviors. For example, when used with 
            the <see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/> property, 
            the GetProperty value causes all GetProperty operations to be disabled from caching; that is, 
            the operations are routed directly to the InputAccel Server, bypassing the cache.</remarks>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.CacheOperations.None">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.CacheOperations.GetProperty">
            <summary>
            "Get" property calls.
            </summary>
            <remarks>
            For example, this value can be set on <see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/> to bypass the cache and
            retrieve IBatchProcess.Name directly from the InputAccel Server.
            </remarks>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.CacheOperations.SetProperty">
            <summary>
            "Set" property calls.
            </summary>
            <remarks>
            For example, this value can be set on <see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/> to bypass the cache and
            send IBatchProcess.Name directly to the InputAccel Server.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ClientOptions">
            <summary>
            Options used during the construction of the client to control high level client behavior.
            </summary>
            <remarks>Currently, <c>ClientOptions</c> is used to control behavior when the client 
            attempts to perform an operation with an InputAccel Server that is disconnected.
            </remarks>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ClientOptions.None">
            <summary>
            No special behavior. For example, an exception of 
            type <see cref="T:Emc.InputAccel.Workflow.Client.ClientException" /> is 
            thrown if <see cref="M:Emc.InputAccel.Workflow.Client.IClient.GetProcess(System.String)" /> is
            called when the InputAccel Server is disconnected. 
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.ClientOptions.DisconnectedException">
            <summary>
            Top level disconnect exception is thrown instead of an API specific exception.  This allows for easier handling 
            of a disconnected InputAccel Server. For example, an exception of 
            type <see cref="T:Emc.InputAccel.Workflow.Client.ServerDisconnectedException" /> is
            thrown if <see cref="M:Emc.InputAccel.Workflow.Client.IClient.GetProcess(System.String)" /> is 
            called when the InputAccel Server is disconnected.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LicenseExpiringEventArgs">
            <summary>
            Represents the argument passed in the 
            <see cref="E:Emc.InputAccel.QuickModule.IQuickModuleEvents.OnLicenseExpiring"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LicenseExpiringEventArgs.Reason">
            <summary>Gets the reason for this event being fired.</summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LicenseInvalidatedEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseInvalidated"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LicenseInvalidatedEventArgs.Reason">
            <summary>
            Gets the reason why the event was fired.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LicenseValidatedEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseValidated"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LicenseValidatedEventArgs.Reason">
            <summary>
            Gets the reason why the event was fired.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.GlobalDepartmentsException">
            <summary>
            The exception that is thrown when an error occurs while working with an <c>IGlobalDepartments</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ClientException">
            <summary>
            The base exception for all client exceptions.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ClientException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message string</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message string</param>
            <param name="inner">Inner exception to be encapsulated by the new object</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            TODO: Create XML documentation
            </summary>
            <param name="info">TODO: Create XML documentation</param>
            <param name="context">TODO: Create XML documentation</param>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IDateTime">
            <summary>
            Represents a MDF value of type MDF_TYPE_IADATETIME.
            </summary>
            <remarks>
            Equals() does not interpret the time; therefore, 2001-01-01T08:00 with an offset of -08:00 hours 
            is not equal to 2001-01-01T07:00 with an offset of -07:00  hours. 
            Convert to UTC first if that type of time testing is required.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IDateTime.ToDateTime">
            <summary>
            Convert to <see cref="T:System.DateTime"/>.
            </summary>
            <returns><see cref="T:System.DateTime"/> object.</returns>
            <remarks>Objects of <see cref="T:Emc.InputAccel.Workflow.Client.IADateTimeKind"/>. Offset is converted to <see cref="T:System.DateTimeKind"/>.Local</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IDateTime.ToOffset(System.Int32)">
            <summary>
            Returns new <see cref="T:Emc.InputAccel.Workflow.Client.IDateTime"/> object adjusted to the offset minute.
            </summary>
            <param name="offsetMinute">Minutes to adjust time to.</param>
            <returns>A <see cref="T:Emc.InputAccel.Workflow.Client.IDateTime"/> object.</returns>        
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IDateTime.ToUtc">
            <summary>
            Returns new object converted to UTC time.
            </summary>
            <remarks>Unspecified types are assumed to be in local time.</remarks>
            <returns><see cref="T:Emc.InputAccel.Workflow.Client.IDateTime"/> object</returns>        
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IDateTime.Equals(Emc.InputAccel.Workflow.Client.IDateTime)">
            <summary>
            Compares for equality with another IDateTime object.
            </summary>
            <param name="other">An IDateTime object.</param>
            <remarks>
            Does not interpret the time. Therefore 2001-01-01T08:00 with an offset of -08:00 hours is not equal to 
            2001-01-01T07:00 with an offset of -07:00 hours.
            <para>
            Convert to UTC first if that type of time testing is required.
            </para>
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IDateTime.ToString">
            <summary>
            Returns the IDateTime object as a string formatted as YYYY-MM-DDThh:mm:ss.sssTZD.
            </summary>
            <returns>A string formatted as YYYY-MM-DDThh:mm:ss.sssTZD.</returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.Kind">
            <summary>
            Gets data of type <see cref="T:Emc.InputAccel.Workflow.Client.IDateTime"/>.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.Year">
            <summary>
            Gets the year.
            </summary>        
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.Month">
            <summary>
            Gets the month.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.Day">
            <summary>
            Gets the day.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.Hour">
            <summary>
            Gets the hour.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.Minute">
            <summary>
            Gets the minute.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.Second">
            <summary>
            Gets the second.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.Millisecond">
            <summary>
            Gets the millisecond.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDateTime.OffsetMinute">
            <summary>
            Gets the time zone offset in minutes.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IFeature">
            <summary>
            Represents a feature code, the number of connections that are licensed for the feature code, 
            and the number of connections that are currently in use.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IFeature.FeatureCode">
            <summary>
            Gets the feature code represented by this feature.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IFeature.Licensed">
            <summary>
            Gets or sets the number of connections licensed for this feature.
            </summary>
            <remarks>
            0 means unlimited connections. If there are unlimited connections, 
            the number of connections used is always zero and does not reflect 
            actual connections.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IFeature.Used">
            <summary>
            Gets or sets the number of connections currently using this feature.
            </summary>
            <remarks>
            If the license enables unlimited connections (zero), then this value is always zero and does not reflect actual connections.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IGlobalDepartments">
            <summary>
            Represents an object used to add, remove, and list departments on the InputAccel Server.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IGlobalDepartments.Add(System.String)">
            <summary>
            Adds a department to the global department list.
            </summary>
            <param name="department">Name of department to add.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IGlobalDepartments.Remove(System.String)">
            <summary>
            Removes a department from the global department list.
            </summary>
            <param name="department">Name of department to remove.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IGlobalDepartments.List">
            <summary>
            Lists the global departments.
            </summary>
            <returns>An enumeration of departments.</returns>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ILogOnError">
            <summary>
            Represents an error condition that occurred during logon.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILogOnError.Error">
            <summary>
            Gets the error that occurred.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILogOnError.Message">
            <summary>
            Gets a description of the error that occured during logon.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ISecurityPermission">
            <summary>
            Represents a permission on the InputAccel Server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ISecurityPermission.Id">
            <summary>
            The permission ID.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ISecurityPermission.Name">
            <summary>
            The permission name.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ITaskCounts">
            <summary>
            Represents the set of task counts for a step, module, or batch. 
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITaskCounts.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITaskCounts.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor with initialized count values.
            </summary>
            <param name="notReadyCount">Initial value of the Not Ready task count.</param>
            <param name="readyCount">Initial value of the Ready task count.</param>
            <param name="sentCount">Initial value of the Sent task count.</param>
            <param name="workingCount">Initial value of the Working task count.</param>
            <param name="offlineCount">Initial value of the Offline task count.</param>
            <param name="doneCount">Initial value of the Done task count.</param>
            <param name="errorCount">Initial value of the Error task count.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITaskCounts.#ctor(Emc.InputAccel.Workflow.Client.ITaskCounts)">
            <summary>
            Copy constructor of a task count object.
            </summary>
            <param name="taskCounts"><c>IATaskCounts</c> instance to be copied.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITaskCounts.Add(Emc.InputAccel.Workflow.Client.ITaskCounts)">
            <summary>
            Adds the set of counts contained in <c>taskCounts</c> to the counts of the current object.
            </summary>
            <param name="taskCounts"><c>ITaskCounts</c> instance from which counts will be added.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.NotReady">
            <summary>
            Gets the count of tasks that are in the "Not Ready" state.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Ready">
            <summary>
            Gets the count of tasks that are in the "Ready" state.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Sent">
            <summary>
            Gets the count of tasks that are in the "Sent" state.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Working">
            <summary>
            Gets the count of tasks that are in the "Working" state.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Offline">
            <summary>
            Gets the count of tasks that are in the "Offline" state.
            </summary>
            <remarks>Offline is a sub-category of Working. Working includes the Offline count.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Done">
            <summary>
            Gets the count of tasks that are in the "Done" state.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Error">
            <summary>
            Gets the count of tasks that are in the "Error" state.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Queued">
            <summary>
            Queued (similar to the Ready task count).
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Active">
            <summary>
            Gets the count of tasks that are in the "Active" state.
            </summary>
            <remarks>Active is the sum of Sent tasks and Working tasks.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITaskCounts.Total">
            <summary>
            Gets the sum of all task counts.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IUserPermission">
            <summary>
            Represents the permission information for the currently logged on user.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IUserPermission.CheckForStaleList">
            <summary>
            Checks for an uninitialized permission list.
            </summary>
            <returns>TRUE if the permission list was updated.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IUserPermission.Check(System.Int32)">
            <summary>
            Check if the currently logged on user has the specified permission.
            </summary>
            <param name="id">The permission ID.</param>
            <returns>TRUE if the user has permission, otherwise FALSE.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IUserPermission.Check(System.String)">
            <summary>
            Check if the currently logged on user has the specified permission.
            </summary>
            <param name="name">The permission name.</param>
            <returns>TRUE if the user has permission, otherwise FALSE.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IUserPermission.List">
            <summary>
            Lists the permissions for the currently logged on user.
            </summary>
            <returns>An enumeration of permissions.</returns>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IUserPermission.OnChange">
            <summary>
            Occurs when the user permission has changed on the InputAccel Server.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ActivationException">
            <summary>
            The exception that is thrown when an error occurs while activating the InputAccel Server. 
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ActivationLoadException">
            <summary>
            The exception that is thrown when the activation key supplied by EMC fails to load on the InputAccel Server.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchException">
            <summary>
            The exception that is thrown when an error occurs while working with an <c>IBatch</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchCastException">
            <summary>
            The exception that is thrown when casting an IBatch object fails.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchCreateException">
            <summary>
            The exception that is thrown when creating a batch fails.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchCreateAlreadyExistsException">
            <summary>
            The exception that is thrown when creating a new batch and a batch with the same name already exists.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchCreateProcessNotFoundException">
            <summary>
            The exception that is thrown when the process specified for a new batch is not found.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchCopyException">
            <summary>
            The exception that is thrown when copying a batch fails.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchDeleteException">
            <summary>
            The exception that is thrown when an error occurs while deleting a batch.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchExportFileFormatException">
            <summary>
            The exception that is thrown when an invalid InputAccel file format is encountered while exporting a batch.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchPropertiesException">
            <summary>
            The exception that is thrown when an error occurs while populating batch properties.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchProcessException">
            <summary>
            The exception that is thrown when an error occurs while working with 
            an <see cref="T:Emc.InputAccel.Workflow.Client.IBatchProcess" /> object.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.BatchProcessException.#ctor">
            <summary>
            Default constructor
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.BatchProcessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message string</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.BatchProcessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message string</param>
            <param name="inner">Inner exception to be encapsulated by the new object</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.BatchProcessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor
            </summary>
            <param name="info">TODO: Create XML documentation</param>
            <param name="context">TODO: Create XML documentation</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchProcessCopySettingsException">
            <summary>
            The exception that is thrown when an error occurs while copying settings of a batch or process.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchProcessDefaultValuesException">
            <summary>
            The exception that is thrown when an error occurs while retrieving the default values of a batch or process.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchProcessDeletedException">
            <summary>
            The exception that is thrown when attempting to access a deleted batch or process.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchProcessGetGuidException">
            <summary>
            The exception that is thrown when an error occurs while getting the GUID of a batch or process.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchProcessListValuesException">
            <summary>
            The exception that is thrown when an error occurs while listing values of a batch or process.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.BatchProcessPasteSettingsException">
            <summary>
            The exception that is thrown when an error occurs while pasting settings to a batch or process.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.CacheException">
            <summary>
            The exception that is thrown when an error occurs while working with an <c>ICache</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.CacheGetBinaryException">
            <summary>
            The exception that is thrown when an error occurs while retrieving a binary value from the cache.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ClientNotInitializedException">
            <summary>
            The exception that is thrown when performing an operation on an uninitialized client.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ClientSetPropertyException">
            <summary>
            The exception that is thrown when an error occurs while setting a client property.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SettingTagException">
            <summary>
            The exception that is thrown when an internal error occurs while setting a client tag.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.GettingTagException">
            <summary>
            The exception that is thrown when an internal error occurs while getting a client tag.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.StreamException">
            <summary>
            The exception that is thrown when an error occurs while working with a stream object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.VariableNameTooLongException">
            <summary>
            The exception that is thrown when a variable's name is too long.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ConnectionException">
            <summary>
            The exception that is thrown when an error occurs while working with an <c>IConnection</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ConnectionPropertiesException">
            <summary>
            The exception that is thrown when an error occurs while populating the properties of a connection.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ConnectionDisconnectException">
            <summary>
            The exception that is thrown when an error occurs while disconnecting a connection.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.CopyPasteSettingsException">
            <summary>
            The exception that is thrown when an error occurs while copying or pasting settings.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.FileException">
            <summary>
            The exception that is thrown when an error occurs while working with a <c>IFile</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.FileExternalStorageException">
            <summary>
            The exception that is thrown when an error occurs while copying a file 
            from one external storage location to another.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.FileServerCopyException">
            <summary>
            The exception that is thrown when an error occurs while copying a file from one InputAccel Server to another.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.GetFileFromServerException">
            <summary>
            The exception that is thrown when an error occurs while retrieving a file from an InputAccel Server.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ProcessException">
            <summary>
            The exception that is thrown when an error occurs while working with 
            an <see cref="T:Emc.InputAccel.Workflow.Client.IProcess" /> object.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ProcessException.#ctor">
            <summary>
            Default constructor
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ProcessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message string</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ProcessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message string</param>
            <param name="inner">Inner exception to be encapsulated by the new object</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ProcessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor
            </summary>
            <param name="info">TODO: Create XML documentation</param>
            <param name="context">TODO: Create XML documentation</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ProcessDeleteException">
            <summary>
            The exception that is thrown when an error occurs while deleting a process.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ProcessInstallException">
            <summary>
            The exception that is thrown when an error occurs while installing a process.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.StepException">
            <summary>
            The exception that is thrown when an error occurs while working with 
            an <see cref="T:Emc.InputAccel.Workflow.Client.IStep" /> object.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.StepException.#ctor">
            <summary>
            Default constructor
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.StepException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message string</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.StepException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message string</param>
            <param name="inner">Inner exception to be encapsulated by the new object</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.StepException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            TODO: Create XML documentation
            </summary>
            <param name="info">TODO: Create XML documentation</param>
            <param name="context">TODO: Create XML documentation</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.StepRetriggerException">
            <summary>
            The exception that is thrown when an error occurs while retriggering a step.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.StepCastException">
            <summary>
            The exception that is thrown when casting 
            an <see cref="T:Emc.InputAccel.Workflow.Client.IStep" /> object fails.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.StepTaskCountTypeException">
            <summary>
            The exception that is thrown when the requested task count type is invalid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.StepTriggerLevelException">
            <summary>
            The exception that is thrown when an invalid trigger level is specified for a step.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LicenseException">
            <summary>
            The exception that is thrown when an error occurs while working with an 
            <see cref="T:Emc.InputAccel.Workflow.Client.ILicense" /> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LicenseDateException">
            <summary>
            The exception that is thrown when the license date is invalid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LicenseHeaderException">
            <summary>
            The exception that is thrown when the license header is invalid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ListException">
            <summary>
            The exception that is thrown when an error occurs while working with a function that returns an <see cref="T:System.Collections.Generic.IEnumerable"/> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ListMoveNextException">
            <summary>
            The exception that is thrown when an error occurs while getting the next object in a list.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LockException">
            <summary>
            The exception that is thrown when an error occurs while working with 
            an <see cref="T:Emc.InputAccel.Workflow.Client.ILock" /> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LockCreateException">
            <summary>
            The exception that is thrown when an error occurs while creating a lock.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LogOnException">
            <summary>
            The exception that is thrown when logging on to an InputAccel Server.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeException">
            <summary>
            The exception that is thrown when an error occurs while working with an 
            <see cref="T:Emc.InputAccel.Workflow.Client.INode"/> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeAddException">
            <summary>
            The exception that is thrown when an error occurs while adding a node.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeAddLevel0ChildrenException">
            <summary>
            The exception that is thrown when an attempt is made to add a child to a level 0 node.
            </summary>
            <remarks>
            Level 0 nodes can not have children.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeAddOutOfRangeException">
            <summary>
            The exception that is thrown when the specified index position is out of range for adding a new node.
            </summary>
            <remarks>
            Valid index values are 0 - [child count]
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeCommitException">
            <summary>
            The exception that is thrown when an error occurs while committing a node.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeDeleteException">
            <summary>
            The exception that is thrown when an error occurs while deleting a node.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeFirstTaskedChildException">
            <summary>
            The exception that is thrown when an error occurs while finding the first tasked child of a node.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeLevelException">
            <summary>
            The exception that is thrown when the specified node level is invalid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeMoveException">
            <summary>
            The exception that is thrown when an error occurs while moving a node.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NodeTriggerLevelTooHighException">
            <summary>
            The exception that is thrown when a step's trigger level is too high for the attempted operation.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryException">
            <summary>
            The exception that is thrown when an error occurs while working with 
            an <see cref="T:Emc.InputAccel.Workflow.Client.IProcessDirectory" /> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryDeleteException">
            <summary>
            The exception that is thrown when an error occurs while deleting a process directory.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryInvalidException">
            <summary>
            The exception that is thrown when a process directory is invalid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryListException">
            <summary>
            The exception that is thrown when an error occurs while listing process directories.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ProcessDirectoryRenameException">
            <summary>
            The exception that is thrown when an error occurs while renaming a process directory.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SecurityException">
            <summary>
            The exception that is thrown when an error occurs while working with 
            an <see cref="T:Emc.InputAccel.Workflow.Client.ISecurity" /> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SecurityCommitException">
            <summary>
            The exception that is thrown when an error occurs while committing permissions.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SecurityInitException">
            <summary>
            The exception that is thrown when an error occurs while initializing a security object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SecurityInvalidPermissionException">
            <summary>
            The exception that is thrown when setting invalid permissions.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SecurityPermissionsListException">
            <summary>
            The exception that is thrown when an error occurs while getting a permissions list.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SecuritySetAccessException">
            <summary>
            The exception that is thrown when an error occurs while setting security access.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.SecuritySetItemException">
            <summary>
            The exception that is thrown when an error occurs while setting security items.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerException">
            <summary>
            The exception that is thrown when an error occurs while working with 
            an <see cref="T:Emc.InputAccel.Workflow.Client.IServer"/> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.GetServerException">
            <summary>
            The exception that is thrown when an error occurs while retrieving an InputAccel Server object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.NoAvailableServerException">
            <summary>
            The exception that is thrown when no InputAccel Server is available.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerAvailableException">
            <summary>
            The exception that is thrown when an error occurs while checking if an InputAccel Server is available.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerInvalidException">
            <summary>
            The exception that is thrown when performing an operation on an invalid InputAccel Server.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerNotInitializedException">
            <summary>
            The exception that is thrown when performing an operation on an uninitialized InputAccel Server.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerDisconnectedException">
            <summary>
            The exception that is thrown when performing an operation with a disconnected InputAccel Server.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.InvalidServerResourceException">
            <summary>
            The exception that is thrown when accesing an invalid InputAccel Server resource.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingException">
            <summary>
            The exception that is thrown when an error occurs while working with an <c>IServerSetting</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingCastException">
            <summary>
            The exception that is thrown when casting an <c>IServerSetting</c> object fails.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingInvalidParameterException">
            <summary>
            The exception that is thrown when setting an invalid InputAccel Server setting parameter.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingInvalidScopeException">
            <summary>
            The exception that is thrown when an invalid InputAccel Server setting scope is specified.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingInvalidTypeException">
            <summary>
            The exception that is thrown when an invalid InputAccel Server setting type is specified.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingMaxValueException">
            <summary>
            The exception that is thrown when setting an InputAccel Server setting greater than its maximum value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingMinValueException">
            <summary>
            The exception that is thrown when setting an InputAccel Server setting lower than its minimum value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingNullValueException">
            <summary>
            The exception that is thrown when setting an InputAccel Server setting to a null value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingSetPersistentValueException">
            <summary>
            The exception that is thrown when an error occurs while setting a peristent InputAccel Server setting value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingSetReadOnlyValueException">
            <summary>
            The exception that is thrown when an error occurs while setting a read-only InputAccel Server setting value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingSetValueException">
            <summary>
            The exception that is thrown when an error occurs when specifying an InputAccel Server setting.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingStringTooLongException">
            <summary>
            The exception that is thrown when an InputAccel Server setting contains a string that is too long.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerSettingNegativeValueException">
            <summary>
            The exception that is thrown when setting an InputAccel Server setting to a negative value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskException">
            <summary>
            The exception that is thrown when an error occurs while working with 
            an <see cref="T:Emc.InputAccel.Workflow.Client.ITask" /> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskNotInitializedException">
            <summary>
            The exception that is thrown when performing an operation on an uninitialized task.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskAlreadyFinishedException">
            <summary>
            The exception that is thrown when accessing a task that is already finished.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskFinishException">
            <summary>
            The exception that is thrown when an error occurs while finishing a task.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskPrepareException">
            <summary>
            The exception that is thrown when an error occurs while preparing a task.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.OfflineTaskException">
            <summary>
            The exception that is thrown when an error occurs while working with an offline task.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.CancelOfflineTaskException">
            <summary>
            The exception that is thrown when an error occurs while canceling an offline task.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TreeException">
            <summary>
            The exception that is thrown when an error occurs while working with an <c>ITree</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TreeLockException">
            <summary>
            The exception that is thrown when an error occurs while creating or releasing a node lock.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TreeNotInitializedException">
            <summary>
            The exception that is thrown when performing an operation on an uninitialized tree.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ValueProviderException">
            <summary>
            The exception that is thrown when an error occurs while working with an <c>IValueProvider</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.InvalidValueProviderException">
            <summary>
            The exception that is thrown when accessing an invalid value provider.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ValueGetException">
            <summary>
            The exception that is thrown when an error occurs while getting an IA Value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ValueGetArrayException">
            <summary>
            The exception that is thrown when an error occurs while getting an IA Value array.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ValueProviderConstructorException">
            <summary>
            The exception that is thrown when an internal error occurs while constructing an <c>IValueProvider</c> object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ValueProviderDeleteException">
            <summary>
            The exception that is thrown when an error occurs while deleting an IA Value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ValueProviderInvalidTypeException">
            <summary>
            The exception that is thrown when the data type is invalid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ValueSetException">
            <summary>
            The exception that is thrown when an error occurs while setting an IA Value.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ValueSetStreamException">
            <summary>
            The exception that is thrown when an error occurs while setting an IA Value stream.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IActivation">
            <summary>
            Used to activate and query the activation status of the InputAccel Server.
            </summary>
            <remarks>
            The process of activating the InputAccel Server involves importing the activation (CAF) file and
            presenting the InputAccel Server ID and profile ID to the user. The server ID and profile ID are required to
            retrieve the InputAccel Server activation key from the EMC|Captiva activation portal.
            This key is then used to activate the InputAccel Server.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IActivation.Activate(System.String)">
            <summary>
            Activates a dongleless InputAccel Server.
            </summary>
            <param name="key">The activation key is provided by the EMC|Captiva activation portal: http://activation.captivasoftware.com/</param>        
            <remarks>The activation key accepted by the InputAccel Server consists of alpha characters. It does not include '-'s</remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ActivationLoadException">
            </exception>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IActivation.Import(System.IO.Stream)">
            <summary>
            Imports a Captiva Activation File (CAF) to the InputAccel Server.
            </summary>
            <param name="CAF">Captiva Activation File</param>
            <remarks>
            Import is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ActivationException">
            </exception>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IActivation.FileStatus">
            <summary>
            Current state of the Captiva Activation File (CAF) on the InputAccel Server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IActivation.GracePeriod">
            <summary>
            Date when the activation grace period of the InputAccel Server expires.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IActivation.ProfileId">
            <summary>
            Gets the activation profile ID.  The profile ID and the server ID are used to validate the InputAccel Server against the activation code.
            </summary>
            <remarks>The profile ID is available after a valid activation file has been imported.</remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IActivation.ServerId">
            <summary>
            Gets the activation server ID.  This becomes the ID of the InputAccel Server.
            </summary>
            <remarks>This is available after a valid activation file has been imported.</remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IActivation.Status">
            <summary>
            Returns the current activation state of the InputAccel Server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ICacheParameters">
            <summary>
            Represents the values retrieved from the InputAccel Server.
            </summary>
            <remarks>
            Filling the cache using ICacheParameters retrieves multiple values from the InputAccel Server in one round trip,
            improving module and server performance.
            </remarks>
            <example>
            <code>
            void FillCache(ICache cache, IBatch batch, IStep step)
            {
                ICacheParameters parameters = cache.CreateCacheParameters();
                
                parameters.Add(step);
                parameters.Add(batch, "Priority");
                parameters.Add(batch, "AnotherKey");
                parameters.Add(batch, "KeyPrefix*");
                cache.Fill(parameters);
            }
            </code>
            </example>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.ToString">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.Add(Emc.InputAccel.Workflow.Client.IServerResource)">
            <summary>
            Adds the InputAccel Server resource values to the cache.
            </summary>
            <param name="resource">An object implementing IServerResource.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.Add(Emc.InputAccel.Workflow.Client.IServerResource,System.Boolean)">
            <summary>
            Adds the InputAccel Server resource values to the cache.
            </summary>
            <param name="resource">An object implementing IServerResource.</param>
            <param name="resolve">Resolves references to IA Values and places them into the cache.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.Add(Emc.InputAccel.Workflow.Client.IServerResource,System.String)">
            <summary>
            Adds a subset of the InputAccel Server resource values to the cache.
            </summary>
            <param name="resource">An object implementing IServerResource.</param>
            <param name="key">Key names as used by IValueProviders. Accepts * as a wildcard.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.Add(Emc.InputAccel.Workflow.Client.IServerResource,System.String,System.Boolean)">
            <summary>
            Adds a subset of the InputAccel Server resource values to the cache.
            </summary>
            <param name="resource">An object implementing IServerResource.</param>
            <param name="key">Key names as used by IValueProviders. Accepts * as a wildcard.</param>
            <param name="resolve">Resolves references to IA Values and places them into the cache.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.Add(Emc.InputAccel.Workflow.Client.IValueProvider)">
            <summary>
            Adds the value provider values to the cache.
            </summary>
            <param name="provider">The ValueProvider object.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.Add(Emc.InputAccel.Workflow.Client.IValueProvider,System.Boolean)">
            <summary>
            Adds the value provider values to the cache.
            </summary>
            <param name="provider">The ValueProvider object.</param>
            <param name="resolve">Resolves references to IA Values and places them into the cache.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.Add(Emc.InputAccel.Workflow.Client.IValueProvider,System.String)">
            <summary>
            Adds a subset of the value provider values to the cache.
            </summary>
            <param name="provider">The ValueProvider object.</param>
            <param name="key">Subset of the values to retrieve. Accepts * as a wildcard.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICacheParameters.Add(Emc.InputAccel.Workflow.Client.IValueProvider,System.String,System.Boolean)">
            <summary>
            Add a subset of the value provider values to the cache.
            </summary>
            <param name="provider">The ValueProvider object.</param>
            <param name="key">Subset of the values to retrieve. Accepts * as a wildcard.</param>
            <param name="resolve">Resolves references to IA Values and places them into the cache.</param>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IConnection">
            <summary>
            Represents a client connection to an InputAccel Server.
            </summary>
            <remarks>
            The data contained in IConnection is a snapshot of the connection state when 
            <see cref="T:Emc.InputAccel.Workflow.Client.IServer"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IServer.ListConnections"/> is called.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IConnection.#ctor(Emc.InputAccel.Workflow.Client.IClient,System.String)">
            <summary>
            
            </summary>
            <param name="client"></param>
            <param name="data"></param>
            <remarks>data format = UpMmutd = UUID, ping, machine name, module name, user name, task count, departments. </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IConnection.Disconnect">
            <summary>
            Forces this client connection to terminate.
            </summary>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ConnectionDisconnectException">An error occurred
            while disconnecting a connection.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IConnection.ListDepartments">
            <summary>
            Lists departments associated with this client connection.
            </summary>
            <returns>
            A list of departments for this client connection. The list shows a count of zero if there
            are no departments.
            </returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IConnection.LastContact">
            <summary>
            Gets the time since last the contact with the InputAccel Server.
            </summary>
            <remarks>The time is accurate to within 10 seconds.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IConnection.MachineName">
            <summary>
            Gets the name of the machine running the client module.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IConnection.ModuleName">
            <summary>
            Gets the name of the connected client module.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IConnection.UserName">
            <summary>
            Gets the name of the user connected to the client module.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IConnection.UUID">
            <summary>
            Gets the universally unique identifier (UUID) of this client connection.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IConnection.TaskCount">
            <summary>
            Gets the number of tasks being processed by the client module.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ICreateBatchInfo">
            <summary>
            Parameter passed in the <see cref="T:Emc.InputAccel.Workflow.Client.CreateBatchHandler"/> callback.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ICreateBatchInfo.Server">
            <summary>
            Gets the InputAccel Server where the batch is to be created.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ICreateBatchInfo.BatchName">
            <summary>
            Gets or sets the batch name for the batch to be created.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ICreateBatchInfo.SkipServer">
            <summary>
            Gets and sets whether to skip this InputAccel Server and try the next InputAccel Server in a ScaleServer group.
            If all the InputAccel Servers are skipped, an exception is thrown.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.DiskFullEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnServerDiskFull"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.DiskFullEventArgs.Reason">
            <summary>Gets the reason for this event being fired.</summary>
            <remarks>
            <para>The reason could be the following:</para>
            <list type="bullet">
            <item>
            "Warning: InputAccel Server's disk is almost full.\nNo more processing can take place until more disk space is made available."
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.DiskSpaceOkEventArgs">
            <summary>
            Represents the argument passed in 
            the <see cref="E:Emc.InputAccel.QuickModule.IQuickModuleEvents.OnServerDiskOk"/>
            event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.DiskSpaceOkEventArgs.Reason">
            <summary>Gets the reason for this event being fired.</summary>
            <remarks>
            <para>The reason could be the following:</para>
            <list type="bullet">
            <item>
            "Warning: InputAccel Server's disk is almost full (Available bytes = %1!d Bytes Needed %2!d).\nNo more 
            processing can take place until more disk space is made available."
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IADotNetInputStream">
            <summary>
            This class wraps a System.IO.Stream into a java.io.InputStream.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IACLNT32Exception">
            <summary>
            An exception class to wrap IACLNT32 errors
            </summary>
            <remarks>
            The ancestor for this class, ClientException, is declared in IAClientExceptions.cs.
            This is because there is no externally-visible class to represent IAClnt32,
            but we do need to expose Clnt32Exception since our code throws exceptions of that type.
            The other exception class files all match up to a specific class, but
            this one does not; the best place for it is with the general client exceptions.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IACLNT32Exception.ErrorFunction">
            <summary>
            A string indicating which IACLNT32 function resulted in an error
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IABatches.Add(System.String,System.String,Emc.InputAccel.Workflow.Client.IServer)">
            <summary>
            Adds a batch to the list of batches.
            </summary>
            <param name="batchId">The ID of the batch to add to the list.</param>
            <param name="name">The name of the batch to add to the list.</param>
            <param name="server">The InputAccel Server on which the batch resides.</param>
            <returns>A batch object to add to the list of batches.</returns>
            <remarks>This batch is not keyed to a task.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IABatches.Add(System.String,System.String,Emc.InputAccel.Workflow.Client.IServer,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Adds a batch to the list of batches.
            </summary>
            <param name="batchId"></param>
            <param name="name"></param>
            <param name="server"></param>
            <param name="task">Keys the batch retrieval to this task</param>
            <returns></returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IABatches.Remove(System.String)">
            <summary>
            Removes a batch from the global batch list.
            </summary>
            <param name="batchId">Batch ID</param>
            <returns>Returns TRUE if the batch was removed, otherwise returns FALSE.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IABatches.Remove(System.String,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Removes a batch from the global batch list.
            </summary>
            <param name="batchId">The batch ID.</param>
            <param name="task">The task associated with this batch.</param>
            <returns>Returns TRUE if the batch was removed, otherwise returns FALSE.</returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IABatches.Count">
            <summary>
            Gets the number of batches in the collection.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IABatches.Item(System.Int32)">
            <summary>
            Indexer for the batches collection.
            </summary>
            <param name="key">Index of the batch to be retrieved</param>
            <returns>The batch at that location</returns>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IADotNetOutputStream">
            <summary>
            This class wraps a System.IO.Stream into a java.io.OutputStream.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IGlobalVariable">
            <summary>
            Represents a global IA Value.
            </summary>
            <remarks>
            A global IA Value is a value that is not part of a batch or process.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalVariable.User">
            <summary>
            Gets the user name.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalVariable.Machine">
            <summary>
            Gets the machine name.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalVariable.Screen">
            <summary>
            Gets the screen resolution; for example: "1024 x 768 x 8" (width x height x color depth).
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalVariable.Module">
            <summary>
            Gets the module name.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalVariable.Name">
            <summary>
            Gets the IA Value name.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ILicense">
            <summary>
            Represents a license on an InputAccel Server.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILicense.#ctor(Emc.InputAccel.Workflow.Client.ILicenseManager,System.Int32)">
            <summary>
            Construct IALicense object
            </summary>
            <param name="manager">Manager of the object</param>
            <param name="index">Index of the object to base keys on</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILicense.Delete">
            <summary>
            Deletes this license code from the license manager.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Code">
             <summary>
            Gets or sets the license code on an InputAccel Server.
             </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Connections">
            <summary>
            Gets or sets the number of simultaneous connections.
            </summary>
            <remarks>0 represents unlimited connections. A name indicates the group name used for licensing.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Disables">
            <summary>
            Gets or sets the license code number, license code name, and/or the date, in the format YYMMDD, 
            of the license code(s) to be disabled by this license code. 
            </summary>
            <remarks>
            Multiple entries can be made by separating the entries with commas. A date disables
            all license codes that were issued on or before the specified date.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.EnterBy">
            <summary>
            Gets or sets the date by which the license code must be entered. 
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Expiration">
            <summary>
            Gets or sets the date when the license code expires.
            </summary>
            <remarks>1-1-1 represents a date for a license that does not expire.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Features">
            <summary>
            Gets or sets the feature codes enabled by this license code.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Issued">
            <summary>
            Gets or sets the date that the license code was issued by EMC.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Module">
            <summary>
            Gets or sets the module supported by this license code.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Pages">
            <summary>
            Gets or sets the number of pages allowed per day for this license code.
            </summary>
            <remarks>The value 0 is for unlimited pages. A name indicates the group name used for licensing.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicense.Status">
            <summary>
            Gets the current status of the license code on the InputAccel Server.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LicenseExpiredEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseExpired"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LicenseExpiredEventArgs.Reason">
            <summary>Gets the reason for this event being fired.</summary>
            <remarks>
            The reason could be one of the following. 
            <list type="bullet">
            <item>
            "The InputAccel Server license activation grace period has expired.  To activate now, refer to the InputAccel Administration Guide."
            </item>
            <item>
            "The InputAccel Activation file change grace period has expired.  To restore activation, refer to the InputAccel Administration Guide."
            </item>
            <item>
            "The InputAccel Server environment modification grace period has expired.  To restore activation, either reconfigure your hardware back to its previous configuration and restart InputAccel Server or reactivate the product.  To activate now, refer to the InputAccel Administration Guide."
            </item>
            <item>
            "The grace period has expired.  Either the InputAccel Server environment changed significantly since the last time you activated the product or you are using a node of an MSCS Cluster that was not activated.  To restore activation, either reconfigure your hardware back to its previous configuration and restart InputAccel Server, or reactivate the product.  To reactivate now, refer to the InputAccel Administration Guide."
            </item>
            </list>
            Note that the reason could be in a non-English language if the operating system is running in a non-English language supported by EMC.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LicenseGraceEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseGrace"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LicenseGraceEventArgs.Reason">
            <summary>Gets the reason for this event being fired.</summary>
            <remarks>
            <para>The reason could be one of the following:</para>
            <list type="bullet">
            <item>
            "The InputAccel Server has detected that you have installed an Activation file but have not activated 
            it.  The server is now fully operational in a grace period that will expire in %d days, %d hours, %d 
            minutes.  To activate now, refer to the InputAccel Administration Guide."
            </item>
            <item>
            "The InputAccel Server has detected that you have installed a new Activation file since the last time 
            you activated the product but have not reactivated it.  The server is now fully operational in a 
            grace period that will expire in %d days, %d hours, %d minutes.  To reactivate now, refer to the 
            InputAccel Administration Guide."
            </item>
            <item>
            "The InputAccel Server environment has changed significantly since the last time you activated the 
            product.  The server is now fully operational in a grace period that will expire in %d days, %d hours, 
            %d minutes.  To resolve this, reconfigure your server hardware back to its previous configuration and 
            restart InputAccel Server or reactivate the product.  To reactivate now, refer to the InputAccel 
            Administration Guide."
            </item>
            <item>
            "The InputAccel Server environment has changed significantly since the last time you activated the 
            product or you are using a node of an MSCS Cluster that was not activated.  The server is now fully 
            operational in a grace period that will expire in %d days, %d hours, %d minutes.  To resolve this, 
            reconfigure your server hardware back to its previous configuration and restart InputAccel Server or 
            activate the product on this cluster node.  To activate now, refer to the InputAccel Administration Guide."
            </item>
            </list>
            Note the reason could be in a non-English language when the operating system is running in a non-English language supported by EMC.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ILicenseManager">
            <summary>
            Manages the license codes on an InputAccel Server.
            </summary>
            <remarks>Use the <see cref="M:Emc.InputAccel.Workflow.Client.ICache.Commit"/> to send values to the InputAccel Server.</remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILicenseManager.Create">
            <summary>
            Creates a new license.
            </summary>
            <returns>The license object is to be modified.</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILicenseManager.Import(System.IO.Stream)">
            <summary>
            Imports licenses.  
            </summary>
            <param name="license">Stream representing the licenses.</param>
            <remarks>These are typically the v1.2 .lic files supplied by EMC|Captiva production.</remarks>
            <returns>A list of newly created licenses</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILicenseManager.GetEnumerator">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILicenseManager.Delete(Emc.InputAccel.Workflow.Client.ILicense)">
            <summary>
            Deletes a license
            </summary>
            <param name="license"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILicenseManager.Value">
            <summary>
            Returns a global value provider suitable for setting and getting values
            </summary>
            <returns>global value provider</returns>
            <remarks>Do not cache this reference.  Call this function as needed.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILicenseManager.Activation">
            <summary>
            Gets an activation object used to activate and query the activation status of the InputAccel Server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IAListElement">
            <summary>
            Generic string elements in a list.
            </summary>    
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IAListEnumerator`1">
            <summary>
            Generic list enumerator for an IAList object.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IABatchListEnumerator">
            <summary>
            Enumerator for a batch list.
            </summary>    
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IAInstanceListEnumerator">
            <summary>
            Enumerator for a step list.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IAProcessListEnumerator">
            <summary>
            Enumerator for a process list.
            </summary>    
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ILock">
            <summary>
            Represents an InputAccel tree lock.
            </summary>
            <remarks>Call Dispose to remove this lock.</remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IServerResource">
            <summary>
            Representation of a resource on an inputAccel Server such as a batch, process, task, node, and so on.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServerResource.MakeInvalid">
            <summary>
            Calling this function will cause this object to become invalid. This function is usually called from the <c>OnServerDisconnectInternal</c> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServerResource.Server">
            <summary>
            Gets the InputAccel Server that this object belongs to.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServerResource.Client">
            <summary>
            Gets the <c>IAClient</c> object that this object belongs to.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServerResource.IsValid">
            <summary>
            Gets a value that specifies whether this object is valid.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILock.#ctor(Emc.InputAccel.Workflow.Client.INode,Emc.InputAccel.Workflow.Client.LockType,System.Void*)">
            <summary>
            Constructor to use with Modify ("C" or change) and Delete ("D" or delete) locks
            created by the client.
            </summary>
            <param name="type">Type of lock.</param>
            <param name="node">The node the lock belongs to.</param>
            <param name="lockWait">The lock wait structure returned by the iaclnt32 API.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILock.#ctor(Emc.InputAccel.Workflow.Client.INode)">
            <summary>
            Constructor to use with a Modify ("C" or change) lock that has been "unsaved" (restored).
            </summary>
            <param name="node">The node that the lock belongs to.</param>
            <remarks>
            The saved change lock must be restored successfully (IATreeUnsaveLock) before calling this
            function. IATreeUnsaveLock does not give a lock wait structure when listing saved locks, 
            hence the lack of a lock wait parameter.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILock.Dispose">
            <summary>
            Disposes and removes this lock. 
            </summary>
            <remarks>
            If <see cref="P:Emc.InputAccel.Workflow.Client.ILock.Type"/> is <see cref="F:Emc.InputAccel.Workflow.Client.LockType.Modify"/> and <see cref="P:Emc.InputAccel.Workflow.Client.ILock.Save"/> is
            TRUE, the lock is saved on the InputAccel Server when Dispose is called.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILock.Node">
            <summary>
            Gets the node this lock belongs to.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILock.Save">
            <summary>
            Gets or sets whether a Modify lock should be saved on the InputAccel Server when <see cref="M:Emc.InputAccel.Workflow.Client.ILock.Dispose"/> 
            is called. Save does not apply if <see cref="P:Emc.InputAccel.Workflow.Client.ILock.Type"/> is <see cref="F:Emc.InputAccel.Workflow.Client.LockType.Delete"/>.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILock.Type">
            <summary>
            Gets or sets the type of lock.
            </summary>
            <remarks>
            The type of lock may be changed with this property. If the change fails, an exception
            of type <see cref="T:Emc.InputAccel.Workflow.Client.LockException"/> is thrown. For example,
            a node may have a Modify lock and its parent may have a saved Modify lock. Changing the
            Modify lock to a Delete lock will fail and an exception will be thrown.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LockWaitEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.ITree.OnLockWait"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LockWaitEventArgs.Cancel">
            <summary>
            Gets or sets a value that determines whether or not to cancel the wait.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LockWaitEventArgs.State">
            <summary>
            Gets the current state of this wait operation.
            </summary>
            <remarks>
            The state of the wait operation could be Start, Tick, or End.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LockWaitEventArgs.Reason">
            <summary>
            Gets the reason for this event being fired.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IPermission">
            <summary>
             Represents a permission granted to a single user or group.
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IPermission.Name">
            <summary>
             Name of user or group
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IPermission.Access">
            <summary>
             The permission granted to the user or group
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IPrefetchParameters">
            <summary>
            Represents a set of additional values to be prefetched with a task.
            </summary>
            <remarks>
            Use this to save the InputAccel Server and InputAccel clients from unnecessary network communications when processing tasks.
            </remarks>
            <example>
            <code>
            void RunTask(IClient client)
            {
                IPrefetchParameters parameters = client.CreatePrefetchParameters();
                
                parameters.AddBatch("BatchName");
                parameters.AddInstance("SetupOption_Checkbox");
                parameters.AddNode("Level0_Values_*");
                client.BeginProcessing(parameters);
            }
            </code>
            </example>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IPrefetchParameters.AddBatch(System.String)">
            <summary>
            Adds a batch value when fetching a task.
            </summary>
            <param name="value">The value name to fetch. "*" is valid for defining 
            suffixes or prefixes.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IPrefetchParameters.AddBatch(System.String,System.Boolean)">
            <summary>
            Adds a batch value when fetching a task.
            </summary>
            <param name="value">The value name to fetch. "*" is valid for defining 
            suffixes or prefixes.</param>
            <param name="resolve">If TRUE, appends "$batch/@" to the value name to 
            resolve tree string values and place them into the cache.
            Otherwise, appends "$batch/" to the value name.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IPrefetchParameters.AddStep(System.String)">
            <summary>
            Adds a step value when fetching a task.
            </summary>
            <param name="value">The value name to fetch. "*" is valid for defining 
            suffixes or prefixes.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IPrefetchParameters.AddStep(System.String,System.Boolean)">
            <summary>
            Adds a step value when fetching a task.
            </summary>
            <param name="value">The value name to fetch. "*" is valid for defining 
            suffixes or prefixes.</param>
            <param name="resolve">If TRUE, appends "$batch/$step/@" to the value name to 
            resolve tree string values and place them into the cache.
            Otherwise, appends "$batch/$step/" to the value name.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IPrefetchParameters.AddNode(System.String)">
            <summary>
            Adds a node value when fetching a task.
            </summary>
            <param name="value">The value name to fetch. "*" is valid for defining 
            suffixes or prefixes.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IPrefetchParameters.AddNode(System.String,System.Boolean)">
            <summary>
            Adds a node value when fetching a task.
            </summary>
            <param name="value">The value name to fetch. "*" is valid for defining 
            suffixes or prefixes.</param>
            <param name="resolve">If TRUE, appends "$batch/$step/$node/@" to the value name to 
            resolve tree string values and place them into the cache.
            Otherwise, appends "$batch/$step/$node/" to the value name.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IPrefetchParameters.ToString">
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IProcessDirectory">
            <summary>
            Represents a directory on an InputAccel Server where InputAccel processes are stored.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IProcessDirectory.Delete">
            <summary>
            Delete this particular directory
            </summary>
            <remarks>
            This object becomes invalid once it is deleted. Delete is supported only when connected to one 
            InputAccel Server, otherwise an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IProcessDirectory.Name">
            <summary>
            Displayable name of the process directory
            </summary>        
            <remarks>
            Setting of Name is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IProcessDirectory.Security">
            <summary>
             Provides access to security settings
            </summary>
            <returns></returns>
             <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IProcessDirectory.DirectoryName">
            <summary>
            Actual name of the process directory
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAProcesses.Remove(System.String)">
            <summary>
            Removes a process from the global process list.
            </summary>
            <param name="processId">The process ID.</param>
            <returns>Returns TRUE if the process was removed, otherwise returns FALSE.</returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IAProcesses.Count">
            <summary>
            Gets the number of processes in the collection.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IAProcesses.Item(System.Int32)">
            <summary>
            Indexer for the processes collection.
            </summary>
            <param name="key">Index of the process to be retrieved.</param>
            <returns>The process at that location.</returns>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.RemoveSavedLockEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.ITree.OnRemoveSavedLock"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.RemoveSavedLockEventArgs.Node">
            <summary>
            Gets the locked node that is preventing a tree operation from continuing.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.RemoveSavedLockEventArgs.Remove">
            <summary>
            Gets or sets a value that indicates if the saved lock should be removed and allow the tree operation to continue,
            or if the operation should be canceled.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.RemoveSavedLockEventArgs.Reason">
            <summary>
            Gets the reason for this event being fired.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ISecurity">
            <summary>
             Represents the actions that can be taken on access permissions.
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ISecurity.SetPermissions(System.Collections.Generic.IEnumerable{Emc.InputAccel.Workflow.Client.IPermission})">
            <summary>
             Set the permissions for an object. For batches and departments, clears any existing permissions.
            </summary>
            <param name="permissions">A list of permissions to set on an object.</param>
             <exception cref="T:Emc.InputAccel.Workflow.Client.SecuritySetAccessException"></exception>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ISecurity.GetPermissions">
            <summary>
             Get a list of permissions.
            </summary>
            <returns>A list of permissions.</returns>
             <exception cref="T:Emc.InputAccel.Workflow.Client.SecurityPermissionsListException"></exception>
             <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IServerSecurity">
            <summary>
            Represents InputAccel Server security to access specific objects.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServerSecurity.DefaultSecurity(Emc.InputAccel.Workflow.Client.PermissionType)">
            <summary>
             Gets an object to access default permissions on the InputAccel Server. 
            </summary>
            <param name="type">Type of permission to access.</param>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServerSecurity.DepartmentSecurity(System.String)">
            <summary>
             Gets an object to access permissions for a specific department.
            </summary>
            <param name="departmentName">Name of the department.</param>
            <returns>A collection of permissions</returns>
             <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IServerSetting">
            <summary>
            Represents an InputAccel Server setting.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServerSetting.Get``1(Emc.InputAccel.Workflow.Client.ServerSettingScope)">
            <summary>
             Get the setting value
            </summary>
            <param name="scope">The setting scope</param>
            <typeparam name="T">The type of value</typeparam>
            <returns>An object of the specified type</returns>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServerSetting.Set``1(Emc.InputAccel.Workflow.Client.ServerSettingScope,``0)">
            <summary>
             Set the setting value
            </summary>
            <param name="scope">The setting scope</param>
            <param name="value">Value to set on the setting</param>
            <typeparam name="T">The type of value</typeparam>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServerSetting.GetStartup``1">
            <summary>
             Startup value for the setting.
            </summary>
             <remarks>
             Returns startup value for settings.
             </remarks>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServerSetting.ToString">
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServerSetting.Name">
            <summary>
            Server setting name
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServerSetting.Type">
            <summary>
            Setting type
            </summary>
            <see cref="T:System.Type"/>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServerSetting.Minimum">
            <summary>
             Minimum allowed value for the setting.
            </summary>
             <remarks>
             Returns 0 for string settings.
             </remarks>
             <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServerSetting.Maximum">
            <summary>
             Maximum allowed value for the setting.
            </summary>
             <remarks>
             Returns maximum length for string settings.
             </remarks>
             <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServerSetting.Access">
            <summary>
            The action allowed on the setting.
            </summary>
            <see cref="T:Emc.InputAccel.Workflow.Client.ServerSettingAccess"/>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerWaitEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.QuickModule.IQuickModuleEvents.OnServerWait"/> event. 
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ServerWaitEventArgs.Cancel">
            <summary>
            Gets or sets a value that determines whether or not to cancel the wait.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ServerWaitEventArgs.State">
            <summary>
            Gets the current state of this wait operation.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ServerWaitEventArgs.Server">
            <summary>
            Gets the InputAccel Server that is being waited on.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IAStreamUtility">
            <summary>
            Utility functions to work with streams and Zip archives.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStreamUtility.CompressFolder(System.IO.DirectoryInfo,System.IO.Stream)">
            <summary>
            Compresses files into a stream.
            </summary>
            <param name="sourceFolder">The source folder to use.</param>
            <param name="stream">The destination stream.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStreamUtility.ExtractZip(System.IO.DirectoryInfo,System.IO.Stream)">
            <summary>
            Extracts a Zip stream to the destination folder.
            </summary>
            <param name="destinationFolder">Target folder to extract files to.</param>
            <param name="stream">Stream to extract files from.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStreamUtility.ExtractPixZip(System.IO.DirectoryInfo,System.IO.Stream)">
            <summary>
            Backwards compatibility extraction using PixZip library.
            </summary>
            <param name="destinationFolder"></param>
            <param name="stream"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStreamUtility.ExtractZip(System.IO.DirectoryInfo,System.String)">
            <summary>
            Extracts a Zip file to the destination folder.
            </summary>
            <param name="destinationFolder">Target folder to extract files to.</param>
            <param name="zipFilePath">Filename to extract files from.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStreamUtility.BufferStreamToFile(System.IO.Stream,System.String@,System.IO.DirectoryInfo@)">
            <summary>
            Buffers a stream to a temporary file as necessary.
            </summary>
            <param name="stream">Stream to be buffered.</param>
            <param name="filename">Name of file on the local filesystem.</param>
            <param name="streamFolder">Folder containing the temporary file.</param>
            <remarks>If the returned <c>streamFolder</c> is not a null value, then this folder was created and needs to be cleaned up.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStreamUtility.CreateTemporaryFolder">
            <summary>
            Creates a temporary folder in the %temp% folder
            </summary>
            <returns>The temporary folder</returns>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IValue">
             <summary>
             Represents a non-nodal IA Value.
             </summary>
             <remarks>
             Non-nodal IA Values only have a name and a type.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValue.ToString">
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IValue.Name">
            <summary>
            Gets or sets the name of the IA Value.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IValue.Type">
            <summary>
            Gets or sets the IA Value type.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.LocalTreeEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.ITree.OnOldLocalTree"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LocalTreeEventArgs.Refresh">
            <summary>
            Gets or sets a value that indicates whether or not the tree should be refreshed.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.LocalTreeEventArgs.Reason">
            <summary>
            Gets the reason for this event being fired.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IALocalTreeEventArgs">
            <summary>
            Provides class for the EventArgs passed to ITree.OnOldLocalTree
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IALocalTreeEventArgs.Refresh">
            <summary>
            Indicates whether the tree should be refreshed.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters">
            <summary>
            Represents a group of properties that specify the subset of batches or processes returned
            in <see cref="M:Emc.InputAccel.Workflow.Client.IClient.ListBatches(Emc.InputAccel.Workflow.Client.IBatchProcessListParameters)"/> or 
            <see cref="M:Emc.InputAccel.Workflow.Client.IClient.ListProcesses(Emc.InputAccel.Workflow.Client.IBatchProcessListParameters)"/>.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.SetModule(System.String,Emc.InputAccel.Workflow.Client.TaskedModule)">
            <summary>
            Return batches containing only the specified module (TaskedModule.TaskedAndNonTasked)
            or batches containing only the specified module with tasks (TaskedModule.Tasked).
            </summary>
            <param name="module">The module name.</param>
            <param name="tasked">A value specifying whether to get batches with only modules that have tasks
            or with modules both with and without tasks.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.SetModule(System.String,Emc.InputAccel.Workflow.Client.Department)">
            <summary>
            Returns batches containing the specifed module step for the current department or any department.
            </summary>
            <param name="module">The name of the module associated with the step.</param>
            <param name="department">A value specifying whether to get only batches with the current department
            or batches with any department.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.SetModule(System.String,Emc.InputAccel.Workflow.Client.TaskedModule,Emc.InputAccel.Workflow.Client.Department)">
            <summary>
            Returns batches containing modules with or without pending tasks and for the current or any department. 
            </summary>
            <param name="module">The module name.</param>
            <param name="tasked">A value specifying whether to get batches containing module steps with tasks
            or module steps with and without tasks.</param>
            <param name="department">A value specifying whether to get only batches with the current department
            or batches with any department.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.ToString">
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.Module">
            <summary>
            Gets or sets all batches or processes containing a step of the specified module. 
            If empty it returns a null value.
            </summary>
            <remarks>If this property is set to a module name, the batch or process list contains
            only batches or processes that that include a step of the module. Otherwise, the list is not
            limited to only batches and processes that contain a step of the module.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.Directory">
            <summary>
            Gets or sets processes in the specified directory.
            </summary>
            <remarks>The Directory property only applies to a process list.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.Permissions">
            <summary>
            Gets or sets the processes for which the current user has the specified permissions.
            </summary>
            <remarks>The Permissions property only applies to a process list.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.Tasked">
            <summary>
            Gets the TaskedModule value set with 
            <see cref="M:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.SetModule(System.String,Emc.InputAccel.Workflow.Client.TaskedModule)"/> 
            or <see cref="M:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.SetModule(System.String,Emc.InputAccel.Workflow.Client.TaskedModule,Emc.InputAccel.Workflow.Client.Department)"/>.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.Department">
            <summary>
            Gets the Department value set with   
            <see cref="M:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.SetModule(System.String,Emc.InputAccel.Workflow.Client.Department)"/> 
            or <see cref="M:Emc.InputAccel.Workflow.Client.IBatchProcessListParameters.SetModule(System.String,Emc.InputAccel.Workflow.Client.TaskedModule,Emc.InputAccel.Workflow.Client.Department)"/>.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IBatch">
            <summary>
            Represents an InputAccel batch.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IBatchProcess">
            <summary>
            Represents the base object of a batch or process.
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IBatchProcess.id">
            <summary>The process or batch ID.</summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IBatchProcess.instanceList">
            <summary>The list of instances that have been defined in the process or batch.</summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IBatchProcess.valueProvider">
            <summary>The server where the batch or process resides.</summary>        
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.#ctor(System.String,System.String,Emc.InputAccel.Workflow.Client.IServer,System.String)">
            <summary>Creates a new instance of a process or batch.</summary>
            <param name="server">The InputAccel Server that "owns" the process or batch.</param>
            <param name="batchProcessID">The unique ID of the process or batch.</param>
            <param name="name">The name of the process or batch.</param>
            <param name="server">The InputAccel Server where the object is located.</param>
            <param name="guidValueName">The name of the IA Value containing the GUID for the process or batch.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.Dispose(System.Boolean)">
            <summary>Disposes the batch object</summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.ToString">
            <summary>
            Returns the name of the batch or process.
            </summary>
            <returns>The name of the batch or process.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.Level(System.Int32)">
            <summary>
            The batch or process level.
            </summary>
            <param name="number">The number of the batch or process level.</param>
            <returns>The Level object or a null value if the object does not exist.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.Level(System.String)">
            <summary>
            The name of the batch or process level. 
            </summary>
            <param name="name">The name of the batch or process level.</param>
            <returns>The Level object or a null value if the object does not exist.</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.FindStep(System.String)">
            <summary>
            Represents an IStep object of the specified name.
            </summary>
            <param name="stepName">The name of the step to find.</param>
            <returns>An IStep object identified by stepName or null if the step name is not found.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.Delete">
            <summary>
            Deletes the batch or process.
            </summary>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchDeleteException">An error occurred 
            while deleting the batch.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ProcessDeleteException">An error occurred 
            while deleting the process.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.Security">
            <summary>
            Security settings for the batch or process.
            </summary>
            <returns>An ISecurity object used for setting access permissions.</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.Value">
            <summary>
            Returns a value provider used to get and set IA Values.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.CopySettings">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.CopySettings(System.IO.Stream)">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.PasteSettings">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.PasteSettings(System.IO.Stream)">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatchProcess.ListValues">
            <summary>
            Lists values that are global in the batch or process.
            </summary>
            <returns>A collection that lists all global batch or process values that exist for this object.</returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.IsValid">
            <summary>
            Gets a value that specifies whether this object is valid.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.Id">
            <summary>
            Gets the batch or process ID.
            </summary>
            <remarks>
            Unique among all batches and processes in a ScaleServer group.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.Levels">
            <summary>
            Gets a list of levels defined for the batch or process.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.Name">
            <summary>
            Gets or sets the batch or process name.
            </summary>
            <remarks>
            This property corresponds to the "BatchName" value and is affected by <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/>
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.Server">
            <summary>
            Gets the InputAccel Server containing the batch or process.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.Guid">
            <summary>
            Gets the batch or process GUID.
            </summary>
            <remarks>
            Unique among all batches and processes on an InputAccel Server. Duplicates may exist on other InputAccel Servers.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.Description">
            <summary>
            Gets or sets the batch or process description.
            </summary>
            <remarks>
            This property corresponds to the "Description" value and is affected by <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/>
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.Steps">
            <summary>
             Gets a list of steps in the batch or process.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatchProcess.Priority">
            <summary>
            Gets or sets the batch or process priority.
            </summary>
            <remarks>This property corresponds to the "Priority" value and is affected by <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/></remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.Dispose(System.Boolean)">
            <summary>Disposes of the resources used by the object</summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.MakeInvalid">
            <summary>Handles InputAccel Servers that get disconnected, marking every related object as invalid.</summary>
            <remarks>Enables ScaleServer-compatible modules to continue to function when 
            one or more InputAccel Servers in a ScaleServer group becomes unavailable.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.Delete">
            <summary>Deletes the batch and all related files from the InputAccel Server.</summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.Unload">
            <summary>
            Unload this batch from the InputAccel Server memory.
            </summary>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchException"></exception>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.Export(System.IO.Stream)">
            <summary>
            Export this batch to a stream object.
            </summary>
            <param name="destination">
            Stream object to which to export this batch.
            </param>
            <exception cref="T:Emc.InputAccel.Workflow.Client.GetFileFromServerException">
            An error occurred while retrieving the file from an InputAccel Server.
            </exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.Sync">
            <summary>
            Saves the batch data from the InputAccel Server memory to disk.
            </summary>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchException">An error occurred while
            working with the IBatch object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.Deactivate">
            <summary>
            Deactivates the batch.
            </summary>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchException"></exception>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.SetActive">
            <summary>
            This is called by Client.ActivateBatch
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.ToString">
            <summary>
            Returns the name of the batch.
            </summary>
            <returns>The name of the batch.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.Security">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.GetValueNames">
            <summary>
            This holds all the possible file values
            <code>                     
                       [0] IBML_Import.OutputImage8
                       [0] IBML_Import.OutputImage9
                       [0] FW_IPP.AlternateImage
                       [0] FW_IPP.EnhancedImage
                       [5] IA_ImageEx_Rscn.Level5_OutputFile
            </code>
            </summary>
            <returns>An array of instances with multiple value names per instance.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.GetFilesToCopy">
            <summary>
            Copies batch files to a temporary directory and returns this list
            </summary>
            <returns>Local filesystem folder with batch files</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IBatch.GetFileFromServer(System.String,System.IO.DirectoryInfo)">
            <summary>
            Download a file from IAS
            </summary>
            <param name="IAFilePath">Path on IAS</param>
            <param name="destinationFolder">Folder on local file system</param>
            <param name="downloadedFiles">List to add files to</param>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.Tree">
            <summary>
            Gets batch tree.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.Error">
            <summary>
            Gets or sets the error state of the batch. 
            </summary>
            
            <remarks>
             This property corresponds to the "BatchError" IA Value and is affected 
            by <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/>. When this value is equal to TRUE, the InputAccel Server does not send any tasks from this batch.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.Hold">
            <summary>
            Gets or sets the batch hold status. Returns TRUE if the batch is on hold, otherwise returns FALSE. When equal to TRUE, the InputAccel Server does not send any tasks from this batch.
            </summary>
            
            <remarks>
            This property corresponds to the "BatchHold" IA Value and is affected
            by <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/>. 
            <para>TRUE if the batch 
            is on hold, otherwise FALSE. When TRUE, the InputAccel Server does not send 
            any tasks from this batch.</para>
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.IsActive">
            <summary>
            Gets the active status of the batch. Returns TRUE if the batch is active, otherwise FALSE.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.CreationDateTime">
            <summary>
            Gets the date and time that the batch was created.
            </summary>
            <remarks>
            This property is populated when <see cref="T:Emc.InputAccel.Workflow.Client.IClient"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IClient.ListBatches"/> is called.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.ProcessName">
            <summary>
            Gets the ID of the process used to create this batch.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.SavedLockCount">
            <summary>
            The number of saved locks.
            </summary>
            <remarks>
            This is populated when <see cref="T:Emc.InputAccel.Workflow.Client.IClient"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IClient.ListBatches"/> is called.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.Status">
            <summary>
            Gets the status of the batch. 
            </summary>
            <remarks>
            This property corresponds to the "BatchStatus" IA Value and is affected 
            by <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/>
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IBatch.TotalLocks">
            <summary>
            Gets the total number of locks in the batch.
            </summary>
            <remarks>
            This is populated when <see cref="T:Emc.InputAccel.Workflow.Client.IClient"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IClient.ListBatches"/> is called.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ICache">
            <summary>
            Represents the IA Value cache. 
            </summary>
            <remarks>
            Only one cache object exists and is accessed through <see cref="P:Emc.InputAccel.Workflow.Client.IClient.Cache"/>.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICache.CreateCacheParameters">
            <summary>
            Creates cache parameters to be used with <see cref="M:Emc.InputAccel.Workflow.Client.ICache.Fill(Emc.InputAccel.Workflow.Client.ICacheParameters)"/>.
            </summary>
            <returns>A new <see cref="T:Emc.InputAccel.Workflow.Client.ICacheParameters"/> object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICache.Fill(Emc.InputAccel.Workflow.Client.ICacheParameters)">
            <summary>
            Fills the cache with the latest values from the InputAccel Server.
            </summary>
            <remarks>The Fill method is an important resource for reducing communication round trips to 
            the InputAccel Server. It allows multiple IA Value requests to be queued up in one fill call.  </remarks>
            <param name="parameters">Indicates which values to retrieve from the InputAccel Server.</param>        
            <example>
            <code>
            void FillCache(ICache cache, IBatch batch, IStep step)
            {
                ICacheParameters parameters = cache.CreateCacheParameters();
                
                parameters.Add(step);                   // add all step values
                parameters.Add(batch, "Priority");      // add a specific batch value
                parameters.Add(batch, "AnotherKey");
                parameters.Add(batch, "KeyPrefix*");    // add batch value(s) with a specific prefix
                cache.Fill(parameters);                 // fill all the parameters at once reducing trips to and from server
            }
            </code>
            
            <para>The following code demonstrates how to fill the cache with batch information.</para>
            <code>
            void FillCache(IClient client)
            {        
                ICacheParameters parameters = client.Cache.CreateCacheParameters(); 
                foreach (IBatch batch in client.ListBatches())
                {
                    parameters.Add(batch, "Description");   // go through each batch and fill the Description value
                }
                client.Cache.Fill(parameters);
            }
            </code>
            </example>
            <exception cref="T:Emc.InputAccel.Workflow.Client.CacheException">An error occurred while working 
            with an <c>ICache</c> object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICache.Fill(System.Collections.Generic.IEnumerable{Emc.InputAccel.Workflow.Client.ICacheParameters})">
            <summary>
            Fills the cache with the values retrieved from the InputAccel Server.
            </summary>
            <param name="parameters">An enumeration of parameters defining which values to retrieve from the InputAccel Server.</param>
            <remarks>See <see cref="M:Emc.InputAccel.Workflow.Client.ICache.Fill(Emc.InputAccel.Workflow.Client.ICacheParameters)"/> for examples.</remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.CacheException"></exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICache.Clear(Emc.InputAccel.Workflow.Client.CacheType)">
            <summary>
            Clears values from the cache.
            </summary>
            <param name="values">The type of values to clear from the cache.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ICache.Commit">
            <summary>
            Commits cache values and tasks to the InputAccel Server.
            </summary>
            <remarks>
            To commit values and tasks to the InputAccel Server, call <see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0)"/> or 
            <see cref="M:Emc.InputAccel.Workflow.Client.ITask.Finish(System.Int32)"/>, respectively, then call 
            <c>Commit</c> to send all values and tasks to the InputAccel Server.
            </remarks>        
            <example>
            <code>
            ITask task1, task2;
            ICache cache;
            ...
            task1.Finish();
            task2.Finish();
            cache.Commit(); // commit both tasks to the server 
            </code>
            </example>        
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ICache.Disabled">
            <summary>
            Gets or sets a value that determines whether the cache is disabled for the specified operations.
            </summary>
            <remarks>Certain properties of objects are convenience wrappers around 
            <see cref="T:Emc.InputAccel.Workflow.Client.IValueProvider"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0)"/> and 
            <see cref="T:Emc.InputAccel.Workflow.Client.IValueProvider"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Get``1(System.String,``0)"/>.
            Using the Disabled property on these objects causes 
            all <see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Get``1(System.String,``0)"/> 
            calls to these properties to bypass the cache and instead 
            routes them directly to the InputAccel Server. 
            <para>
            The Disabled property is convenient for a small number of requests to the InputAccel Server.
            For larger data sets it is more efficient to update
            properties directly by calling to <see cref="M:Emc.InputAccel.Workflow.Client.ICache.Fill(Emc.InputAccel.Workflow.Client.ICacheParameters)"/> and
            writing values with <see cref="M:Emc.InputAccel.Workflow.Client.ICache.Commit"/>.</para>
            <para>The Disabled property applies to all threads accessing the Workflow.Client.</para>
            </remarks>
            <example>
            <code>
            ICache cache = ...;
            IBatch batch = ...;
            cache.Disabled = CacheOperations.SetProperty | CacheOperations.GetProperty;
            batch.Name = "test";        // sent directly to the server
            string name = batch.Name;   // received directly from the server
            </code>
            </example>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ICache.GlobalTask">
            <summary>
            This task is used in writing values for taskless operations such as global values.
            This is a global task to be shared by all taskless operations, so subscribe to the OnFinish event to figure
            out when to update any stored objects.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IClient">
            <summary>
            A class representing the InputAccel Client.
            </summary>
            <remarks>
            It is recommended to handle the IClient events (OnMessageCallback, OnNewTask, OnServerAdd, and so on)
            in a manner that does not block the thread firing the event. This allows your program to
            receive IClient events as soon as they occur instead of waiting until processing of the previous
            event has finished. An example of handling the events in a non-blocking manner is to use the
            ManualResetEvent class to signal another thread that processes the events.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CreateClient">
            <summary>
            A factory method that creates and returns the main IClient object.
            </summary>
            <returns>Main client object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CreateClient(Emc.InputAccel.Workflow.Client.ClientOptions)">
            <summary>
            A factory method that creates and returns the main IClient object.
            </summary>
            <param name="options">Options used in the construction of the client.</param>
            <returns>Main client object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing">
            <summary>
            Starts processing tasks.
            </summary>
            <remarks>Processes a maximum of one task at a time.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(Emc.InputAccel.Workflow.Client.IPrefetchParameters)">
            <summary>
            Starts processing tasks.
            </summary>
            <param name="parameters">IA Values to prefetch with tasks.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(System.Int16)">
            <summary>
            Starts processing tasks.
            </summary>
            <param name="maxTasks">Maximum number of tasks to process concurrently.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(System.Int16,Emc.InputAccel.Workflow.Client.IPrefetchParameters)">
            <summary>
            Starts processing tasks.
            </summary>
            <param name="maxTasks">Maximum number of tasks to process concurrently.</param>
            <param name="parameters">IA Values to prefetch with tasks.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(System.Int16,Emc.InputAccel.Workflow.Client.IBatch)">
            <summary>
            Starts processing tasks.
            </summary>
            <param name="maxTasks">Maximum number of tasks to process concurrently.</param>
            <param name="batch">Batch to process tasks from.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(System.Int16,Emc.InputAccel.Workflow.Client.IBatch,Emc.InputAccel.Workflow.Client.IPrefetchParameters)">
            <summary>
            Starts processing tasks.
            </summary>
            <param name="maxTasks">Maximum number of tasks to process concurrently.</param>
            <param name="batch">Batch to process tasks from.</param>
            <param name="parameters">IA Values to prefetch with tasks.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(Emc.InputAccel.Workflow.Client.IBatch)">
            <summary>
            Starts processing tasks.
            </summary>
            <param name="batch">Batch from which to process tasks.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(Emc.InputAccel.Workflow.Client.IBatch,Emc.InputAccel.Workflow.Client.IPrefetchParameters)">
            <summary>
            Starts processing tasks.
            </summary>
            <param name="batch">Batch from which to process tasks.</param>
            <param name="parameters">IA Values to prefetch with tasks.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ListBatches">
            <summary>
            Lists all batches. If connected to a ScaleServer group, the list contains all batches from all 
            InputAccel Servers in the ScaleServer group.
            </summary>
            <returns>An enumeration of batches.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ListBatches(Emc.InputAccel.Workflow.Client.IBatchProcessListParameters)">
            <summary>
            Lists a subset of all batches. If connected to a ScaleServer group, the list contains
            all batches from all InputAccel Servers in the ScaleServer group that match the pattern parameter.
            </summary>
            <param name="pattern">Specifiers for enumerating a subset of all batches.</param>
            <returns>An enumeration of batches.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ListDomains">
            <summary>
            Lists Windows network domains from the first available InputAccel Server
            in a ScaleServer group. This is the same list of domains that you would
            see if you were setting permissions on a network file on a Windows server.
            </summary>
            <returns>An enumeration of domains.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ListProcesses">
            <summary>
            Lists all processes. If connected to a ScaleServer group, the list contains all processes from 
            all InputAccel Servers connected to the ScaleServer group.
            </summary>
            <returns>An enumeration of processes.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ListProcesses(Emc.InputAccel.Workflow.Client.IBatchProcessListParameters)">
            <summary>
            Lists a subset of all processes. If connected to a ScaleServer group, the list contains
            all processes from all InputAccel Servers connected to the ScaleServer group 
            that match the pattern parameter.
            </summary>
            <param name="pattern">Specifiers for enumerating a subset of all processes.</param>
            <returns>An enumeration of processes.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ListGlobalValues">
            <summary>
            Lists global InputAccel Server values.
            </summary>
            <returns>An enumeration of IGlobalVariable objects.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Emc.InputAccel.Workflow.Client.IClient.CountModuleDepartmentItems(System.Int32)" -->
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CountBatches">
            <summary>
            Retrieves the batch count sorted by module and department.
            </summary>
            <returns>A dictionary of modules containing a dictionary of department/batch counts.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CountProcesses">
            <summary>
            Retrieves the process count sorted by module and department.
            </summary>
            <returns>A dictionary of modules containing a dictionary of department/process counts.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CountTasks(System.String)">
            <summary>
            Retrieves the task count sorted by batch and department.
            </summary>
            <param name="moduleName">
            The module for which task counts are retrieved.
            </param>
            <returns>A dictionary of batches containing a dictionary of department/task counts.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ListModules">
            <summary>
            Lists all modules. If connected to a ScaleServer group, the list contains all modules
            from all InputAccel Servers.
            </summary>
            <returns>An enumeration of modules.</returns>
            <remarks>
            <para>The list includes:</para> 
            <list type="bullet">
            <item>
            <description>All modules that are connected to any of the InputAccel Servers.</description>
            </item>
            <item>
            <description>All modules referred to by processes and batches installed on any of the InputAccel Servers.</description>
            </item>
            <item>
            <description>All modules that have been licensed on any of the InputAccel Servers.</description>
            </item>
            </list>
            <para>Duplicates are removed when it is possible to determine that they exist.</para>
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ActivateBatch(System.String)">
            <summary>
            Activates a batch that was previously deactivated by the Batch.Deactivate method.
            </summary>
            <param name="batchName">The name of the batch to activate.</param>
            <returns>An IBatch object that was activated.</returns>
            <remarks>
            ActivateBatch is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CreateBatch(System.String,Emc.InputAccel.Workflow.Client.IProcess)">
            <summary>
            Creates an InputAccel batch.
            </summary>
            <param name="batchName">The name of the batch.</param>
            <param name="process">The process object used to create the batch.</param>
            <returns>The newly created batch.</returns>
            <remarks>
            If the client is connected to multiple InputAccel Servers in a ScaleServer group, 
            it uses a round-robin method to create the batches. If an InputAccel Server is 
            unavailable, the client tries the next server in the list.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NoAvailableServerException">No 
            InputAccel Server is available.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateAlreadyExistsException">A batch 
            with the same name already exists.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateProcessNotFoundException">The process 
            specified for the new batch was not found.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateException">Batch creation failed.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CreateBatch(System.String,Emc.InputAccel.Workflow.Client.IProcess,Emc.InputAccel.Workflow.Client.CreateBatchHandler)">
            <summary>
            Creates an InputAccel batch.
            </summary>
            <param name="batchName">Name of the batch.</param>
            <param name="process">Process object used to create the batch.</param>
            <param name="createBatchHandler">
            Provides for control over the batch name and InputAccel Server before the batch is actually created.
            </param>
            <returns>The newly created batch or a null value if the CreateBatchHandler delegate returns FALSE.</returns>
            <remarks>
            If the client is connected to multiple InputAccel Servers in a ScaleServer group, 
            it uses a round-robin method to create the batches. If an InputAccel Server is 
            unavailable, the client tries the next server in the list. 
            <para>The delegate 
            <see cref="T:Emc.InputAccel.Workflow.Client.CreateBatchHandler"/> is called before 
            the batch is actually created.</para>
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NoAvailableServerException">No 
            InputAccel Server is available.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateAlreadyExistsException"> batch 
            with the same name already exists.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateProcessNotFoundException">The process 
            specified for the new batch was not found.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateException">Batch creation failed.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetBatch(System.String)">
            <summary>
            Gets an IBatch object with the specified batch ID.
            </summary>
            <param name="batchId">The ID of the batch to retrieve.</param>
            <returns>An IBatch object with an ID of batchID or a null value if the batch does not exist.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetBatch(System.String,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Gets a a batch based on batch ID and task.
            </summary>
            <param name="batchId">Thd ID of the batch to retrieve.</param>
            <param name="task">The task associated with the batch.</param>
            <returns></returns>
            <remarks>This is primarily used in multitask mode.</remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CreateBatchProcessListParameters">
            <summary>
            Creates a new instance of an IBatchProcessListParameters object for use 
            with <see cref="M:Emc.InputAccel.Workflow.Client.IClient.ListBatches(Emc.InputAccel.Workflow.Client.IBatchProcessListParameters)"/> and 
            <see cref="M:Emc.InputAccel.Workflow.Client.IClient.ListProcesses(Emc.InputAccel.Workflow.Client.IBatchProcessListParameters)"/>.
            </summary>
            <returns>A new IBatchProcessListParameters object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CreatePrefetchParameters">
            <summary>
            Creates a new instance of an IPrefetchParameters object for use with <see cref="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(Emc.InputAccel.Workflow.Client.IPrefetchParameters)"/> and
            <see cref="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing(Emc.InputAccel.Workflow.Client.IBatch,Emc.InputAccel.Workflow.Client.IPrefetchParameters)"/>.
            </summary>
            <returns>A new IPrefetchParameters object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CreateLogOnInfo">
            <summary>
            Creates an ILogOnInfo object for use with <see cref="M:Emc.InputAccel.Workflow.Client.IClient.LogOn(Emc.InputAccel.Workflow.Client.ILogOnInfo)"/>.
            </summary>
            <returns>A new ILogOnInfo object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CreateManualTask(Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Creates a task for manual mode.
            </summary>
            <param name="step">The step to create a task for.</param>
            <returns>An ITask object that the module can process.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.StepCastException">Casting the <c>IStep</c> 
            object failed.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.GetServerException">An error occurred while 
            retrieving the InputAccel Server object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.FinishProcessing">
            <summary>
            Stops processing tasks.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetModuleFeatures">
            <summary>
            Gtes the feature codes that are licensed by the InputAccel Server for the currently connected module.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetServers">
            <summary>
            Gets the InputAccel Servers specified during logon.
            </summary>
            <returns>
            An array of InputAccel Servers specified during logon. If the InputAccel Server belongs to a ScaleServer group, 
            this array is populated with all members of the group.
            </returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetTask(Emc.InputAccel.Workflow.Client.INode,Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Gets a task object located on the specified node for the specified step.
            </summary>
            <param name="node">The node on which the task exists.</param>
            <param name="step">The step for which the task exists.</param>
            <returns>The task object or a null value if a task does not exist on the node.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.TaskException">An error occurrerd
            while working with an <c>ITask</c> object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.LogOff">
            <summary>
            Logs off and disconnects from all InputAccel Servers.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.LogOn(Emc.InputAccel.Workflow.Client.ILogOnInfo)">
            <summary>
            Logs on to an InputAccel Server.
            </summary>
            <param name="info">Logon parameters object.</param>
            <returns>
            TRUE if the InputAccel Server was successfully logged on to, otherwise FALSE.
            </returns>
            <remarks>
            If FALSE is returned and <see cref="P:Emc.InputAccel.Workflow.Client.IClient.Reconnecting" /> is 
            TRUE, the server connection is configured to reconnect automatically. 
            Check <see cref="T:Emc.InputAccel.Workflow.Client.ILogOnError" /> 
            for the logon error. 
            <para>
            A module should not continue loading if LogOn returns FALSE and 
            <see cref="P:Emc.InputAccel.Workflow.Client.IClient.Reconnecting" /> is FALSE. 
            A fatal logon error has occurred and there is no possibility of reconnecting. 
            </para>
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.LogOn(System.Collections.Generic.ICollection{Emc.InputAccel.Workflow.Client.ILogOnInfo})">
            <summary>
            Logs on to a group of InputAccel Servers.
            </summary>
            <param name="info">Collection of logon parameter objects.</param>
            <returns>
            TRUE if one or more InputAccel Servers were successfully logged on to, otherwise FALSE.
            </returns>
            <remarks>
            If LogOn returns FALSE and IClient.Reconnecting is TRUE, the InputAccel Server connection(s)
            are configured to reconnect automatically. Check <see cref="T:Emc.InputAccel.Workflow.Client.ILogOnError"/> 
            for individual server connection errors.
            A module should not continue loading if LogOn returns FALSE and 
            <see cref="P:Emc.InputAccel.Workflow.Client.IClient.Reconnecting"/> is FALSE. 
            A fatal logon error occurrs and there is no possibility of reconnecting. 
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.LogOn(Emc.InputAccel.Workflow.Client.ILogOnInfo,System.Boolean)">
            <summary>
            Logs on to the InputAccel Server(s).
            </summary>
            <param name="info">Logon parameters object.</param>
            <param name="connectToGroup">
            TRUE means connect to all InputAccel Servers in the ScaleServer group to which this 
            InputAccel Server belongs.
            </param>
            <returns>
            TRUE if one or more InputAccel Servers were successfully logged on to, otherwise FALSE.
            </returns>
            <remarks>
            If FALSE is returned and <see cref="P:Emc.InputAccel.Workflow.Client.IClient.Reconnecting" /> is 
            TRUE the InputAccel Server connection(s) are configured to reconnect automatically. 
            Check <see cref="T:Emc.InputAccel.Workflow.Client.ILogOnError" /> 
            for individual server connection errors.
            <para>
            A module should not continue loading if LogOn returns FALSE and 
            <see cref="P:Emc.InputAccel.Workflow.Client.IClient.Reconnecting" /> is FALSE. 
            A fatal logon error has occurred and there is no possibility of reconnecting. 
            </para>
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetProcess(System.String)">
            <summary>
            Gets an IProcess object with the specified process ID.
            </summary>
            <param name="processId">The ID of the process to retrieve.</param>
            <returns>An IProcess object if the process exists, otherwise returns a null value.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.SetModuleFeatures(Emc.InputAccel.Workflow.Client.FeatureCode)">
            <summary>
            Requests the licensing feature codes from an InputAccel Server.
            </summary>
            <remarks>
            <para>Use this property to set the module features to be controlled by licensing. If you 
            are developing a module that has extended capabilities for which you want 
            users to pay an additional fee, use a feature code to control it. Only users who
            have a license code that enables the specified feature code are able to use the 
            feature.</para>
            <note type="implementnotes">
            Feature code X enables a module to connect to multiple 
            InputAccel Servers in a ScaleServer group. If your module is ScaleServer-compatible, 
            you must include feature code X in your license. Feature codes Y and Z 
            are reserved and should not be used by module developers in their modules.
            </note>
            </remarks>
            <param name="featureCodes">A set of feature codes to request for licensing from the InputAccel Server.</param>
            <returns>
            A value containing a combination of feature codes that were successfully licensed
            by the InputAccel Server for the currently connected module.
            </returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.Value">
            <summary>
            Returns a value provider used to get and set global values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetVersion(Emc.InputAccel.Workflow.Client.Component)">
            <summary>
            Gets the file version of an InputAccel component.
            </summary>
            <param name="component">The component whose version is to be retrieved.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CancelOfflineTask(Emc.InputAccel.Workflow.Client.INode,Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Cancels a task that has been previously set to offline. Trying to cancel a 
            task which is not offline returns an error.
            </summary>
            <param name="node">Node for which the task must be canceled.</param>
            <param name="step">Step for which the task must be canceled.</param>
            <exception cref="T:Emc.InputAccel.Workflow.Client.CancelOfflineTaskException">An error occurred
            while canceling an offline task.</exception>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.CancelOfflineTask(System.String,System.Int32,System.String)">
            <summary>
            Cancels a task that has been previously set to offline. Trying to cancel a 
            task that is not offline returns an error.
            </summary>
            <param name="batchId">Batch ID for batch that contains the task to be canceled.</param>
            <param name="nodeId">Node for which the task must be canceled.</param>
            <param name="stepName">Step for which the task must be canceled.</param>
            <remarks> Trying to cancel a task which is not offline throws an exception.</remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.CancelOfflineTaskException">An error occurred
            while canceling an offline task.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.Dispose">
            <summary>
            Closes and frees all Client resources.
            </summary>
            <remarks>
            Dispose of the Client after calling <see cref="M:Emc.InputAccel.Workflow.Client.IClient.LogOff"/> and before exiting the application.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.op_Implicit(Emc.InputAccel.Workflow.Client.IClient)~System.Void*">
            <summary>
            Provides a pointer suitable to be used with IACLNT32 functions.
            </summary>
            <param name="client"></param>
            <returns></returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.op_Implicit(Emc.InputAccel.Workflow.Client.IClient)~System.IntPtr">
            <summary>
            Provides a safe pointer suitable to be used with IACLNT32 functions
            </summary>
            <param name="client"></param>
            <returns></returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetServer(Emc.InputAccel.Workflow.Client.IBatchProcess)">
            <summary>
            Gets the InputAccel Server where the batch or process resides.
            </summary>
            <param name="batchProcess">The batch or process used to locate the InputAccel Server.</param>
            <returns>An InputAccel Server where the specified batch or process is located. If the InputAccel Server is not found, the return value is null.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetServer(System.String)">
            <summary>
            Gets the InputAccel Server from a batch ID or process ID.
            </summary>
            <param name="batchProcessId">The batch ID or process ID used to locate an InputAccel Server.</param>
            <returns>An InputAccel Server where the batch or process is located. If the InputAccel Server is not found, the return value is null.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.GetServer(System.Void*)">
            <summary>
            Retrieves an InputAccel Server from a server pointer.
            </summary>
            <param name="serverPointer"></param>
            <returns>An InputAccel Server.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Emc.InputAccel.Workflow.Client.IClient.IAMessageCallBack(System.Void*,System.Int32,System.String)" -->
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.StringToFeatureCode(System.String)">
            <summary>
            Takes a string of feature code characters A - Z, and then converts it into a FeatureCode enum.
            </summary>
            <param name="featureCodes">A string of feature code characters A - Z.</param>
            <returns>A FeatureCode enum.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.FeatureCodeToString(Emc.InputAccel.Workflow.Client.FeatureCode)">
            <summary>
            Takes a FeatureCode enum and converts it into a string of characters A - Z.
            </summary>
            <param name="featureCodes">A FeatureCode enum.</param>
            <returns>A string of characters A - Z.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.SetupCultureInfo">
            <summary>
            Setups culture specific variables
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.SetUserContext(System.String)">
            <summary>
            Sets the user logging context.
            </summary>
            <param name="userContext">User context to set.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.TestClnt32Exception(System.Int32)">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.ConfigEventPollNow">
            <summary>
            Requests the InputAccel Server to poll configuration events.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.SetServerMessageFlags(Emc.InputAccel.Workflow.Client.ServerMessageFlags,Emc.InputAccel.Workflow.Client.ServerMessageFlagsSetMask)">
            <summary>
            Subscribes and unsubscribes to InputAccel Server messages.
            </summary>
            <param name="flags">Message flag values.</param>
            <param name="flagsMask">Specifies which flags to set or clear.</param>
            <remarks>
            By default, non-administration modules are set to subscribe to all non-administration messages and
            administration modules are set to subscribe to all messages. This function can be used to change the default values.
            </remarks>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnMessageCallback">
            <summary>
            Occurs when a message is received from the InputAccel Server.
            </summary>
            <remarks>These messages depend on 
            the <see cref="T:Emc.InputAccel.Workflow.Client.ServerMessageFlags"/>.</remarks>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnNewTask">
            <summary>
            Occurs when a new task is received from the InputAccel Server.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnServerAdd">
            <summary>
            Occurs when an InputAccel Server has been added.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnServerDisconnect">
            <summary>
            Occurs when an InputAccel Server has been disconnected.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnServerReconnect">
            <summary>
            Occurs when an InputAccel Server has reconnected.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnServerRemove">
            <summary>
            Occurs when an InputAccel Server has been removed.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnServerWait">
            <summary>
            Occurs when the client is waiting for the InputAccel Server to respond. 
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseGrace">
            <summary>
            Occurs when the InputAccel Server detects that the license used is under a grace period.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseExpired">
            <summary>
            Occurs when an InputAccel Server detects that its license has expired.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseExpiring">
            <summary>
            Occurs when an InputAccel Server detects that its license is expiring.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseInvalidated">
            <summary>
            Occurs when an InputAccel Server detects that a module license has been invalidated.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnLicenseValidated">
            <summary>
            Occurs when an InputAccel Server detects that a module license has been validated.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnServerDiskFull">
            <summary>
            Occurs when an InputAccel Server detects that its disk space is almost full.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.IClient.OnServerDiskOk">
            <summary>
            Occurs when an InputAccel Server detects there is enough disk space available.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.Attended">
            <summary>
            If true, then the module is running in attended mode; otherwise the module is running in unattended mode.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.AutoLogOn">
            <summary>
            Automatic login option. 
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.Cache">
            <summary>
            Gets the cache object.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.ClusterBase">
            <summary>
            Gets the ClusterBase value for the ScaleServer group.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.CommandLine">
            <summary>
            Gets a dictionary of command line arguments.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.Departments">
            <summary>
            A list of departments processed by this module.  
            </summary>
            <remarks>The departments must exist in <see cref="P:Emc.InputAccel.Workflow.Client.IClient.GlobalDepartments"/> for it to be used by the module.</remarks>
            <example>
            <code>
            IList&gt;string&lt; departments = client.Departments
            
            departments.Add("Accounting");  // Process Accounting department tasks
            departments.Add("HR");          // Process HR department tasks
            client.Departments = departments;
            </code>
            </example>        
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.File">
            <summary>
            Gets an <see cref="T:Emc.InputAccel.Workflow.Client.IFile"/> object used for File operations.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.CltLogger">
            <summary>
            Returns the logging subsystem object.  Do not cache this property.
            </summary>        
            <remarks>This object is recreated whenever the login name changes, since the name needs to be passed
            into the logging subsystem.  The logging subsystem currently does not have way to redefine the user name, so
            a new logging object needs to be created on each name change.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.MultiThread">
            <summary>
            WARNING: For internal test use only; may cause erratic behavior.  Do not alter value after creating any IAClient.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.MachineName">
            <summary>
            Gets the name of the machine.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.ModuleId">
            <summary>Gets or sets the module ID.</summary>
            <remarks>Required for licensing and must be set before logging in to the module.</remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.GettingTagException">An exception thrown when getting ModuleId returns a value other than IA_SUCCESS.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ClientSetPropertyException">An exception thrown when setting ModuleId while the module has already been logged on.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.SettingTagException">An exception thrown when setting ModuleId returns a value other than IA_SUCCESS.</exception>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.ModuleName">
            <summary>Gets or sets the module name.</summary>
            <remarks>Required for licensing and must be set before logging in to the module.</remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ClientSetPropertyException">An exception thrown when setting the ModuleName while the module has already been logged on.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.SettingTagException">An exception thrown when setting ModuleName returns a value other than IA_SUCCESS.</exception>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.Prefetch">
            <summary>
            Gets or sets the number of tasks to prefetch from the InputAccel Server.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.Processing">
            <summary>
            Gets a value that specifies whether the client has started or finished processing. 
            </summary>
            <returns>TRUE after <see cref="M:Emc.InputAccel.Workflow.Client.IClient.BeginProcessing"/> is called or <c>-autostart</c> is specified; 
            FALSE after <see cref="M:Emc.InputAccel.Workflow.Client.IClient.FinishProcessing"/> is called.</returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.RequireSingleServer">
            <summary>
            Gets or sets a value that specifies whether the client module must connect to a single InputAccel Server only.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.SetupMode">
            <summary>
            Gets or sets the type of setup mode. See <see cref="T:Emc.InputAccel.Workflow.Client.SetupMode" /> for valid values.
            </summary>
            <remarks>This value must be set before <see cref="M:Emc.InputAccel.Workflow.Client.IClient.LogOn(Emc.InputAccel.Workflow.Client.ILogOnInfo,System.Boolean)" /> is 
            called.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.UserPermission">
            <summary>
            Gets an object used to check permissions for the currently logged-on user.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.GlobalDepartments">
            <summary>
            Gets an <see cref="T:Emc.InputAccel.Workflow.Client.IGlobalDepartments"/> object used to add, remove, and list departments on the InputAccel Server.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.Username">
            <summary>
            Name of user.        
            </summary>
            <remarks>This is the process owner unless impersonation is used.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.Reconnecting">
            <summary>
            Gets a value that specifies whether the client is attempting to reconnect to one or more InputAccel Servers.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClient.ReconnectInterval">
            <summary>
            Gets or sets the number of milliseconds between reconnection attempts when an InputAccel Server connection is lost.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IClient.IAMessageWindow">
            <summary>
            Container to handle IAClient messages.  The goal is to simply listen to these events and then call the IAClient events.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClient.IAMessageWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>Handle messages from IACLNT32.DLL.</summary>
            <param name="m">WM_MESSAGE</param>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.CreateBatchHandler">
            <summary>
            Delegate used with <see cref="M:Emc.InputAccel.Workflow.Client.IClient.CreateBatch(System.String,Emc.InputAccel.Workflow.Client.IProcess,Emc.InputAccel.Workflow.Client.CreateBatchHandler)"/>.
            </summary>
            <param name="createBatchInfo">
            Object representing batch creation information.
            </param>
            <returns>
            FALSE to immediately cancel all further batch creation or TRUE to continue.
            </returns>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IACLNT32">
            <summary>
            Provides raw IACLNT32.DLL functions and definitions
            </summary>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IACLNT32.WindowsCodePage">
            <summary>
            Enables defining a fixed-size buffer of unknown size.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.AsciiToString(System.Byte[])">
            <summary>
            Converts from code page 1252 to string
            </summary>
            <param name="Data"></param>
            <returns></returns>
            <remarks>Assumes values are null terminated</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.BytesToString(System.Byte[])">
            <summary>
            Converts an array of bytes to a string
            </summary>
            <remarks>Code table is toggled by the UNICODE_ENABLED flag.  If unicode is enabled it uses the Unicode converted, else the Windows code page.</remarks>
            <param name="Data"></param>
            <returns></returns>
            <remarks>Assumes in ASCII version values are null terminated</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.BytesToString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts an array of bytes to a string
            </summary>
            <remarks>Code table is toggled by the UNICODE_ENABLED flag.  If unicode is enabled it uses the Unicode converted, else the Windows code page.</remarks>
            <param name="Data"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.ErrorCheck(Emc.InputAccel.Workflow.Client.IClient,System.String,System.Int32)">
            <summary>
            Checks function call for error values.
            </summary>
            <param name="functionName">Function name to populate in IAException.</param>
            <param name="returnCode">Return code to evaluate.</param>
            <returns>return code</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.ErrorCheck(Emc.InputAccel.Workflow.Client.IClient,System.Type,System.Int32)">
            <summary>
            Checks the return code passed in and throws an exception of the type specified by the caller
            when appropriate.
            </summary>
            <param name="clientException">Exception type to throw if returnCode is not IA_SUCCESS.</param>
            <param name="returnCode">Return code from a call to an IAClnt32 API function.</param>
            <returns>The return code passed in.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.ErrorCheck(Emc.InputAccel.Workflow.Client.IClient,System.Type,System.String,System.Int32)">
            <summary>
            Checks the return code passed in and throws an exception of the type specified by the caller
            when appropriate.
            </summary>
            <param name="clientException">Exception type to throw if returnCode is not IA_SUCCESS.</param>
            <param name="returnCode">Return code from a call to an IAClnt32 API function.</param>
            <param name="function">Name of the function that was called.</param>
            <returns>The return code passed in.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.ConcatenateInfo(System.String,System.String)">
            <summary>
            Generates a string like "FunctionName(ExtraInfo)". This is used when reporting exceptions.
            </summary>
            <param name="primary">Main string, usually a function name.</param>
            <param name="extrainfo">Additional string to be included. Usually identifies a specific use of a function.</param>
            <returns>A string like "FunctionName(ExtraInfo)".</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.ErrorCheck(Emc.InputAccel.Workflow.Client.IClient,System.Type,System.String,System.String,System.Int32)">
            <summary>
            Checks the return code passed in and throws an exception of the type specified by the caller
            when appropriate.
            </summary>
            <param name="clientException">Exception type to throw if returnCode is not IA_SUCCESS.</param>
            <param name="returnCode">Return code from a call to an IAClnt32 API function.</param>
            <param name="function">Name of the function that was called.</param>
            <param name="extraInfo">Additional information about the function call, for instance the tag name for IASet().</param>
            <returns>The return code passed in.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IACLNT32.IACreateFlagsFromLevel(System.Int32)">
            <summary>
            Use the return value to pass into the flags parameter of IAValueSetAsciiEx in order to create dynamic values.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IACLNT32.MDF_TYPE">
            <summary>
            Possible IA Value types
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IFile">
            <summary>
            Represents an InputAccel file, normal disk file, UNC path, HTTP URI, or FTP URI.
            </summary>
            
            <remarks>
                    InputAccel file names are represented in a URI format. All methods that take a filename as a parameter
                    also accept a Uri format which can define an InputAccel file, normal disk file, UNC path, or a file
                    hosted on a HTTP or FTP server.
            
                <para>
                    The legacy format of an InputAccel stage file name is:
                </para>
            
                <para>
                    <b>&lt;[ClientNo]:[BatchNo]-[NodeNo]-[StageNo]</b>
                </para>
            
                <para>
                    where
                </para>
                <list type="bullet">
                <item><b>&lt;</b>: Identifies the file as an InputAccel stage file.</item> 
                <item><b>[ClientNo]: An ASCII string containing the hex value of the handle to client 
                         communication object (IACLIENT). This component is optional.</b></item>
                <item><b>[BatchNo]</b>: An ASCII string that represents the ID of the batch.</item>
                <item><b>[NodeNo]</b>: An ASCII string that represents the node number.</item>
                <item><b>[StageNo]</b>: An ASCII string that represents the stage number. The URI format 
                         of an InputAccel stage file is: 
                <para>
                    <b>InputAccel://[ServerName]?[parametername]=[parametervalue]&amp;[etc...]</b>
                </para>
                <para>
                    where
                </para>
                <para>
                <b>[ServerName]</b>: A string containing the name of an InputAccel Server that contains this file. 
                   For example
                   <code>InputAccel://deptAserver?batch=1234&amp;node=456&amp;stage=5</code>.
                </para>
            
                <para>
                    <b>[parametername]</b> can be any of the following:
                </para>
            
                <b>batch=[BatchId]</b>
                <para>
                    A string representing the batch ID. When this parameter is specified, 
                    "node" and "stage" must also be specified.
                </para>
                <para><b>node=[NodeNo]</b>: A string representing the node number. When this parameter is specified, 
                         "batch" must also be specified.
                </para>
                <para><b>stage=[StageNo]</b>: A string representing the stage number. When this parameter 
                         is specified, "batch" and "node" must also be specified. In addition "stage" can 
                         be an IA Value in the form <c>step_name.file_name</c> such as
                         <c>InputAccel://deptAserver?batch=1234&amp;node=456&amp;stage=scan.outputimage</c>.
                </para>
                <para><b>batchid=[BatchId]/[filename]</b>: Use to specify a batch-related file. This 
                         cannot be combined with any other parameter. For example, 
                         <c>InputAccel://deptAserver?batchid=1234/dictionary.txt</c>.
                </para>
                <para>       
                <b>batchidfile=[BatchId]</b>: Use to specify a batch file. This cannot be combined 
                   with any other parameter. For example, 
                    <c>InputAccel://deptAserver?batchidfile=1234</c>.
                </para>
                <para><b>module=[ModuleName]/[filename]</b>: Use to specify a module-related file. 
                         This cannot be combined with any other parameter. For example,
                    <c>InputAccel://deptAserver?module=iascan/mymodulefile.dat</c>.
                </para>
                <para><b>procidfile=[ProcessId]</b>: Use to specify a process file. This cannot be combined 
                         with any other parameter. For example,
                    <c>InputAccel://deptAserver?procidfile=9876</c>.
                </para>
            </item>
            </list>
            </remarks>
            
            <example><code>
                <para><c>InputAccel://deptAserver?batch=1234&amp;node=456&amp;stage=5</c></para>
                <para><c>InputAccel://deptAserver?batch=1234&amp;node=456&amp;stage=scan.outputimage</c></para>
                <para><c>InputAccel://deptAserver?batchid=1234/dictionary.txt</c></para>
                <para><c>InputAccel://deptAserver?batchidfile=1234</c></para>
                <para><c>InputAccel://deptAserver?module=iascan/mymodulefile.dat</c></para>
                <para><c>InputAccel://deptAserver?procidfile=9876</c></para>
            </code></example>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IFile.#ctor(Emc.InputAccel.Workflow.Client.IClient)">
            <summary>
            Constructor that simply creates an IAFile object.
            </summary>
            <param name="Client">The client object that is creating this object.</param>
            <param name="FileHandle">
            A handle to an open file that this object is associated with. If 0 is passed, no file is associated with
            this object until the <c>Open</c> or <c>Create</c> method is called.
            </param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IFile.Copy(System.Uri,System.Uri,Emc.InputAccel.Workflow.Client.FileCreateOption)">
            <summary>
            Copies a file.
            </summary>
            
            <param name="fileSource">Filename or path/filename of the file to copy from.</param>
            <param name="fileDestination">Filename or path/filename of the file to copy to.</param>
            <param name="attribute">A value that specifies the type of file access and file sharing. See
            <seealso cref="T:Emc.InputAccel.Workflow.Client.FileCreateOption"/> for file access and 
            file sharing values.
            </param>
            
            <returns>
            The number of bytes copied when the file is successfully copied.
            </returns>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.FileException">An error occurred while working
            with the <c>IFile</c> object.
            </exception>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.FileExternalStorageException">An error occurred 
            while copying a file from one external storage location to another.
            </exception>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.FileServerCopyException">An error occurred while 
            copying a file from one InputAccel Server to another.
            </exception>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.GetFileFromServerException">An error occurred 
            while retrieving a file from an InputAccel Server.
            </exception>
            
            <remarks>
            See the Remarks section of <seealso cref="T:Emc.InputAccel.Workflow.Client.IFile"/> for
            information on how to construct the URI arguments.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IFile.Create(System.Uri,Emc.InputAccel.Workflow.Client.FileCreateOption)">
            <summary>
                Creates a new InputAccel file or normal disk file.
            </summary>
            
            <param name="fileName">The path and name of a file to create.</param>
            <param name="attribute">A value that specifies the file type to create. See <seealso cref="T:Emc.InputAccel.Workflow.Client.FileCreateOption"/> for permitted values.</param>
            
            <returns>
                <para>
                    An instance of a Stream object.
                </para>
            </returns>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.StreamException">An error occurred 
            while working with a stream object.
            </exception>
            
            <remarks>
                <para>
                    See the Remarks section of <seealso cref="T:Emc.InputAccel.Workflow.Client.IFile"/> on how to construct
                    the Uri argument.
                </para>
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IFile.Delete(System.Uri)">
            <summary>
            Deletes an InputAccel file or normal disk file.
            </summary>
            
            <param name="fileName">The path and name of a file to delete.</param>
            
            <exception cref="T:Emc.InputAccel.Workflow.Client.FileException">An error occurred while working
            with the <c>IFile</c> object.
            </exception>
            
            <remarks>
            See the Remarks section of <seealso cref="T:Emc.InputAccel.Workflow.Client.IFile"/> for information
            on how to construct the URI argument.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IFile.SendFileToExternalSource(System.Uri,System.Uri)">
            <summary>
            Sends the file from source to an external storage.
            </summary>
            <param name="source">A URI where the source file is located.</param>
            <param name="destination">A URI representing the external storage destination.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IFile.ConvertURItoIAFileName(System.Uri)">
            <summary>
            Converts a URI style filename into its corresponding IAFileName.
            </summary>
            <param name="name">The URI filename to convert.</param>
            <returns>A string representing the IAFileName.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IFile.Open(System.Uri,Emc.InputAccel.Workflow.Client.FileOpenAttributes)">
            <summary>
            Opens an InputAccel file or normal disk file.
            </summary>
            
            <param name="fileName">The path and name of a file to open.</param>
            <param name="attribute">
                A value that specifies the type of file access and file sharing.
                See <seealso cref="T:Emc.InputAccel.Workflow.Client.FileOpenAttributes"/> for details.
            </param>
            <returns>
            An instance of a Stream object.
            </returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.FileException">An error occurred while working
            with the <c>IFile</c> object.
            </exception>
            
            <remarks>
                
               
                    See the Remarks section of <seealso cref="T:Emc.InputAccel.Workflow.Client.IFile"/> on how to construct
                    the URI argument.
               
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IGlobalValueProvider">
            <summary>
            Use to set and get global IA Values.
            </summary>
            <remarks>
            A global IA Value is a value that is not part of a batch or process.
            </remarks>
            <example><code>
            int borderLeft = 10;
            int borderTop = 0; 
            client.value.Screen = "";       // use current screen resolution
            client.value.Set("BorderLeft", borderLeft);
            client.value.Set("BorderTop", borderTop);
            
            client.value.Module = "SSOCR";  // this will read and write SSOCR values
            client.value.Module = "";       // this will default back to the current module
            client.value.Module = null;     // this will not use a Module key
            </code></example>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IProtectedValueProvider">
            <summary>
            Represents an encrypted IA Value.
            </summary>
            <remarks>
            A protected value is accessible only by the user who created it or a user who is a member of the Administrators group.
            Other users will not be allowed to read or write the value. Other users attempting to read the value 
            will receive the specified default value. 
            
            <para>Protected values cannot be accessed using the standard 
            IAValueGet…() APIs. Attempting to access protected values using these APIs will return an error
            (for IAValueGetBinary) or the default value (for IAValueGetAscii and IAValueGetLong).</para>
            
            <para>When a protected value is transferred between the InputAccel client and InputAccel Server, it is encrypted using 
            Microsoft Cryptography to prevent a network sniffer from intercepting the value.</para>
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IValueProvider">
            <summary>
            Gets or sets values from the associated InputAccel object.
            </summary>
            <remarks>
            Value providers are tied to the objects to which they belong 
            and to the task state, if applicable.
            This class supports native .NET value types, strings, StringBuilder, and one dimensional arrays of these
            types. Streams are also supported and can be used to get and set stage files.
            <para>
            Objects that implement <see cref="T:System.Runtime.Serialization.ISerializable"/> are saved as 
            a byte array on the InputAccel Server.
            </para>
            <para>
            Objects must support a new() constructor. The restriction of 
            </para>
            <code>T Get&lt;T&gt;(string name, T defaultValue)</code>
            <para>where <b>T : new()</b> is relaxed to support string types.
            </para>
            <para>
            To exercise complete control over the serialization process, refer 
            to <see cref="T:Emc.InputAccel.Workflow.Client.IValueSerializable"/>.</para>
            </remarks>
        </member>
        <member name="F:Emc.InputAccel.Workflow.Client.IValueProvider.PROPERTYNAME_LENGTH">
            <summary>The general philosophy between name and key is that the function call to the IValues object is responsible for
            constructing the complete key.</summary>
            
            <remarks>A special note regarding the formatting. Previously server took care of the formating, 
            so this formatting needs to be maintained for string functions.
            
            <code>
            MDF type        IAValueGet              IAValueSet
            single          "%.17g"                 atof
            double          "%.17g"                 atof
            currency        "%I64d.%04ld"           CComVariant.ChangeType
            date            CComVariant.ChangeType  CComVariant.ChangeType
            
            Strings designate sprintf usage: sprintf(returnValue, "%.17g", doubleVar)
            </code></remarks>     
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.#ctor(Emc.InputAccel.Workflow.Client.IValueProvider)">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.GetAuto``1(System.String,``0)">
            <summary>
            Similar to Get but obeys the Disabled property of the cache.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.SetAuto``1(System.String,``0)">
            <summary>
            Similar to Set but obeys the Disabled property of the cache.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.SetArray(System.Type,System.String,System.Object,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Serializes an array.
            </summary>
            <param name="array"></param>
            <param name="variableName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.SetISerializable(System.Type,System.String,System.Object,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Saves using the <c>ISerializable</c> interface
            </summary>
            <param name="type"></param>
            <param name="variableName"></param>
            <param name="value"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Emc.InputAccel.Workflow.Client.IValueProvider.SetValueSerializableType(System.Type,System.String,System.Object,Emc.InputAccel.Workflow.Client.ITask)" -->
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateValueProvider(Emc.InputAccel.Workflow.Client.IServer,System.String,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Creates a <c>ValueProvider</c> suitable for use in serialization
            </summary>
            <param name="server"></param>
            <param name="key"></param>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.SetStream(System.String,System.IO.Stream)">
            <summary>
            This operation is not done at the cache level.
            </summary>
            <param name="variableName"></param>
            <param name="source"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.SetReferenceType(System.Type,System.String,System.Object,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Breaks up an object into base components and serializes it.
            </summary>
            <param name="type"></param>
            <param name="variableName"></param>
            <param name="values"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.GetValueSerializableType(System.Type,System.String,System.Object,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Instantiates a <c>ValueSerializableType</c>.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="variableName"></param>
            <param name="defaultValue">Default object value.</param>
            <returns>New object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.GetArray(System.Type,System.String,System.Object,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Returns an array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="variableName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.GetISerializableType(System.Type,System.String,System.Object,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Retrieve through the <c>ISerializable</c> interface.
            </summary>
            <param name="type"></param>
            <param name="variableName"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.GetReferenceType(System.Type,System.String,System.Object,Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="variableName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.Get``1(System.String,``0)">
            <summary>
            Gets an IA Value.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="name">Value name.</param>
            <param name="defaultValue">The value to return if the named value is not found.</param>
            <returns>The value specified, or the default value if it is not found.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.Get``1(System.String,``0,System.Boolean)">
            <summary>
            Gets an IA Value.  
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="name">Value name.</param>
            <param name="defaultValue">The value to return if the named value is not found.</param>
            <param name="enableCaching">
            TRUE to use the cache or FALSE to bypass the cache and fetch the value directly from the server.
            Bypassing the cache will update the cache with that value.
            </param>
            <returns>The value specified, or the default value if it is not found.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0)">
            <summary>
            Sets an IA Value.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="name">Value name.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0,System.Boolean)">
            <summary>
            Sets a specific IA Value.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="name">Value name.</param>
            <param name="value">Value to set.</param>
            <param name="enableCaching">
            True to use the cache or false to bypass the cache and fetch the value directly from the server.
            Bypassing the cache will update the cache with that value.
            </param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.SetTask(Emc.InputAccel.Workflow.Client.ITask)">
            <summary>
            Associates the value provider with a specific task.
            </summary>
            <param name="task">
            Task to be used by the node value provider. Setting this to null will remove the reference
            to the task.
            </param>
            <remarks>Once set, the caller is expected to manage the task reference for this node value provider.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.Delete(System.String)">
            <summary>
            Deletes a dynamic IA Value or a global (non-nodal) IA Value.
            </summary>
            <param name="name">
            The name of an IA Value to delete.
            </param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.Delete(System.String,Emc.InputAccel.Workflow.Client.IValueDeletable)">
            <summary>
            Deletes a dynamic IA Value or a global (non-nodal) IA Value.
            </summary>
            <param name="name">The name of the IA Value to delete.</param>
            <param name="value">The IA Value to delete.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime">
            <summary>
            Creates an IDateTime object.
            </summary>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(System.DateTime)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="dateTime">A <see cref="T:System.DateTime"/> object.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(Emc.InputAccel.Workflow.Client.IDateTime)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="dateTime">A IDateTime object.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month.</param>
            <param name="day">Day.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month.</param>
            <param name="day">Day.</param>
            <param name="hour">Hour.</param>
            <param name="minute">Minute.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month.</param>
            <param name="day">Day.</param>
            <param name="hour">Hour.</param>
            <param name="minute">Minute.</param>
            <param name="second">Second.</param>
            <param name="millisecond">Millisecond.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month.</param>
            <param name="day">Day.</param>
            <param name="hour">Hour.</param>
            <param name="minute">Minute.</param>
            <param name="second">Second.</param>
            <param name="millisecond">Millisecond.</param>
            <param name="offsetMinute">Offset in minutes.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(System.Int32,System.Int32,System.Int32,Emc.InputAccel.Workflow.Client.IADateTimeKind)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month.</param>
            <param name="day">Day.</param>
            <param name="kind">An <see cref="T:Emc.InputAccel.Workflow.Client.IADateTimeKind"/> value.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Emc.InputAccel.Workflow.Client.IADateTimeKind)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month.</param>
            <param name="day">Day.</param>
            <param name="hour">Hour.</param>
            <param name="minute">Minute.</param>
            <param name="kind">An <see cref="T:Emc.InputAccel.Workflow.Client.IADateTimeKind"/> value.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueProvider.CreateDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Emc.InputAccel.Workflow.Client.IADateTimeKind)">
            <summary>
            Creates an IDateTime object.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month.</param>
            <param name="day">Day.</param>
            <param name="hour">Hour.</param>
            <param name="minute">Minute.</param>
            <param name="second">Second.</param>
            <param name="millisecond">Millisecond.</param>
            <param name="kind">An <see cref="T:Emc.InputAccel.Workflow.Client.IADateTimeKind"/> value.</param>
            <returns>A new IDateTime object.</returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IValueProvider.IsValid">
            <summary>
            Gets a value that specifies whether this object is valid.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IProtectedValueProvider.GetProtected``1(System.String,``0)">
            <summary>
            Retrieves a protected value.
            </summary>
            <remarks>
            Protected values are only allowed as batch, step, or global
            values. Protected values are not allowed on a node.
            
            GetProtected may be used to retrieve unprotected values. This usage is not recommended, as the 
            values would still be encrypted for network transfer causing an unnecessary decrease in performance.
            </remarks>
            <typeparam name="T">The type of the value to retrieve.</typeparam>
            <param name="name">The name of the value to retrieve.</param>
            <param name="defaultValue">The value returned if the value was not found.</param>
            <returns>An object of the specified type T.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IProtectedValueProvider.SetProtected``1(System.String,``0)">
            <summary>
            Stores a protected IA Value.
            </summary>
            <remarks>
            If a value has previously been set as a protected value, then the logged-on user must have permission
            to write to the protected value. Only the user that originally set the value and members of the
            Administrators group have permission to write to a protected value. If the logged-on user does not 
            have permission to set the value, the value will not be changed, but no error will be returned.
            </remarks>
            <typeparam name="T">The type of the value to set.</typeparam>
            <param name="name">The name of the value.</param>
            <param name="value">The value to store.</param>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalValueProvider.IsValid">
            <summary>
            Gets a value that specifies whether this object is valid.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalValueProvider.User">
            <summary>
            Gets and sets the User key. Default is null.
            </summary>
            <remarks>
            If set to null, no User key is used. If set to "", the default User key is automatically used.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalValueProvider.Module">
            <summary>
            Gets and sets the Module key. Default is "".
            </summary>
            <remarks>
            If set to null, no Module key is used. If set to "", the default Module key is automatically used.
            </remarks>        
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalValueProvider.Machine">
            <summary>
            Gets and sets the Machine key. Default is null.
            </summary>
            <remarks>
            If set to null, no Machine key is used. If set to "", the default Machine key is automatically used.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalValueProvider.Port">
            <summary>
            Server port of Server in a Scale Server cluster to use. Defaults to null.
            </summary>
            <remarks>Distingushes a particular InputAccel Server in a side-by-side installation.</remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalValueProvider.Screen">
            <summary>
            Gets and sets the Screen key. Default is null.
            </summary>
            <remarks>
            If set to null, no Screen key is used. If set to "", the default Screen key is automatically used.
            The default Screen key is the current resolution of the monitor.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IGlobalValueProvider.Server">
            <summary>
            Gets and sets the Server key. Default is null.
            </summary>
            <remarks>
            If set to null, no Server key is used. If set to "", the default Server key is automatically used.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IStep">
            <summary>
            Represents a step in a batch or process.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.SetData(System.String)">
            <summary>
            Parses the ListString and assigns the list items to its corresponding IAStep field.
            </summary>
            <param name="listString">The string to parse.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.Level(System.Int32)">
            <summary>
            Returns a level represented by a number.
            </summary>
            <param name="number">The number of the level.</param>
            <returns>A Level object or a null value if the level does not exist.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.Level(System.String)">
            <summary>
            A level represented by name.
            </summary>
            <param name="name">The name of the level.</param>
            <returns>A Level object or a null value if the level does not exist.</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.TaskReserve">
            <summary>
            Reserves tasks from this step for the currently logged on module.
            </summary>
            <exception cref="T:Emc.InputAccel.Workflow.Client.TaskException">An error occurred while working
            with an <see cref="T:Emc.InputAccel.Workflow.Client.ITask"/> object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.TaskRelease">
            <summary>
            Releases from this step tasks that were previously reserved with <see cref="M:Emc.InputAccel.Workflow.Client.IStep.TaskReserve"/>.
            </summary>
            <exception cref="T:Emc.InputAccel.Workflow.Client.TaskException">An error occurred while working
            with an <see cref="T:Emc.InputAccel.Workflow.Client.ITask"/> object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.ToString">
            <summary>
            Returns the name of this step.
            </summary>
            <returns>The name of this step.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.Retrigger">
            <summary>
            Retriggers tasks from this step in a batch.
            </summary>
            <remarks>
            Retriggering tasks is useful when you need to re-process tasks from
            a particular step, even though those tasks were finished successfully. The Retrigger method
            tries to find a value that is used as a trigger for the step, and sets that value (using its
            current contents so it remains unchanged) for every task node. This causes the InputAccel Server
            on which the batch resides to queue the tasks in the step for processing.
            </remarks>
            <returns>The number of nodes triggered.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.InvalidServerResourceException">An attempt
            was made to acces an invalid InputAccel Server resource.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.StepRetriggerException">An error occurred 
            while retriggering a step.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.Value">
            <summary>
            Returns a value provider used to retrieve and set values.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.DefaultValue(Emc.InputAccel.Workflow.Client.ILevel)">
            <summary>
            Returns a value provider used to retrieve and set nodal default values.
            </summary>
            <param name="level">The tree level from which to retrieve the value.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.CopySettings">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.CopySettings(System.IO.Stream)">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.PasteSettings">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.PasteSettings(System.IO.Stream)">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.ListDefaultValues(Emc.InputAccel.Workflow.Client.ILevel)">
            <summary>
            Lists the default values for this step that will be created for every node at the specified level.
             </summary>
            <param name="level">Indicates the level from which to retrieve the list of values.</param>
            <returns>A list of nodal values.</returns>
            <remarks>The list of values includes values defined in the MDF and dynamic values.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.ListDefaultValues">
            <summary>
            Lists default values for this step that will be created for every node at all levels.
             </summary>
            <returns>A list of nodal values.</returns>
            <remarks>The list of values includes values defined in the MDF and dynamic values.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.ListDefaultValues(Emc.InputAccel.Workflow.Client.ILevel,System.String,System.Boolean)">
            <summary>
            Lists default values for this step that will be created for every node at the specified level and path.
             </summary>
            <param name="level">
            Level from which to retrieve the list of values.
            </param>
            <param name="objectPath">
            The name of a value of type <c>Variant</c> or <c>Object</c> for whom children will be listed. See the remarks section
            for more information.
            </param>
            <param name="children">
            Include object children, otherwise the top-level objects only.
            </param>
            <returns>
            A list of child values belonging to the object specified in objectPath.
            </returns>
            <remarks>
            The list of values includes values defined in the MDF and dynamic values.
            
            Specifies objects deeper than one level by separating the object names with a colon ':' such as
            "CustomerInfo:Address" or "CustomerInfo:Dependents:Spouse".
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.ListValues">
            <summary>
             Gets a list of step values.
            </summary>
            <returns>A list of step values.</returns>
             <remarks>Step values define the setup for a module step.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IStep.GetTaskCounts">
            <summary>
            Returns an ITaskCounts object containing task counts.
            </summary>
            <returns>An ITaskCounts object.</returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IStep.BatchProcess">
            <summary>
            Gets the batch that this step belongs to.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IStep.Departments">
            <summary>
            Gets or sets a list of departments assigned to this step.
            </summary>   
            <remarks>
            Departments can be dynamically added and removed from the step using this property.
            This property corresponds to the "IADepartments" value and is affected by 
            the <see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/> property.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IStep.Levels">
            <summary>
            Gets a list of levels defined for this step.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IStep.Module">
            <summary>
            Gets the module name of the step.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IStep.Index">
            <summary>
            Gets the 0-based step number.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IStep.Name">
            <summary>
            Gets the name of the step.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IStep.TriggerLevel">
            <summary>
            Gets the trigger level of the step.
            </summary>
            <remarks>
            This property corresponds to the "TriggerLevel" value and is 
            affected by <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/>
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IStep.IsValid">
            <summary>
            Gets a value that specifies whether this object is valid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ILevel">
            <summary>
            Represents a level in the InputAccel tree hierarchy.
            </summary>
            <remarks> 
            See <see cref="M:Emc.InputAccel.Workflow.Client.IBatchProcess.Level(System.Int32)"/> and 
            <see cref="M:Emc.InputAccel.Workflow.Client.IBatchProcess.Level(System.String)"/> for available levels in a batch or process.    
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILevel.ToString">
            <summary>
            Returns the name of the level as represented by 
            the <see cref="P:Emc.InputAccel.Workflow.Client.ILevel.Name"/> property.
            </summary>
            <remarks>
            This method is often used by controls to determine what to display in a list.
            </remarks>
            <returns>The name of this level.</returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILevel.Name">
            <summary>
            Gets the name of the level.
            </summary>
            <remarks>
            <list type="bullet">
            <item>Level 0 = Page</item>
            <item>Level 1 = Document</item>
            <item>Level 2 = Folder</item>
            <item>Level 3 = Stack</item>
            <item>Level 4 = Level 4</item>
            <item>Level 5 = Level 5</item>
            <item>Level 6 = Level 6</item>
            <item>Level 7 = Batch</item>
            </list>
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILevel.Number">
            <summary>
            Gets the level number. The level number is between 0 - 7;
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IAList`1">
            <summary>
            IAList is a wrapper around the IAList functions.  The general design is to use <c>IAList</c> as the factory for multiple
            enumerators.  The individual enumerators contain the parsing code to convert string data from IAList to the specific type.  IAListElement
            stores the list element's integer ID and string data.  Exceptions to this are objects which require two passes in the list
            to do their construction.  Currently this includes IModule.
            </summary>
            <remarks>To add more types to this list, create a new enumerator, override the <c>Current</c> property, and instantiate
            the new enumerator in <c>IAList.GetEnumerator()</c>.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAList`1.#ctor(Emc.InputAccel.Workflow.Client.IClient,System.Int32,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="client">The Client object.</param>
            <param name="type">Type of list to use.</param>
            <param name="pattern">Pattern to control list data.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAList`1.#ctor(Emc.InputAccel.Workflow.Client.IClient,System.Int32,System.String,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="client">The Client object.</param>
            <param name="type">Type of list to use.</param>
            <param name="pattern">Pattern to control list data.</param>
            <param name="parameter">Object used to help in creation of list members.</param>
            <remarks>The following lists use the parameter.<code>
            List Type                   Object                  Reason
            IALIST_INSTANCES            IABatchProcess          To pass IABatchProcess object to the IAInstance constructor.
            
            IALIST_NODALS               object[2]               new object[] { IALevelObject, IAInstanceObject } 
                                        IALevel, IAInstance     To pass IALevel and IAInstance objects to construct IADefaultValue objects.
                                                                IALevelObject can be null to indicate all levels.
                                                                
            </code></remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAList`1.GetEnumerator">
            <summary>
            Returns the enumerator for the underlying type
            </summary>
            <returns></returns>
            <remarks>This is the main factory for enumerators.</remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.MessageCallbackEventArgs">
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.MessageCallbackEventArgs.Message">
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IClientModule">
            <summary>
            Represents an InputAccel client module.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClientModule.ListFiles">
            <summary>
            Return a list of module files.
            </summary>
            <returns>
            A list of module files.
            </returns>
            <remarks>
            ListFiles is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClientModule.ListFeatures">
            <summary>
            Lists the features licensed for this module.
            </summary>
            <returns>
            An enumeration of features containing the number licensed and in use.
            </returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClientModule.Security">
            <summary>
             Provides access to security settings
            </summary>
            <returns></returns>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClientModule.TaskCount(Emc.InputAccel.Workflow.Client.TaskCountType)">
             <summary>
             Returns the number of tasks of type <see cref="T:Emc.InputAccel.Workflow.Client.TaskCountType"/>.
             </summary>
             <param name="countType">The task count type to return.</param>
             <returns>The number of tasks of the specified TaskCountType.</returns>
             <remarks>
             Use <see cref="M:Emc.InputAccel.Workflow.Client.IClientModule.TaskCount(Emc.InputAccel.Workflow.Client.TaskCountType,System.String)"/> to return the task count for a specific department.  
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClientModule.TaskCount(Emc.InputAccel.Workflow.Client.TaskCountType,System.String)">
            <summary>
            Returns the number of tasks by department.
            </summary>
            <param name="countType">The task count type.</param>
            <param name="department">
            The name of the department.
            </param>
            <remarks>
            Use <see cref="M:Emc.InputAccel.Workflow.Client.IClientModule.TaskCount(Emc.InputAccel.Workflow.Client.TaskCountType)"/> to 
            return the task count for all departments.
            </remarks>
            <returns>The number of tasks for the specified department. If the department name does not exist, 
            zero is returned.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClientModule.Value">
            <summary>
            Gets or Sets a value provider used for IA Global Values.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IClientModule.ListDepartments">
            <summary>
            Lists all departments that have been specified in processes and batches for this module. 
            The returned list is a union of lists from all InputAccel Servers in a ScaleServer group.
            </summary>
            <returns>
            A list of departments for the specified module. The list will have a count of zero if there
            are no departments.
            </returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClientModule.Id">
            <summary>
            Gets the module ID used for security settings.
            </summary>
            <remarks>
            This is an ID assigned to each module by the InputAccel Server. It is not the InputAccel
            Module ID used for licensing. This is currently used by IClient.SetSecurity.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClientModule.LicensedConnections">
            <summary>
            Gets the number of connections licensed for this module.
            </summary>
            <remarks>
            <list type="bullet">
            <item>
            0 means unlimited connections.
            </item>
            <item>
            -1 means unknown.
            </item>
            <item>
            A string such as "GROUP1" means this module gets its connections
            from the specified group license.
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClientModule.LicensedPages">
            <summary>
            Gets the number of pages licensed for this module.
            </summary>
            <remarks>
            <list type="bullet">
            <item>
            0 means unlimited pages.
            </item>
            <item>
            -1 means unknown.
            </item>
            <item>
            A string such as "GROUP1" means this module gets its page count
            from the specified group license.
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClientModule.Name">
            <summary>
            Gets the module name.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClientModule.UsedConnections">
            <summary>
            Gets the connections currently being consumed by the module.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IClientModule.UsedPages">
            <summary>
            Gets the pages used by the module.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IDefaultValue">
            <summary>
            Represents a default IA Value associated with a node.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IDefaultValue.Equals(System.Object)">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IDefaultValue.ToString">
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDefaultValue.Constant">
            <summary>
             Gets or sets whether this IA Value is a constant. Only applies to IA Values 
             of <see cref="T:Emc.InputAccel.Workflow.Client.IAValueType" />.Object.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDefaultValue.Level">
            <summary>
             Gets the level at which this IA Value is defined.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDefaultValue.Step">
            <summary>
             Gets the step associated with this IA Value. May be a null value.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDefaultValue.Input">
            <summary>
             Gets whether this IA Value is an input IA Value.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDefaultValue.Output">
            <summary>
             Gets whether this IA Value is an output IA Value.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDefaultValue.Trigger">
            <summary>
             Gets whether this IA Value is a trigger.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDefaultValue.Prefetch">
            <summary>
             Gets whether this IA Value is prefetched along with tasks. Only applies to IA Values of type <see cref="F:Emc.InputAccel.Workflow.Client.IAValueType.File"/>.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IDefaultValue.Prime">
            <summary>
             Gets whether this IA Value is prefetched with tasks. Applies to IA Values other than type <see cref="F:Emc.InputAccel.Workflow.Client.IAValueType.File"/>.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IANodeChildrenEnumerator">
            <summary>
            List of child nodes enumerator.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IANodeChildren">
            <summary>
            List of child nodes at a specific level.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.INode">
            <summary>
            Represents an InputAccel tree node.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Add">
            <summary>
            Adds a child node in the last position in the InputAccel tree.
            </summary>
            <returns>The new child node.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddLevel0ChildrenException">Attempted 
            to add a node to a level 0 node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddException">An error occurred 
            while adding a node.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Add(System.Boolean)">
            <summary>
            Adds a level 0 child node in the last position in the InputAccel tree.
            </summary>
            <param name="front">TRUE indicates the front page, FALSE indicates the back side of a page.</param>
            <returns>The new level 0 child node.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddLevel0ChildrenException">Attempted 
            to add a node to a level 0 node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddException">An error occurred 
            while adding a node.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Add(Emc.InputAccel.Workflow.Client.ILock@)">
            <summary>
            Adds a child node in the last position and creates a Modify lock on the new node.
            </summary>
            <param name="modifyLock">
            Upon successful return <c>modifyLock</c> contains a Modify lock for the new node. This parameter
            is only valid for level 1 - 7 nodes and is ignored if a new level 0 child is added.
            </param>
            <returns>The new child node.</returns>
            <remarks>
            Nodes can only be added to levels 1 - 7. An exception will be thrown if this function is called on a level 0 node.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddLevel0ChildrenException">Attempted 
            to add a node to a level 0 node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddException">An error occurred 
            while adding a node.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.ChildCount">
            <summary>
            Indicates the number of child nodes.
            </summary>
            <returns>Number of child nodes. Zero is returned if this node is level 0.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.ChildCount(Emc.InputAccel.Workflow.Client.ILevel)">
            <summary>
            Returns the number of descendants at the specified level.
            </summary>
            <param name="level">
            Level of the descendants to count. Must be less than or equal to the level of the node.
            </param>
            <remarks>
            This method returns the total number of descendants of the node at the specified level.
            </remarks>
            <returns>Count of descendents.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeLevelException">The specified
            node level is invalid.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Commit(Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Commits this node to the InputAccel Server so that processing can occur on this node by other client modules.
            </summary>
            <param name="step">The step that created this node.</param>
            <remarks>
            Call this function after creating a node. This function causes the Finish routine
            in the IPP to be called.
            <para>
            If this node is not at the trigger level, nothing will happen.
            </para>
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Commit(Emc.InputAccel.Workflow.Client.IStep,System.Boolean)">
            <summary>
            Commits this node to the InputAccel Server so that processing can occur on this node by other client modules.
            </summary>
            <param name="step">
            The step that created this node.
            </param>
            <param name="children">
            Specifies whether the child nodes should also be committed. This is ignored if the current node is at level zero.
            </param>
            <remarks>
            This function is called after creating a node. This function causes the Finish routine
            in the IPP to be called. 
            <para>
            If <i>children</i> is FALSE and this node is not at the trigger level, nothing will happen.
            </para>
            <para>
            If <i>children</i> is TRUE and this node is level 1 or higher, all level 0 children are committed
            and then trigger level nodes are committed if the trigger level is greater than 0. 
            </para>
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeCommitException">An error occurred 
            while committing the node.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.IsAncestor(Emc.InputAccel.Workflow.Client.INode)">
            <summary>Returns whether a node is an ancestor of this node.</summary>
            <remarks>An ancestor is any node that is a parent of this node, or 
            it's parent's parent, and so on.</remarks>
            <param name="PotentialAncestor">Node being tested for ancestry.</param>
            <returns>TRUE if this node is a descendant of the potentialAncestor node; FALSE if not.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Next">
            <summary>
            Returns the next peer node under the same parent.
            </summary>
            <returns>
            The next peer node with the same parent following this node. A value of null is returned if this is the last node.
            </returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Next(Emc.InputAccel.Workflow.Client.INode)">
            <summary>
            Returns the next peer node under the given parent.
            </summary>
            <param name="parent">
            Common parent node from which to find the next peer.
            </param>
            <returns>
            The next peer node following this node having the same ancestor specified by the parent. 
            Returns a null value if this is the last node.
            </returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Parent">
            <summary>
            Returns the parent node of the current node (its most direct ancestor).
            </summary>
            <remarks>
            Only the root node has no parent. Once you have 
            the parent node, you can use <c>FindNode()</c> to find its 
            descendents.
            </remarks>
            <returns>The parent node object or a null value if the current node is level 7.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Previous">
            <summary>
            Gets the previous peer node under the same parent.
            </summary>
            <returns>
            Previous peer node with the same parent preceding this node. Returns a null value if this is the first node.
            </returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Previous(Emc.InputAccel.Workflow.Client.INode)">
            <summary>
            Gets the previous peer node under the given parent.
            </summary>
            <param name="parent">
            Common parent node from which to find the previous peer.
            </param>
            <returns>
            Previous peer node preceding this node having the same ancestor specified by parent. 
            Returns a null value if this is the first node.
            </returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Remove(Emc.InputAccel.Workflow.Client.INode)">
            <summary>
            Removes the specified child node.
            </summary>
            <param name="child">The child node to remove.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.RemoveAll">
            <summary>
            Removes all child nodes.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.RemoveAt(System.Int32)">
            <summary>
            Removes child node at <i>index</i>.
            </summary>
            <param name="index">Index of child node to remove.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.SetFlag(System.Int32,System.Boolean)">
            <summary>
            Sets or clears the specified tree node flag.
            </summary>
            <param name="flag">Bit flag(s) to set or clear.</param>
            <param name="set">A value that determines whether to set or clear flag.(</param>
            <remarks>
            These are the predefined values for uFlag:
            IATREE_FLAG_BACKSIDE 0x10// Node is for back-side of a page
            IATREE_FLAG_DELETING 0x20// Node is being deleted
            IATREE_FLAG_INTREE 0xf0 // any flag in global Tree
            Note that the flag itself is only a single byte; thus, flags should be within the range
            0x01 to 0x80.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Status(Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Gets the status of this node for the specified step. 
            </summary>
            <remarks>This property corresponds to the "Status" value and is affected 
            by <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="P:Emc.InputAccel.Workflow.Client.ICache.Disabled"/>.</remarks>
            <param name="step">The step for which to get status.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.TestFlag(System.Int32)">
            <summary>
            Test specified by the tree node flag.
            </summary>
            <param name="flag">Bit flag(s) to test.</param>
            <returns>Returns true if the flag is on, otherwise false.</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.ToggleFlag(System.Int32)">
            <summary>
            Toggle specified on the tree node flag.
            </summary>
            <param name="flag">Bit flag(s) to toggle.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.FlagChildren(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Set or clear specified flag for node and its children.
            </summary>
            <param name="flag">Bit flag(s) to set or clear.</param>
            <param name="set">Whether to set or clear flag(</param>
            <param name="minLevel">Minimum child level at which to set flag(s).</param>
            <remarks>
            These are the predefined values for uFlag:
            IATREE_FLAG_BACKSIDE 0x10// Node is for back-side of a page
            IATREE_FLAG_DELETING 0x20// Node is being deleted
            IATREE_FLAG_INTREE 0xf0 // any flag in global Tree
            Note that the flag itself is only a single byte; thus, flags should be within the range
            0x01 to 0x80.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.FindLastChild(Emc.InputAccel.Workflow.Client.INode)">
            <summary>
            Goes through the InputAccel tree to find the edge node representing the last child or subchild
            of the parent.
            </summary>
            <param name="parent"></param>
            <returns>The last child or subchild.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Insert(System.Int32,Emc.InputAccel.Workflow.Client.ILock@)">
            <summary>
            Inserts a child node at the specified position and create a Modify lock on the new node.
            </summary>
            <param name="index">The zero-based index at which to insert a new child. Valid values are 
            0 - [number of children]. The child node is inserted before the existing child at that location.
            </param>
            <param name="modifyLock">
            Upon successful return <c>modifyLock</c> contains a Modify lock for the new node. This parameter
            is only valid for new level 1 - 7 nodes and is ignored if a new level 0 child is inserted.
            </param>
            <returns>The new child node.</returns>
            <example>
            <code>
            ILock myLock = null;
            Insert(0, out myLock); // inserts the child in the first position.
            Insert([number of children], out myLock); // inserts the child in the last position.
            </code>
            </example>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddLevel0ChildrenException">Attempted 
            to add a node to a level 0 node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddOutOfRangeException">The index position
            is out of range for adding a new node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddException">An error occurred 
            while adding a node.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Insert(System.Int32,System.Boolean)">
            <summary>
            Insert a level 0 child node at the specified position.
            </summary>
            <param name="index">The zero-based index at which to insert a new child. Valid values are 
            0 - [number of children]. The child node is inserted before the existing child at that location.
            </param>
            <param name="front">TRUE indicates the front side of a page, FALSE indicates the backside of a page.</param>
            <returns>The new level 0 child node.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddLevel0ChildrenException">Attempted 
            to add a node to a level 0 node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddOutOfRangeException">The index position
            is out of range for adding a new node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddException">An error occurred 
            while adding a node.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Insert(System.Int32)">
            <summary>
            Inserts a child node at the specified position.
            </summary>
            <param name="index">
            The zero-based index at which to insert a new child. Valid values are 
            0 - [number of children]. The child node is inserted before the existing child at that location.
            </param>
            <returns>The new child node.</returns>
            <remarks>
            Nodes can only be inserted in levels 1 - 7. An exception will be thrown if this function is called on a level 0 node.
            </remarks>
            <example>
            <code>
            Insert(0); // inserts the child in the first position.
            Insert([number of children]); // inserts the child in the last position.
            </code>
            </example>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddLevel0ChildrenException">Attempted 
            to add a node to a level 0 node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddOutOfRangeException">The index position
            is out of range for adding a new node.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeAddException">An error occurred 
            while adding a node.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.GetChild(System.Int32)">
            <summary>Gets the child node at the specified index.</summary>
            <param name="index">Zero-based index of the desired node.</param>
            <returns>Returns a null value if specified node could not be found; otherwise returns the node at the index.</returns>
            <remarks>An exception is thrown if this function is called on a level zero node.</remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeLevelException">The specified
            node level is invalid.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.GetChild(System.Int32,Emc.InputAccel.Workflow.Client.ILevel)">
            <summary>
            Gets a descendant of the current node at the specified index and level.
            </summary>
            <remarks>
            This method finds the specified descendant of the node. For example, 
            it can find the 15th page within a level 2 descendant of the node, ignoring 
            any level 1 nodes in the tree.
            </remarks>
            <param name="index">
            Zero-based index of the desired node (0 is the first descendant).
            </param>
            <param name="level">
            Level of the desired node. Must be less than this node's level.
            </param>
            <returns>Returns a null value if the specified node could not be found; otherwise, the found node.</returns>
            <remarks>
            An exception is thrown if this function is called on a level zero node or if the level is greater than or
            equal to the current node level.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeLevelException">The specified
            node level is invalid.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Move(Emc.InputAccel.Workflow.Client.INode)">
            <summary>
            Moves the current node to the location directly after the specified destination node.
            </summary>
            <remarks>
            If the current node and the destination node are of the same level, the current node 
            becomes the next peer of the destination node. If the current node is of a lower level 
            than the destination node, the current node will become the first descendant of the 
            destination node. If the current node is a level 0 node and the destination node is a level 2 
            node, the current node will become the first page in the first level 1 node within 
            the destination (level 2) node. The level 1 node must exist prior to the move.
            </remarks>
            <param name="destination">
            Destination node after which this node will be moved. Destination node's level must
            be greater than or equal to the current node's level.
            </param>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeMoveException">An error occured while moving 
            the node.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Move(Emc.InputAccel.Workflow.Client.INode,System.Int32)">
            <summary>Moves the node and the specified number of peer nodes to the location directly
            after the specified destination node.</summary>
            <remarks>If this node and the destination node are of the same level, this node 
            becomes the next peer of the destination node. If this node is of a lower level 
            than the destination node, this node will become the first descendant of the 
            destination node.  If this node is a level 0 node and the destination node is a level 2 
            node, this node will become the first page in the first level 1 node within 
            the destination (level 2) node.  The level 1 node must exist prior to the move.</remarks>
            <param name="destination">Destination node, after which this node will be moved. Destination's level must
            be greater than or equal to this node's level.</param>
            <param name="count">Number of subsequent peer nodes to move, including this node. 
            (Must be at least 1.) If greater than the number of subsequent peer nodes, only 
            this node and the subsequent peers of this node are moved. For example, this node
            is the second of four pages in a level 1 node, and Count is 3 or greater, only three
            pages will be moved.</param>
            <returns>Number of nodes successfully moved.</returns>
            <exclude>Not supported</exclude>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Emc.InputAccel.Workflow.Client.INode.GetFormattedString(System.String,System.Int32,System.String)" -->
        <member name="M:Emc.InputAccel.Workflow.Client.INode.FindFirstTaskedChild(Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Finds the first child node that contains a task to process.
            </summary>
            <param name="step">
            The step where the child node resides.
            </param>
            <remarks>
            Call this method recursively to find the first node that has a task waiting to 
            be processed. Use this method if you need to process nodes in the order they are found in the
            tree. (Normally, the InputAccel Server does not guarantee that tasks are scheduled in the order 
            the nodes are arranged in the tree.) After a task has been found, your module can set values for 
            the task by using the SetValue...() methods, and can operate on the node as if it had a task.
            However, this method does not actually send the task to the module, and no prefetching of tasks 
            occurs. Your module can clear the task by calling <c>TaskClear</c>. If you clear the task, you can
            call <c>FindFirstTaskedChild</c> again to find the next node.
            </remarks>
            <returns>
            The first node with a task to process.
            </returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Retrigger(Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Fires the Retrigger event in the IPP for this node.
            </summary>
            <param name="step">The step to retrigger.</param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.CallNotify(Emc.InputAccel.Workflow.Client.IStep,System.String)">
            <summary>
            Initiates a call to the IPP on the InputAccel Server.
            </summary>
            <param name="step"></param>
            <param name="reason"></param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.TaskClear(Emc.InputAccel.Workflow.Client.IStep,System.Int32)">
            <summary>
            Finishes a task that was manually invoked. 
            </summary>
            <param name="status">Status to send to the InputAccel Server. If set to IA_SUCCESS, 
            the step's Finish routine is called; otherwise, the Finish routine is not called.</param>
            <param name="step">The step that received the task.</param>
            <remarks>Use this method to finish a task (and call its Finish routine) 
            instead of calling TaskFinish when the task was not received in the normal 
            way (that is, by handling new task events). For example, you would need to
            use the TaskClear() method when you got a task to process by calling the 
            FindFirstTaskedChild() method and invoked the task by calling the TaskPrepare() 
            method. </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.TaskPrepare(Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Invokes the IPP <c>Prepare</c> routine for the specified step.
            </summary>
            <param name="step">The step receiving the task.</param>
            <remarks>
            This method is generally used in conjunction with <c>FindFirstTaskedChild()</c> 
            and <c>TaskClear()</c>. When <c>FindFirstTaskChild()</c> is used to get a task to process 
            (rather than the standard way of handling new task events), the <c>Prepare</c> routine
            for the node/step is not executed. Calling <c>TaskPrepare()</c> causes the <c>Prepare</c>
            event to be executed for the node. When the task completes, call <c>TaskClear()</c>
            to finish the task and invoke its <c>Finish</c> routine.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.CallNotifyWait(Emc.InputAccel.Workflow.Client.IStep,System.String)">
            <summary>
            This version of call notify waits for a response.
            </summary>
            <param name="reason"></param>
            <param name="step"></param>
            <returns></returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Index">
            <summary>
            Returns the index of the node within the parent.
            </summary>
            <returns>Index of the node within the parent.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Index(Emc.InputAccel.Workflow.Client.ILevel)">
            <summary>
            Returns the index of the node within the specified level.
            </summary>
            <param name="level">Parent level from which to count.</param>
            <returns>Index of the node within the specified level.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.GetFormattedValue(System.String,System.Int32,System.String)">
            <summary>
            Gets a formatted node value.
            </summary>
            <param name="format">Format string which may contain any printable ASCII characters. If the parameter
            contains an embedded @xxx, the string is evaluated as explained in the following tables.
                <list type="table">
                    <listheader><term>Value</term><term>Description</term><description>Example</description></listheader>
                    <item>
                        <term>
                            @x
                        </term>
                        <term>
                            Gets the index of the node at the specified xth level, within the level x+1.
                        </term>
                        <description>
                            Format=@2.@1.@0 - returns "1.3.24" | Gets a string value that has a Box.Folder.Page format. 
                            (The index of the level 2 node, followed by the level 1 node, followed by the level 0 node.)
                        </description>
                    </item>
                    <item>
                        <term>
                            @xy
                        </term>
                        <term>
                            If x&lt;y, gets the index of the node at the specified xth level within the specified level y.
                        </term>
                        <description>
                            Format=Page @07 - returns "Page 32" | Gets the word "Page" followed by the index of the current node, 
                            beginning with the first node in the tree (the level 0 node within the level 7 node). If you change
                            @07 to @01, then page numbering will reset to 1 each time a new folder (level 1 node) is encountered.
                        </description>
                    </item>
                    <item>
                        <term>
                            @xy
                        </term>
                        <term>
                             If x&gt;y, gets the number of the y level children of x, where x must be the current level.
                        </term>
                        <description>
                            Format=Pagecount: @10 - returns "Pagecount: 47" | Gets the word "Pagecount:" followed by the number
                            of level 0 nodes (pages, in this example) wihin the current level 1 node.
                        </description>
                    </item>
                    <item>
                        <term>
                            @n
                        </term>
                        <term>
                            Gets the hexadecimal node number.
                        </term>
                        <description>
                            Format=@n - returns "B9" | Gets the unique node number in hexadecimal. This is different than a node 
                            index, which is a sequential number and not necessarily unique. Consider using "0x@n to prepend "0x" to 
                            indicate hexadecimal.
                        </description>
                    </item>
                    <item>
                        <term>
                            @N
                        </term>
                        <term>
                            Gets the decimal node number.
                        </term>
                        <description>
                            Format=@N - returns "185" | Gets the unique node number in decimal. This is different than a node index, 
                            which is a sequential number an not necessarily unique.
                        </description>
                    </item>
                    <item>
                        <term>
                            @l (lower case L)
                        </term>
                        <term>
                            Internal use only. Gets the number of pixcache locks on the current node.
                        </term>
                        <description>
                            Format=@l - returns "3" | A value of "-" means that the node is not in pixcache.
                        </description>
                    </item>
                    <item>
                        <term>
                            @L
                        </term>
                        <term>
                            Internal use only. Gets the total number of locks in the pixcache.
                        </term>
                        <description>
                            Format=@L - returns "27"
                        </description>
                    </item>
                    <item>
                        <term>
                            TreeVersion
                        </term>
                        <term>
                            Gets the local InputAccel version number for the tree, used internally to keep the tree synchronized and up-to-date. 
                            Whenever the tree changes, its version number is incremented. Since this format string is not cached, it may not be the
                            same as the special value #(TreeVersion), which is the cached version number.
                        </term>
                        <description>
                            Format=TreeVersion - returns "56"
                        </description>
                    </item>
                    <item>
                        <term>
                            @(SpecialValue)
                        </term>
                        <term>
                            Gets a special string IA Value.
                        </term>
                        <description>
                            See the following Special Value list.
                        </description>
                    </item>
                    <item>
                        <term>
                            @[SpecialValue]
                        </term>
                        <term>
                             Gets a special string IA Value. If no value is found, search previous nodes until the value is found.
                        </term>
                        <description>
                            See the following Special Value list.
                        </description>
                    </item>
                </list>
                <list type="table">
                    <listheader><term>Special Value</term><term>Description</term><description>Example</description></listheader>
                    <item>
                        <term>
                            BatchName 
                        </term>
                        <term>
                            The name of the batch that owns the current node.
                        </term>
                        <description>
                            Format=@(BatchName) - returns "MyBatch"
                        </description>
                    </item>
                    <item>
                        <term>
                            Description 
                        </term>
                        <term>
                            The description string of the batch that owns the current node.
                        </term>
                        <description>
                            Format=@(Description) - returns "A batch I created for capturing my personal documents"
                        </description>
                    </item>
                    <item>
                        <term>
                            ProcessName 
                        </term>
                        <term>
                            The name of the process from which the batch that owns the current node was created.
                        </term>
                        <description>
                            Format=@(ProcessName) - returns "Image 1 - Scan + Export Images"
                        </description>
                    </item>
                    <item>
                        <term>
                            TreeVersion 
                        </term>
                        <term>
                            The cached InputAccel Server version number for the tree, used interally to keep the tree 
                            synchronized and up-to-date. Whenever the tree changes, its version number is incremented. Since this 
                            special value is cached, it may not be the same as the format string "TreeVersion",
                            which is the local version number.
                        </term>
                        <description>
                            Format=@(ProcessName) - returns "Image 1 - Scan + Export Images"
                        </description>
                    </item>
                    <item>
                        <term>
                            Priority 
                        </term>
                        <term>
                            The priority of the batch that owns the current node.
                        </term>
                        <description>
                            Format=@(Priority) - returns "50"
                        </description>
                    </item>
                    <item>
                        <term>
                            $step=inst/Priority
                        </term>
                        <term>
                            The priority of the specified step that is declared in the batch that owns the 
                            current node. Although the Administration Console and ScanPlus module set priority 
                            only of entire batches, the API supports
                            setting each step to a different priority to optimize overall performance.
                        </term>
                        <description>
                            Format=@($step=ocr/Priority) - returns "10"
                        </description>
                    </item>
                </list>
            </param>
            <param name="flags">A bit field containing the flag listed below.
                <list type="table">
                    <listheader><term>Value</term><description>Description</description></listheader>
                    <item>
                        <term>
                            1
                        </term>
                        <description>
                            Enclose the return value in quotes.
                        </description>
                    </item>
                </list>
            </param>
            <param name="defaultValue">A default value to return if the specified value cannot be found.</param>
            <returns>The requested node values, or the string specified in the Default parameter if no value is 
            found.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeException">An error occured
            while working with an INode object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Value(Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Returns a value provider used to get and set IA Values.
            </summary>
            <param name="step">The step from which to get or set IA Values.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Children">
            <summary>
            Returns a list of child nodes.
            </summary>
            <returns>List of child nodes.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeLevelException">The specified
            node level is invalid.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.Children(Emc.InputAccel.Workflow.Client.ILevel)">
            <summary>
            Returns a list of child nodes at the specified level.
            </summary>
            <remarks>The level specified must be less than this node.</remarks>
            <param name="level">Tree level whose child nodes are to be included in the list. </param>
            <returns>
            List of child nodes at the specified level. An error is thrown if the current 
            node level is zero or the specified level is equal to or greater than the current node level.
            </returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.NodeLevelException">The specified
            node level is invalid.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.ToString">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.CreateLock(Emc.InputAccel.Workflow.Client.LockType,System.Int32)">
            <summary>
            Creates a modify lock or a delete lock.
            </summary>
            <param name="type">The type of lock to create.</param>
            <param name="timeout">Time, in milliseconds, that CreateLock spends waiting for a conflicting 
            lock to be released. CreateLock returns immediately if a saved modify lock prevents this 
            lock from succeeding.</param>
            <returns>
            An <see cref="T:Emc.InputAccel.Workflow.Client.ILock"/> object if lock creation succeeds. Returns null if a conflicting lock
            exists or if a saved modify lock exists.
            </returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.TreeLockException">An error occurred while
            creating or releasing a node lock.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INode.RestoreLock">
            <summary>
            Restore a saved Modify lock.
            </summary>
            <returns>
            An <see cref="T:Emc.InputAccel.Workflow.Client.ILock"/> object if the restore succeeds. Null is returned if a conflicting
            lock prevented the modify lock from being restored.
            </returns>
            <remarks>
            If a saved modify lock does not exist on this node, a modify lock
            will be created and returned. In other words, unless there is a conflicting lock
            a modify lock will always be returned.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.TreeLockException">An error occurred while
            creating or releasing a node lock.</exception>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.INode.Backside">
            <summary>
            Gets or sets the node if it represents the backside of a page. 
            </summary>       
            <returns>
            TRUE if the node represents the backside of a page. This property only applies to level 0 nodes.
            </returns>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.INode.Id">
            <summary>
            Gets the node ID.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.INode.Level">
            <summary>
            Returms the current level.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.INode.Tree">
            <summary>
            The <c>ITree</c> object to which this node belongs.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.INodeValueProvider">
            <summary>
            Gets and sets values from a node.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INodeValueProvider.#ctor(Emc.InputAccel.Workflow.Client.INode,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="batch"></param>
            <param name="key"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INodeValueProvider.SetDynamic``1(System.String,``0)">
            <summary>
            Creates a string value if it does not already exist. The value is 
            created at the level of the node assigned to this value provider.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="name">Value name.</param>
            <param name="value">The data to which to set the value.</param>
            <remarks>
            After a dynamic value has been created using this function, 
            <see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0)"/> and 
            <see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Get``1(System.String,``0)"/> can be used with the value.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.INodeValueProvider.SetDynamic``1(System.String,``0,System.Boolean)">
            <summary>
            Create a string value if it does not already exist. The value is
            created at the level of the node assigned to this value provider.
            </summary>
            <typeparam name="T">Value type</typeparam>
            <param name="name">Value name</param>
            <param name="value">The data to set the value to.</param>
            <param name="enableCaching">
            True to use the cache or false to bypass the cache and fetch the value directly from the server.
            Bypassing the cache will update the cache with that value.
            </param>
            <remarks>
            Once a dynamic value has been created using this function, 
            <see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0)"/> and 
            <see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Get``1(System.String,``0)"/> can be used with the value.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IProcess">
            <summary>
            Represents an InputAccel process.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IProcess.Delete">
            <summary>
            Deletes a process.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IProcess.NewBatchSecurity">
            <summary>
             Returns the security settings inherited by new batches created with this process.
            </summary>
            <returns>A security settings object.</returns>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IProcess.CreateBatch(System.String)">
            <summary>Creates a new batch based on this process.</summary>
            <param name="batchName">The name of the batch to create.</param>
            <returns>An object representing the newly created batch.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateAlreadyExistsException"></exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateProcessNotFoundException"></exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.BatchCreateException"></exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IProcess.Security">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IProcess.Dispose(System.Boolean)">
            <summary>Disposes the batch object.</summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IASecuritySet">
            <summary>
            Wraps <c>IASecuritySet</c> routines.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IServer">
            <summary>
            Represents an InpuAccel Server.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.IsAvailable">
            <summary>
            Returns TRUE if the server is available, otherwise FALSE.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.op_Implicit(Emc.InputAccel.Workflow.Client.IServer)~System.Void*">
            <summary>
            Provides an IAServer pointer suitable to be used with IACLNT32 functions
            </summary>
            <param name="server"></param>
            <returns></returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.CreateProcessDirectory(System.String)">
            <summary>
            Creates a process directory on an InputAccel Server.
            </summary>
            <param name="name">The name of the directory to create.</param>
            <returns>A process directory object which represents the directory on the server.</returns>
            <remarks>
            CreateProcessDirectory is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.ImportBatch(System.IO.Stream)">
            <exclude>Not supported</exclude>
            <remarks>
            ImportBatch is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.ImportBatch(System.IO.Stream,System.String)">
            <summary>
            Copies an InputAccel batch to this InputAccel Server from the specified stream.
            </summary>
            <param name="stream">Stream to copy the data from.</param>
            <param name="batchName">The new name of the batch or null if the batch name should come from the stream.</param>
            <returns>An IBatch object representing the newly imported batch.</returns>
            <remarks>
            ImportBatch is supported only when connected to one InputAccel Server; otherwise,
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ServerException">An error occurred while working with an IServer object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.InstallProcess(System.String,System.IO.Stream)">
            <summary>
            Install a process on this server.
            </summary>
            <param name="name">The name of the process.</param>
            <param name="stream">Stream containing the process.</param>        
            <returns>An IProcess object representing the newly installed process</returns>
            <remarks>
            InstallProcess is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ProcessInstallException"></exception>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.InstallProcess(System.String,System.IO.Stream,Emc.InputAccel.Workflow.Client.IProcessDirectory)">
            <summary>
            Installs a process on an InputAccel server.
            </summary>
            <param name="name">The name of the process.</param>
            <param name="stream">Stream containing the process.</param> 
            <param name="directory">Directory on InputAccel server to install process.</param>
            <returns>An IProcess object representing the newly installed process</returns>
            <remarks>
            InstallProcess is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ProcessInstallException"></exception>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.SetDate(System.Int32,System.String@,System.Int32@)">
            <summary>
            Reset the date on the server's hardware key (Dongle).
            </summary>
            <param name="step">a number from -1 to 3</param>
            <param name="key">A response key provided by InputAccel support.</param>
            <param name="handle">A pointer to the handle identifying the challenge/response process.</param>
            <remarks>
            SetDate is supported only when connected to one InputAccel Server, otherwise
            an exception is thrown if connected to a ScaleServer group.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.ServerException"></exception>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.ListConnections">
            <summary>
            Collection of client connections to this InputAccel Server.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.ListProcessDirectories">
            <summary>
            Retrieve an enumeration of process directories. These are directories on the server
            which hold processes.
            </summary>
            <returns>An enumeration of process directories</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.LogOff">
            <summary>
            LogOff from this server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.ListServerSettings">
            <summary>
             Get a list of settings for this server
            </summary>
            <returns>
             A collection of IServerSetting objects
             </returns>
             <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.Equals(System.Object)">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IServer.Equals(Emc.InputAccel.Workflow.Client.IServer)">
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.DongleDate">
            <summary>
            Gets the server date stored on the hardware security key.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.DateTime">
            <summary>
            The local date and time of the server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.Version">
            <summary>
            Gets the InputAccel Server version.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.ClusterNumber">
            <summary>
            Gets the ScaleServer cluster number.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.FreeDiskSpace">
            <summary>
            The amount of free server disk space, in KB.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.Id">
            <summary>
            Gets the InputAccel Server ID.
            </summary>
            <remarks>-1 represents an invalid ID.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.LicenseManager">
            <summary>
            Return the LicenseManager for this server.
            </summary>
            <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.LogOnInfo">
            <summary>
            Returns an object representing logon data.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.Client">
            <summary>
            Gets the IClient connection that this server belongs to.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.Security">
            <summary>
             Access server-wide permission settings
            </summary>
             <exclude>Not supported</exclude>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IServer.IsValid">
            <summary>
            Gets a value that specifies whether this object is valid.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ServerConnectionStateEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnServerAdd"/>, <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnServerDisconnect"/>, 
            <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnServerReconnect"/>, and <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnServerRemove"/> events.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ServerConnectionStateEventArgs.Server">
            <summary>
            Gets the InputAccel Server for which the connection status has changed.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IAStream">
            <summary>
            The <c>IAStream</c> class implements the <c>Stream</c> class that allows the user to perform file IO on an open <c>IAFile</c>.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStream.Flush">
            <summary><c>IAFile</c> version of Flush does not do anything at this time.</summary>
            <remarks>
            What does it mean to Flush the file?
            Flush can mimick the functionality that is implemented in the <c>Close</c> method without closing the handle to 
            the file.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Reads data from the file.</summary>
            <param name="buffer">Buffer to receive the data.</param>
            <param name="offset">Offset from the current location of the file pointer at which to start reading data.</param>
            <param name="count">Number of bytes to read.</param>
            <returns>Number of bytes read. Returns 0 when all bytes have been read.</returns>
            <remarks>Reads data from the file beginning at the current location of the file pointer. After a successful read, updates the file pointer to the position of after the last byte read.
            <b>The following constants are defined for exceptions that may occur:</b>
            <dl> <dt>IA_ERR_ACCESS</dt> <dd>Access was denied because the file was opened as write-only, there was no read access to the directory, or the file was locked.</dd>
            <dt>IA_ERR_HANDLE</dt> <dd>Bad file handle.</dd>
            <dt>IA_ERR_READ</dt> <dd>Other read error.</dd> </dl> </remarks> 
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStream.ReadByte">
            <summary>Reads a byte of data from an InputAccel or normal disk file.</summary>
            <returns>The byte that was read.</returns>
            <remarks><b>The following constants are defined for exceptions that may occur:</b>
            <dl><dt>IA_ERR_ACCESS</dt> <dd>Access to file was denied because the file was opened as write-only, there was no read access to the directory, or the file was locked.</dd>
            <dt>IA_ERR_HANDLE</dt> <dd>Bad file handle.</dd>
            <dt>IA_ERR_READ</dt> <dd>Other read error.</dd> </dl> </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the file pointer position in the file.</summary>
            <param name="offset">Number of bytes to move the file pointer.</param>
            <param name="origin">Location at which to start counting the offset, one of the constants listed in Remarks.</param>
            <returns>New position of the file pointer after the seek operation completes.</returns>
            <remarks><b>The following constants are defined as values for the Origin parameter:</b>
            <dl><dt>IA_FILE_SEEKSET</dt> <dd>Bye offset from the beginning of the file.</dd>
            <dt>IA_FILE_SEEKCURR</dt> <dd>Bye offset from the current location of the file pointer.</dd>
            <dt>IA_FILE_SEEKEND</dt> <dd>Bye offset from the end of the file.</dd></dl></remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the file, in bytes.
            </summary>
            <param name="value">Length of file in bytes.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Writes data to an InputAccel or normal disk file.</summary>
            <param name="buffer">Data buffer to use.</param>
            <param name="offset">Offset from current location of the file pointer at which to begin writing.</param>
            <param name="count">Number of bytes to write.</param>
            <remarks><b>The following constants are defined for exceptions that may occur:</b>
            <dl> <dt>IA_ERR_ACCESS</dt> <dd>Access was denied because the file was opened as read-only, there was no write access to the directory, or the file was locked.</dd>
            <dt>IA_ERR_DISKFULL</dt> <dd>Disk became full so all bytes were not written.</dd>
            <dt>IA_ERR_HANDLE</dt> <dd>Bad file handle.</dd>
            <dt>IA_ERR_WRITE</dt> <dd>Other write error.</dd> </dl> </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IAStream.WriteByte(System.Byte)">
            <summary>Writes a byte of data to the file.</summary>
            <param name="value">Byte of data to write to the file.</param>
            <remarks><b>The following constants are defined for exceptions that may occur:</b>
            <dl> <dt>IA_ERR_ACCESS</dt> <dd>Access was denied because the file was opened as read-only, there was no write access to the directory, or the file was locked.</dd>
            <dt>IA_ERR_DISKFULL</dt> <dd>Disk became full so all bytes were not written.</dd>
            <dt>IA_ERR_HANDLE</dt> <dd>Bad file handle.</dd>
            <dt>IA_ERR_WRITE</dt> <dd>Other write error.</dd> </dl> </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IAStream.CanRead">
            <summary>Returns TRUE: the file is always readable.</summary>
            <remarks>This member does not indicate whether a file is currently readable. Instead, 
            it indicates that the implementation of this interface supports reading. This 
            implementation supports reading of files, so this interface always returns TRUE.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IAStream.CanSeek">
            <summary>Returns TRUE: the file is always seekable.</summary>
            <remarks>This member does not indicate whether a file is currently seekable. Instead, 
            it indicates that the implementation of this interface supports seeking for the file. This 
            implementation supports seeking of files, so this interface always returns TRUE.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IAStream.CanWrite">
            <summary>Returns TRUE: the file is always writable.</summary>
            <remarks>This member does not indicate whether a file is currently writable. Instead, 
            it indicates that the implementation of this interface supports writing. This 
            implementation supports writing of files, so this interface always returns TRUE.</remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IAStream.Length">
            <summary>Returns the length of the file in bytes.</summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.IAStream.Position">
            <summary>Gets the byte offset from current location of the file pointer or sets byte offset from the beginning of the file.</summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskType">
            <summary>
            Represents the values for a task. The Client.NET layer is limiting the concept of a task
            to just a "Real" task received from the InputAccel Server. "Manual" tasks break that
            concept a little in that they are tied to a particular batch on a particular
            InputAccel Server, so therefore they are psuedo real tasks. "Fake" tasks, which are
            simply value caches (as are all the other types of caches), are completely
            hidden from the user of Client.NET.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ITask">
            <summary>
            Represents an InputAccel task.
            </summary>
            <remarks>
            This gets passed to the module during 
            the <see cref="E:Emc.InputAccel.QuickModule.IQuickModuleEvents.OnNewTask" /> event.
            <para>
            <c>ITask</c> objects become invalid when the InputAccel Server connection is lost, when the 
            batch that the task came from is deleted, or when the <see cref="M:Emc.InputAccel.Workflow.Client.ITask.Finish(System.Int32)" /> 
            or <see cref="M:Emc.InputAccel.Workflow.Client.ITask.SetOffline(System.Boolean)" /> methods 
            are called.
            </para>
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.#ctor(Emc.InputAccel.Workflow.Client.IServer,System.Void*)">
            <summary>
            Constructor for real task from server.
            </summary>
            <param name="server"></param>
            <param name="taskPtr"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.#ctor(Emc.InputAccel.Workflow.Client.IStep)">
            <summary>
            Constructor for manual task.
            </summary>
            <remarks>Used by <c>Client.CreateManualTask</c>.</remarks>
            <param name="step"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.#ctor(Emc.InputAccel.Workflow.Client.IServer)">
            <summary>
            Constructor for a fake task.
            </summary>
            <remarks>WARNING: Used only by <c>IACache</c>.</remarks>
            <param name="server"></param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.Commit(System.Boolean)">
            <summary>
            Called by the Cache to send this task to the InputAccel Server.
            </summary>
            <param name="finish">Finish the task and send it to the InputAccel if TRUE, cancel the task if FALSE.</param>       
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.op_Implicit(Emc.InputAccel.Workflow.Client.ITask)~System.Void*">
            <summary>
            Provides an <c>IATask</c> pointer suitable to be used with <c>IACLNT32</c> functions.
            </summary>
            <param name="task"></param>
            <returns></returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.op_Implicit(Emc.InputAccel.Workflow.Client.ITask)~System.IntPtr">
            <summary>
            Provides a IATask safe pointer suitable to be used with IACLNT32 functions
            </summary>
            <param name="task"></param>
            <returns></returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.ToString">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.Finish">
            <summary>
            Finishes this task with a result of Success.
            </summary>
            <remarks>
            Use <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="M:Emc.InputAccel.Workflow.Client.ICache.Commit"/> to commit this task to the server.
            Once this method is called the object is invalid and should not be used.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.Finish(System.Int32)">
            <summary>
            Finishes this task with a specific result code.
            </summary>
            <param name="result">The result code to return for this task.</param>
            <remarks>
            After this method is called, the object is invalid and should not be used.
            Use <see cref="M:Emc.InputAccel.Workflow.Client.ICache.Commit"/> to commit this task to the InputAccel Server.
            </remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.TaskAlreadyFinishedException">An attempt was made
            to access a task that is already finished.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.InvalidServerResourceException">An atempt was made
            to access an invalid InputAccel Server resource.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.Finish(System.Int32,System.Int32)">
            <summary>
            Finishes with a result code and a charge count.  
            </summary>
            <param name="result">The result code for this task.</param>
            <param name="charge">The number of "pages" to charge the license for this task.</param>
            <remarks>
            Use <see cref="T:Emc.InputAccel.Workflow.Client.ICache"/>.<see cref="M:Emc.InputAccel.Workflow.Client.ICache.Commit"/> to commit this task to the server.
            Once this method is called the object is invalid and should not be used.
            </remarks>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.Value">
            <summary>
            Returns a value provider used to get and set IA Values in this task.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITask.SetOffline(System.Boolean)">
            <summary>
            Sets a task in offline mode for later processing.
            </summary>
            <param name="syncBatch">
            Specify whether the batch is synchronized on the server disk.
            </param>
            <remarks>After this method is called the task object is invalid and should not be used.</remarks>
            <exception cref="T:Emc.InputAccel.Workflow.Client.TaskAlreadyFinishedException">A attempt was made to access
            a task that is already finsihed.</exception>
            <exception cref="T:Emc.InputAccel.Workflow.Client.OfflineTaskException">An error occurred while working with 
            an offline task.</exception>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITask.IsValid">
            <summary>
            Gets a value that specifies whether this object is valid.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITask.Type">
            <summary>
            Gets the type of task. Values are Real, Manual, or Fake.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITask.Batch">
            <summary>
            Gets the batch that this task came from.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITask.Step">
            <summary>
            Gets the step that this task came from.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITask.Node">
            <summary>
            Gets the tree node that the module is to process for this task.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.TaskEventArgs">
            <summary>
            Represents the argument passed in the <see cref="E:Emc.InputAccel.Workflow.Client.IClient.OnNewTask"/> event.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.TaskEventArgs.Task">
            <summary>
            Gets the task to be processed.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ITree">
            <summary>
            Represents the batch tree.
            </summary>	
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.SetTreeCallbacks(System.Boolean,Emc.InputAccel.Workflow.Client.TreeEventReason)">
            <summary>
            Sets or clears tree-related callbacks.
            </summary>
            <param name="set">Set (true) or clear (false) the callbacks.</param>
            <remarks>Set these callbacks before deleting the batch or adding/moving/deleting a node.</remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.OldLocalTreeFunction(System.Void*,Emc.InputAccel.Workflow.Client.TreeEventReason)">
            <summary>
            Callback function that is used whenever an operation is done on an old tree. 
            </summary>
            <param name="hTree">The tree in which the operation is made</param>
            <returns>
            The default return value is IA_ERR_OLDLOCALTREE to indicate that the operation is canceled.
            </returns>
            <remarks>
            Client32 will use a callback function to handle a warning to the user that an operation is being 
            performed on an old tree. This could happen if two module instances are working on the same tree
            and one deletes a node then the other deletes another node. The tree in the second module instance
            does not know about the operation performed by the first instance.
            </remarks>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.op_Implicit(Emc.InputAccel.Workflow.Client.ITree)~System.Void*">
            <summary>
            Provides a <c>IATree</c> pointer suitable to be used with <c>IACLNT32</c> functions.
            </summary>
            <param name="tree">The batch tree.</param>
            <returns>A pointer to the IATree object.</returns>
            <exclude>Not supported.</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.FlushCache">
            <summary>
            Flushes cached nodes from the client cache.
            </summary>
            <exception cref="T:Emc.InputAccel.Workflow.Client.TreeException">An error occured while 
            working with an <c>ITree</c> object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.FlushCache(System.Int32)">
            <summary>
            Flushes cached nodes from the client's cache with flags.
            </summary>
            <param name="flags">Flags that are affected when the flush is actually performed. 
            See IAClient for details.</param>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.RequestIds(System.Int32,System.Boolean)">
            <summary>
            TODO: Create XML documentation
            </summary>
            <param name="count"></param>
            <param name="synchronous"></param>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.OldLocalTreeWarning">
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.FindLastSavedLock">
            <summary>
            Finds the most recently saved Modify lock.
            </summary>
            <returns>An INode object with a saved Modify lock. Null is returned if no saved Modify locks are found.</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.FindLastSavedLock(Emc.InputAccel.Workflow.Client.INode@)">
            <summary>
            Finds the most recently saved Modify lock
            </summary>
            <param name="cursor">Node which is the cursor for the saved Modify lock</param>
            <returns>An INode object with a saved Modify lock. Null is returned if no saved Modify locks are found.</returns>
            <exclude>Not supported</exclude>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.GetSavedLockNodes">
            <summary>
            Returns a list of nodes containing saved Modify locks.
            </summary>
            <returns>A list of nodes containing saved Modify locks. An empty list is returned if no saved Modify locks exist.</returns>
            <exception cref="T:Emc.InputAccel.Workflow.Client.LockException">An error occurred while working with an <c>ILock</c> object.</exception>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ITree.Version">
            <summary>
            Returns the version of the tree.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.ITree.OnOldLocalTree">
            <summary>
            Occurs when the InputAccel Server notifies the client that its version
            of the batch tree is out of date. The module can subscribe to this message and display
            a warning.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.ITree.OnRemoveSavedLock">
            <summary>
            <c>OnRemoveSavedLock</c> is fired when a saved Modify lock prevents a tree operation from occurring. The consumer
            of <c>OnRemoveSavedLock</c> may choose to remove the saved lock.
            </summary>
        </member>
        <member name="E:Emc.InputAccel.Workflow.Client.ITree.OnLockWait">
            <summary>
            Occurs when an operation requires a lock but is blocked by a lock from a different module.
            The consumer of <c>OnLockWait</c> can continue or cancel the wait.
            </summary>
            <remarks>
            If this event is not handled, the wait is canceled by default.
            </remarks>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITree.Batch">
            <summary>
            Gets the batch that contains this tree.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ITree.Root">
            <summary>
            Gets the root node of this tree.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.ILogOnInfo">
            <summary>
            Parameter passed to <see cref="M:Emc.InputAccel.Workflow.Client.IClient.LogOn(Emc.InputAccel.Workflow.Client.ILogOnInfo)"/>.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILogOnInfo.SetPassword(System.Security.SecureString)">
            <summary>
            Sets the password to connect to the InputAccel Server.
            </summary>
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.ILogOnInfo.SetPassword(System.String)">
            <summary>
            Sets the password to connect to the InputAccel Server.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILogOnInfo.HostName">
            <summary>
            Gets or sets the hostname of the InputAccel Server.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILogOnInfo.UserName">
            <summary>
            The username used to connect to the InputAccel Server.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILogOnInfo.Password">
            <summary>
            Gets the password to connect to the InputAccel Server.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILogOnInfo.Domain">
            <summary>
            Gets or sets the Windows domain of the InputAccel Server.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILogOnInfo.Port">
            <summary>
            Gets or sets the TCP port or service name of the InputAccel Server.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.ILogOnInfo.LogOnError">
            <summary>
            Gets the last known logon error while connecting to an InputAccel Server.
            </summary>
            <returns>
            Gets an <see cref="T:Emc.InputAccel.Workflow.Client.ILogOnError" /> object 
            describing the last logon error while connecting to an InputAccel Server.
            </returns>
            <remarks>
            Gets the error encountered while connecting to an InputAccel Server.
            </remarks>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.ArgumentNullOrEmpty">
            <summary>
              Looks up a localized string similar to Argument cannot be null or empty..
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.ClientNotInitialized">
            <summary>
              Looks up a localized string similar to Client not initialized.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.Level">
            <summary>
              Looks up a localized string similar to Level {0}.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.LevelNameBatch">
            <summary>
              Looks up a localized string similar to Batch.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.LevelNameDocument">
            <summary>
              Looks up a localized string similar to Document.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.LevelNameFolder">
            <summary>
              Looks up a localized string similar to Folder.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.LevelNamePage">
            <summary>
              Looks up a localized string similar to Page.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.LevelNameStack">
            <summary>
              Looks up a localized string similar to Stack.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.NoAvailableServer">
            <summary>
              Looks up a localized string similar to Server not available.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.NotSpecified">
            <summary>
              Looks up a localized string similar to Not specified.
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.ParseConnection">
            <summary>
              Looks up a localized string similar to Unable to parse connection object string..
            </summary>
        </member>
        <member name="P:Emc.InputAccel.Workflow.Client.Resource.ServerNotInitialized">
            <summary>
              Looks up a localized string similar to Server not initialized.
            </summary>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IValueSerializable">
            <summary>
            An interface implemented by IA Value objects to retrieve member variables.
            </summary>   
            <remarks>Objects need to implement a public constructor. This interface is called 
            by the <see cref="T:Emc.InputAccel.Workflow.Client.IValueProvider"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0)"/> method, 
            so IA Value objects can implement it.
            <para>
            This constructor is responsible for retrieving member variables and has the signature: </para>
            <code>public Constructor(IValueProvider values)</code>
            <para>
            This class is instantiated by <see cref="T:Emc.InputAccel.Workflow.Client.IValueProvider"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0)"/>.
            </para>
            </remarks>
            <example>
            <para>This example writes the values directly:</para>
            <code>
            MyClass : IValueSerializable
            {
                 int variable1;
                 int variable2;
            
                 public MyClass(IValueProvider values)
                 {
                    variable1 = values.Get&lt;int&gt;("variable1", 0);   
                    variable2 = values.Get&lt;int&gt;("variable2", 0);
                 }
                 ...
            }
            </code>
            <para>This example uses a binary stream:</para>
            <code>
            MyClass2 : IValueSerializable
            {
                 int variable1;
                 int variable2;
            
                 public MyClass2(IValueProvider values)
                 {
                    MemoryStream ms = new MemoryStream(values.Get&lt;byte[]&gt;("values", null));
                    BinaryReader reader = new BinaryReader(ms);
                
                    variable1 = reader.ReadInt32(variable1);
                    variable2 = reader.ReadInt32(variable2);    
                    reader.Close();
                 }
                 ...
            }
            </code>
            </example>    
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueSerializable.GetObjectData(Emc.InputAccel.Workflow.Client.IValueProvider)">
            <summary>
            Called by <c>IValueProvider</c> to write an <see cref="T:Emc.InputAccel.Workflow.Client.IValueSerializable"/> object to the provider.
            </summary>        
            <param name="values">Value provider to write to.</param>
            <remarks>This method is called by 
            <see cref="T:Emc.InputAccel.Workflow.Client.IValueProvider"/>.<see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Set``1(System.String,``0)"/> to 
            serialize values.</remarks>
            <example>     
            <para>This example uses a binary stream to serialize values.</para>
            <code>        
            {
                MemoryStream ms = new MemoryStream();
                BinaryWriter writer = new BinaryWriter(ms);
                
                writer.Write(variable1);
                writer.Write(variable2);    
                writer.Close();
                values.Set&lt;byte[]&gt;("values", writer.GetBuffer());
            }
            </code>
            <para>This example writes the values directly to the provider.</para>
            <code>
            {
                values.Set&lt;int&gt;("variable1", variable1);
                values.Set&lt;int&gt;("variable2", variable2);
            }
            </code>
            </example>
        </member>
        <member name="T:Emc.InputAccel.Workflow.Client.IValueDeletable">
            <summary>
            IA Value objects can implement this interface so it can be called
            by the <see cref="M:Emc.InputAccel.Workflow.Client.IValueProvider.Delete()" /> method.  
            </summary>   
        </member>
        <member name="M:Emc.InputAccel.Workflow.Client.IValueDeletable.Delete(Emc.InputAccel.Workflow.Client.IValueProvider)">
            <summary>
            Called by <c>IValueProvider</c> so that the <see cref="T:Emc.InputAccel.Workflow.Client.IValueSerializable" /> object 
            can be deleted from the provider.
            </summary>        
            <param name="values">The value provider to which to write.</param>
            <remarks>This method is called by IValueProvider.Delete(String, IValueDeleteable) to delete values.</remarks>
            <example>     
            This example deletes the values.
            <code>
            {
                values.Delete("variable1");
                values.Delete("variable2");
            }
            </code>
            </example>
        </member>
    </members>
</doc>
